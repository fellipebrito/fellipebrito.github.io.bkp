;; Analyzed by ClojureScript 0.0-2850
{:defs {new-board {:protocol-inline nil, :name ttt.core/new-board, :variadic false, :file "src/ttt/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag string, :variadic false, :max-fixed-arity 0}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t19255 {:protocol-inline nil, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/ICheckState cljs.core/IWithMeta}, :name ttt.core/->t19255, :variadic false, :file "src/ttt/core.cljs", :method-params ([owner data game meta19256]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag ttt.core/t19255, :variadic false, :max-fixed-arity 4}), :line 131, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data game meta19256])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, restart {:protocol-inline nil, :name ttt.core/restart, :variadic false, :file "src/ttt/core.cljs", :end-column 15, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, win? {:protocol-inline nil, :name ttt.core/win?, :variadic false, :file "src/ttt/core.cljs", :end-column 12, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :test true}, game {:protocol-inline nil, :name ttt.core/game, :variadic false, :file "src/ttt/core.cljs", :end-column 12, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag ttt.core/t19255, :variadic false, :max-fixed-arity 2}), :line 130, :end-line 130, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, winners {:file "src/ttt/core.cljs", :line 19, :column 1, :end-line 19, :end-column 14, :test true, :name ttt.core/winners}, move {:protocol-inline nil, :name ttt.core/move, :variadic false, :file "src/ttt/core.cljs", :end-column 12, :method-params ([board place player human?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 4}), :line 57, :end-line 57, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board place player human?])), :test true}, matches {:protocol-inline nil, :name ttt.core/matches, :variadic false, :file "src/ttt/core.cljs", :end-column 15, :method-params ([matcher board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 2}), :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matcher board])), :test true}, robot-move {:protocol-inline nil, :name ttt.core/robot-move, :variadic false, :file "src/ttt/core.cljs", :end-column 18, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :test true}, app-state {:file "src/ttt/core.cljs", :line 31, :column 1, :end-line 31, :end-column 16, :test true, :name ttt.core/app-state}, t19255 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/ICheckState cljs.core/IWithMeta}, :name ttt.core/t19255, :file "src/ttt/core.cljs", :type true, :anonymous true, :column 3, :line 131, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, show-board {:protocol-inline nil, :name ttt.core/show-board, :variadic false, :file "src/ttt/core.cljs", :end-column 18, :method-params ([owner data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([owner data])), :test true}, draw? {:protocol-inline nil, :name ttt.core/draw?, :variadic false, :file "src/ttt/core.cljs", :end-column 13, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :test true}, t19250 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/ICheckState cljs.core/IWithMeta}, :name ttt.core/t19250, :file "src/ttt/core.cljs", :type true, :anonymous true, :column 3, :line 131, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t19250 {:protocol-inline nil, :protocols #{om.core/IRenderState cljs.core/IMeta om.core/IInitState om.core/ICheckState cljs.core/IWithMeta}, :name ttt.core/->t19250, :variadic false, :file "src/ttt/core.cljs", :method-params ([owner data game meta19251]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag ttt.core/t19250, :variadic false, :max-fixed-arity 4}), :line 131, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data game meta19251])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}}, :name ttt.core, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async, html jayq.core, chan cljs.core.async, css jayq.core, $ jayq.core, put! cljs.core.async}, :requires {dom om.dom, om.dom om.dom, cljs.core.async cljs.core.async, dt clojure.data, jayq.core jayq.core, om.core om.core, om om.core, str clojure.string, clojure.string clojure.string, clojure.data clojure.data}, :imports nil}