;; Analyzed by ClojureScript 0.0-2850
{:defs {t36093 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t36093, :file "/var/www/personal/ttt/src/ttt/core.cljs", :type true, :anonymous true, :column 5, :line 46, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, new-board {:protocol-inline nil, :name om-tut.core/new-board, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag string, :variadic false, :max-fixed-arity 0}), :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, win? {:protocol-inline nil, :name om-tut.core/win?, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :end-column 12, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :test true}, ->t36093 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t36093, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :method-params ([owner data meta36094]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag om-tut.core/t36093, :variadic false, :max-fixed-arity 3}), :line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner data meta36094])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, game {:protocol-inline nil, :name om-tut.core/game, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, winners {:file "/var/www/personal/ttt/src/ttt/core.cljs", :line 27, :column 3, :end-line 27, :end-column 16, :test true, :name om-tut.core/winners}, move {:protocol-inline nil, :name om-tut.core/move, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :end-column 12, :method-params ([board place player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{boolean any}, :variadic false, :max-fixed-arity 3}), :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([board place player])), :test true}, matches {:protocol-inline nil, :name om-tut.core/matches, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :end-column 15, :method-params ([matcher board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/LazySeq, :variadic false, :max-fixed-arity 2}), :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matcher board])), :test true}, app-state {:file "/var/www/personal/ttt/src/ttt/core.cljs", :line 42, :column 1, :end-line 42, :end-column 20, :test true, :name om-tut.core/app-state}, draw? {:protocol-inline nil, :name om-tut.core/draw?, :variadic false, :file "/var/www/personal/ttt/src/ttt/core.cljs", :end-column 13, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 1}), :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :test true}}, :name om-tut.core, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :requires {cljs.core.async cljs.core.async, str clojure.string, clojure.string clojure.string, dom om.dom, om.dom om.dom, om om.core, om.core om.core, figwheel.client figwheel.client, fw figwheel.client}, :imports nil}