// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__23823__delegate = function (args){
return console.log.apply(console,(function (){var G__23822 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__23822) : cljs.core.into_array.call(null,G__23822));
})());
};
var G__23823 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23824__i = 0, G__23824__a = new Array(arguments.length -  0);
while (G__23824__i < G__23824__a.length) {G__23824__a[G__23824__i] = arguments[G__23824__i + 0]; ++G__23824__i;}
  args = new cljs.core.IndexedSeq(G__23824__a,0);
} 
return G__23823__delegate.call(this,args);};
G__23823.cljs$lang$maxFixedArity = 0;
G__23823.cljs$lang$applyTo = (function (arglist__23825){
var args = cljs.core.seq(arglist__23825);
return G__23823__delegate(args);
});
G__23823.cljs$core$IFn$_invoke$arity$variadic = G__23823__delegate;
return G__23823;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__23827 = x;
return goog.isString(G__23827);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__23829 = x__$1;
return goog.typeOf(G__23829);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__16133__auto__ = ty;
if(cljs.core.truth_(and__16133__auto__)){
return ty.cljs$lang$type;
} else {
return and__16133__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__23831 = obj;
return goog.typeOf(G__23831);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__23833 = Symbol;
return goog.typeOf(G__23833);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__17032__auto___23835 = len;
var i_23836 = (0);
while(true){
if((i_23836 < n__17032__auto___23835)){
(new_arr[i_23836] = (arr[i_23836]));

var G__23837 = (i_23836 + (1));
i_23836 = G__23837;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__23838 = (i + (1));
i = G__23838;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__23847__delegate = function (array,i,idxs){
var G__23844 = aget;
var G__23845 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__23846 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23844,G__23845,G__23846) : cljs.core.apply.call(null,G__23844,G__23845,G__23846));
};
var G__23847 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__23848__i = 0, G__23848__a = new Array(arguments.length -  2);
while (G__23848__i < G__23848__a.length) {G__23848__a[G__23848__i] = arguments[G__23848__i + 2]; ++G__23848__i;}
  idxs = new cljs.core.IndexedSeq(G__23848__a,0);
} 
return G__23847__delegate.call(this,array,i,idxs);};
G__23847.cljs$lang$maxFixedArity = 2;
G__23847.cljs$lang$applyTo = (function (arglist__23849){
var array = cljs.core.first(arglist__23849);
arglist__23849 = cljs.core.next(arglist__23849);
var i = cljs.core.first(arglist__23849);
var idxs = cljs.core.rest(arglist__23849);
return G__23847__delegate(array,i,idxs);
});
G__23847.cljs$core$IFn$_invoke$arity$variadic = G__23847__delegate;
return G__23847;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__23850 = null;
if (arguments.length > 2) {
var G__23851__i = 0, G__23851__a = new Array(arguments.length -  2);
while (G__23851__i < G__23851__a.length) {G__23851__a[G__23851__i] = arguments[G__23851__i + 2]; ++G__23851__i;}
G__23850 = new cljs.core.IndexedSeq(G__23851__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__23850);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__23860__delegate = function (array,idx,idx2,idxv){
var G__23856 = aset;
var G__23857 = (array[idx]);
var G__23858 = idx2;
var G__23859 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__23856,G__23857,G__23858,G__23859) : cljs.core.apply.call(null,G__23856,G__23857,G__23858,G__23859));
};
var G__23860 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__23861__i = 0, G__23861__a = new Array(arguments.length -  3);
while (G__23861__i < G__23861__a.length) {G__23861__a[G__23861__i] = arguments[G__23861__i + 3]; ++G__23861__i;}
  idxv = new cljs.core.IndexedSeq(G__23861__a,0);
} 
return G__23860__delegate.call(this,array,idx,idx2,idxv);};
G__23860.cljs$lang$maxFixedArity = 3;
G__23860.cljs$lang$applyTo = (function (arglist__23862){
var array = cljs.core.first(arglist__23862);
arglist__23862 = cljs.core.next(arglist__23862);
var idx = cljs.core.first(arglist__23862);
arglist__23862 = cljs.core.next(arglist__23862);
var idx2 = cljs.core.first(arglist__23862);
var idxv = cljs.core.rest(arglist__23862);
return G__23860__delegate(array,idx,idx2,idxv);
});
G__23860.cljs$core$IFn$_invoke$arity$variadic = G__23860__delegate;
return G__23860;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__23863 = null;
if (arguments.length > 3) {
var G__23864__i = 0, G__23864__a = new Array(arguments.length -  3);
while (G__23864__i < G__23864__a.length) {G__23864__a[G__23864__i] = arguments[G__23864__i + 3]; ++G__23864__i;}
G__23863 = new cljs.core.IndexedSeq(G__23864__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__23863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__23870 = (function (a,x){
a.push(x);

return a;
});
var G__23871 = [];
var G__23872 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23870,G__23871,G__23872) : cljs.core.reduce.call(null,G__23870,G__23871,G__23872));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__23873__i = 0, G__23873__a = new Array(arguments.length -  2);
while (G__23873__i < G__23873__a.length) {G__23873__a[G__23873__i] = arguments[G__23873__i + 2]; ++G__23873__i;}
  args = new cljs.core.IndexedSeq(G__23873__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__23874){
var obj = cljs.core.first(arglist__23874);
arglist__23874 = cljs.core.next(arglist__23874);
var s = cljs.core.first(arglist__23874);
var args = cljs.core.rest(arglist__23874);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj23876 = {};
return obj23876;
})();


cljs.core.IFn = (function (){var obj23878 = {};
return obj23878;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23924 = x__16789__auto__;
return goog.typeOf(G__23924);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23926 = x__16789__auto__;
return goog.typeOf(G__23926);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23928 = x__16789__auto__;
return goog.typeOf(G__23928);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23930 = x__16789__auto__;
return goog.typeOf(G__23930);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23932 = x__16789__auto__;
return goog.typeOf(G__23932);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23934 = x__16789__auto__;
return goog.typeOf(G__23934);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23936 = x__16789__auto__;
return goog.typeOf(G__23936);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23938 = x__16789__auto__;
return goog.typeOf(G__23938);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23940 = x__16789__auto__;
return goog.typeOf(G__23940);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23942 = x__16789__auto__;
return goog.typeOf(G__23942);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23944 = x__16789__auto__;
return goog.typeOf(G__23944);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23946 = x__16789__auto__;
return goog.typeOf(G__23946);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23948 = x__16789__auto__;
return goog.typeOf(G__23948);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23950 = x__16789__auto__;
return goog.typeOf(G__23950);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23952 = x__16789__auto__;
return goog.typeOf(G__23952);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23954 = x__16789__auto__;
return goog.typeOf(G__23954);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23956 = x__16789__auto__;
return goog.typeOf(G__23956);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23958 = x__16789__auto__;
return goog.typeOf(G__23958);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23960 = x__16789__auto__;
return goog.typeOf(G__23960);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23962 = x__16789__auto__;
return goog.typeOf(G__23962);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23964 = x__16789__auto__;
return goog.typeOf(G__23964);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__23966 = x__16789__auto__;
return goog.typeOf(G__23966);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj23968 = {};
return obj23968;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__16133__auto__ = value;
if(and__16133__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__16133__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16789__auto__ = (((value == null))?null:value);
return (function (){var or__16145__auto__ = (cljs.core._clone[(function (){var G__23972 = x__16789__auto__;
return goog.typeOf(G__23972);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clone["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23974 = {};
return obj23974;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._count[(function (){var G__23978 = x__16789__auto__;
return goog.typeOf(G__23978);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._count["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23980 = {};
return obj23980;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._empty[(function (){var G__23984 = x__16789__auto__;
return goog.typeOf(G__23984);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._empty["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23986 = {};
return obj23986;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._conj[(function (){var G__23990 = x__16789__auto__;
return goog.typeOf(G__23990);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23992 = {};
return obj23992;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__23998 = x__16789__auto__;
return goog.typeOf(G__23998);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__24000 = x__16789__auto__;
return goog.typeOf(G__24000);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj24002 = {};
return obj24002;
})();


cljs.core.ISeq = (function (){var obj24004 = {};
return obj24004;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._first[(function (){var G__24008 = x__16789__auto__;
return goog.typeOf(G__24008);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rest[(function (){var G__24012 = x__16789__auto__;
return goog.typeOf(G__24012);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj24014 = {};
return obj24014;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._next[(function (){var G__24018 = x__16789__auto__;
return goog.typeOf(G__24018);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj24020 = {};
return obj24020;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__24026 = x__16789__auto__;
return goog.typeOf(G__24026);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__24028 = x__16789__auto__;
return goog.typeOf(G__24028);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj24030 = {};
return obj24030;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__24034 = x__16789__auto__;
return goog.typeOf(G__24034);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc[(function (){var G__24038 = x__16789__auto__;
return goog.typeOf(G__24038);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj24040 = {};
return obj24040;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc[(function (){var G__24044 = x__16789__auto__;
return goog.typeOf(G__24044);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj24046 = {};
return obj24046;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._key[(function (){var G__24050 = x__16789__auto__;
return goog.typeOf(G__24050);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._val[(function (){var G__24054 = x__16789__auto__;
return goog.typeOf(G__24054);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._val["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj24056 = {};
return obj24056;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin[(function (){var G__24060 = x__16789__auto__;
return goog.typeOf(G__24060);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj24062 = {};
return obj24062;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._peek[(function (){var G__24066 = x__16789__auto__;
return goog.typeOf(G__24066);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._peek["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._pop[(function (){var G__24070 = x__16789__auto__;
return goog.typeOf(G__24070);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj24072 = {};
return obj24072;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n[(function (){var G__24076 = x__16789__auto__;
return goog.typeOf(G__24076);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj24078 = {};
return obj24078;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref[(function (){var G__24082 = x__16789__auto__;
return goog.typeOf(G__24082);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj24084 = {};
return obj24084;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref_with_timeout[(function (){var G__24088 = x__16789__auto__;
return goog.typeOf(G__24088);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj24090 = {};
return obj24090;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._meta[(function (){var G__24094 = x__16789__auto__;
return goog.typeOf(G__24094);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj24096 = {};
return obj24096;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._with_meta[(function (){var G__24100 = x__16789__auto__;
return goog.typeOf(G__24100);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._with_meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj24102 = {};
return obj24102;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__24108 = x__16789__auto__;
return goog.typeOf(G__24108);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__24110 = x__16789__auto__;
return goog.typeOf(G__24110);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj24112 = {};
return obj24112;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._kv_reduce[(function (){var G__24116 = x__16789__auto__;
return goog.typeOf(G__24116);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj24118 = {};
return obj24118;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._equiv[(function (){var G__24122 = x__16789__auto__;
return goog.typeOf(G__24122);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._equiv["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj24124 = {};
return obj24124;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._hash[(function (){var G__24128 = x__16789__auto__;
return goog.typeOf(G__24128);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._hash["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj24130 = {};
return obj24130;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._seq[(function (){var G__24134 = x__16789__auto__;
return goog.typeOf(G__24134);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj24136 = {};
return obj24136;
})();


cljs.core.IList = (function (){var obj24138 = {};
return obj24138;
})();


cljs.core.IRecord = (function (){var obj24140 = {};
return obj24140;
})();


cljs.core.IReversible = (function (){var obj24142 = {};
return obj24142;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rseq[(function (){var G__24146 = x__16789__auto__;
return goog.typeOf(G__24146);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rseq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj24148 = {};
return obj24148;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq[(function (){var G__24152 = x__16789__auto__;
return goog.typeOf(G__24152);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq_from[(function (){var G__24156 = x__16789__auto__;
return goog.typeOf(G__24156);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._entry_key[(function (){var G__24160 = x__16789__auto__;
return goog.typeOf(G__24160);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._entry_key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._comparator[(function (){var G__24164 = x__16789__auto__;
return goog.typeOf(G__24164);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._comparator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj24166 = {};
return obj24166;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._write[(function (){var G__24170 = x__16789__auto__;
return goog.typeOf(G__24170);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._write["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._flush[(function (){var G__24174 = x__16789__auto__;
return goog.typeOf(G__24174);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._flush["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj24176 = {};
return obj24176;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._pr_writer[(function (){var G__24180 = x__16789__auto__;
return goog.typeOf(G__24180);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj24182 = {};
return obj24182;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__16133__auto__ = d;
if(and__16133__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16789__auto__ = (((d == null))?null:d);
return (function (){var or__16145__auto__ = (cljs.core._realized_QMARK_[(function (){var G__24186 = x__16789__auto__;
return goog.typeOf(G__24186);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj24188 = {};
return obj24188;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._notify_watches[(function (){var G__24192 = x__16789__auto__;
return goog.typeOf(G__24192);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._add_watch[(function (){var G__24196 = x__16789__auto__;
return goog.typeOf(G__24196);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._remove_watch[(function (){var G__24200 = x__16789__auto__;
return goog.typeOf(G__24200);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj24202 = {};
return obj24202;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._as_transient[(function (){var G__24206 = x__16789__auto__;
return goog.typeOf(G__24206);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._as_transient["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj24208 = {};
return obj24208;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._conj_BANG_[(function (){var G__24212 = x__16789__auto__;
return goog.typeOf(G__24212);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._persistent_BANG_[(function (){var G__24216 = x__16789__auto__;
return goog.typeOf(G__24216);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj24218 = {};
return obj24218;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_BANG_[(function (){var G__24222 = x__16789__auto__;
return goog.typeOf(G__24222);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj24224 = {};
return obj24224;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__24228 = x__16789__auto__;
return goog.typeOf(G__24228);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj24230 = {};
return obj24230;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__24234 = x__16789__auto__;
return goog.typeOf(G__24234);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._pop_BANG_[(function (){var G__24238 = x__16789__auto__;
return goog.typeOf(G__24238);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj24240 = {};
return obj24240;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__24244 = x__16789__auto__;
return goog.typeOf(G__24244);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj24246 = {};
return obj24246;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._compare[(function (){var G__24250 = x__16789__auto__;
return goog.typeOf(G__24250);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._compare["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj24252 = {};
return obj24252;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._drop_first[(function (){var G__24256 = x__16789__auto__;
return goog.typeOf(G__24256);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._drop_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj24258 = {};
return obj24258;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_first[(function (){var G__24262 = x__16789__auto__;
return goog.typeOf(G__24262);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_rest[(function (){var G__24266 = x__16789__auto__;
return goog.typeOf(G__24266);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj24268 = {};
return obj24268;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_next[(function (){var G__24272 = x__16789__auto__;
return goog.typeOf(G__24272);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj24274 = {};
return obj24274;
})();

cljs.core._name = (function _name(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._name[(function (){var G__24278 = x__16789__auto__;
return goog.typeOf(G__24278);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._name["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._namespace[(function (){var G__24282 = x__16789__auto__;
return goog.typeOf(G__24282);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._namespace["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj24284 = {};
return obj24284;
})();


cljs.core.IReset = (function (){var obj24286 = {};
return obj24286;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._reset_BANG_[(function (){var G__24290 = x__16789__auto__;
return goog.typeOf(G__24290);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj24292 = {};
return obj24292;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__24302 = x__16789__auto__;
return goog.typeOf(G__24302);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__24304 = x__16789__auto__;
return goog.typeOf(G__24304);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__24306 = x__16789__auto__;
return goog.typeOf(G__24306);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__24308 = x__16789__auto__;
return goog.typeOf(G__24308);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj24310 = {};
return obj24310;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._vreset_BANG_[(function (){var G__24314 = x__16789__auto__;
return goog.typeOf(G__24314);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj24316 = {};
return obj24316;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._iterator[(function (){var G__24320 = x__16789__auto__;
return goog.typeOf(G__24320);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._iterator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__24323 = (4294967295);
var G__24324 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24323,G__24324) : Math.imul.call(null,G__24323,G__24324));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__24327 = a;
var G__24328 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24327,G__24328) : Math.imul.call(null,G__24327,G__24328));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__24329 = (i + (2));
var G__24330 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__24329;
h1 = G__24330;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj24332 = {};
return obj24332;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__24333 = (i + (1));
var G__24334 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__24333;
hash = G__24334;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj24338 = {};
return obj24338;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__24341 = o;
if(G__24341){
var bit__16819__auto__ = (G__24341.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16819__auto__) || (G__24341.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__24342 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24342) : Math.floor.call(null,G__24342));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24349 = a.ns;
var G__24350 = b.ns;
return goog.array.defaultCompare(G__24349,G__24350);
})();
if(((0) === nsc)){
var G__24351 = a.name;
var G__24352 = b.name;
return goog.array.defaultCompare(G__24351,G__24352);
} else {
return nsc;
}
}
} else {
var G__24353 = a.name;
var G__24354 = b.name;
return goog.array.defaultCompare(G__24353,G__24354);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__24356 = null;
var G__24356__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__24356__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__24356 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24356__2.call(this,self__,coll);
case 3:
return G__24356__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24356.cljs$core$IFn$_invoke$arity$2 = G__24356__2;
G__24356.cljs$core$IFn$_invoke$arity$3 = G__24356__3;
return G__24356;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args24355){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24355)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__24404 = null;
var G__24404__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__24404__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__24404__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__24404__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__24404__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__24404__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__24404__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__24404__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__24404__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__24404__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__24404__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__24404__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__24404__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__24404__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__24404__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__24404__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__24404__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__24404__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__24404__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__24404__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__24404__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__24404__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24360 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24361 = a;
var G__24362 = b;
var G__24363 = c;
var G__24364 = d;
var G__24365 = e;
var G__24366 = f;
var G__24367 = g;
var G__24368 = h;
var G__24369 = i;
var G__24370 = j;
var G__24371 = k;
var G__24372 = l;
var G__24373 = m;
var G__24374 = n;
var G__24375 = o;
var G__24376 = p;
var G__24377 = q;
var G__24378 = r;
var G__24379 = s;
var G__24380 = t;
var G__24381 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381) : cljs.core.apply.call(null,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381));
});
G__24404 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24404__1.call(this,self__);
case 2:
return G__24404__2.call(this,self__,a);
case 3:
return G__24404__3.call(this,self__,a,b);
case 4:
return G__24404__4.call(this,self__,a,b,c);
case 5:
return G__24404__5.call(this,self__,a,b,c,d);
case 6:
return G__24404__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24404__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24404__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24404__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24404__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24404__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24404__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24404__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24404__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24404__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24404__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24404__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24404__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24404__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24404__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24404__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24404__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24404.cljs$core$IFn$_invoke$arity$1 = G__24404__1;
G__24404.cljs$core$IFn$_invoke$arity$2 = G__24404__2;
G__24404.cljs$core$IFn$_invoke$arity$3 = G__24404__3;
G__24404.cljs$core$IFn$_invoke$arity$4 = G__24404__4;
G__24404.cljs$core$IFn$_invoke$arity$5 = G__24404__5;
G__24404.cljs$core$IFn$_invoke$arity$6 = G__24404__6;
G__24404.cljs$core$IFn$_invoke$arity$7 = G__24404__7;
G__24404.cljs$core$IFn$_invoke$arity$8 = G__24404__8;
G__24404.cljs$core$IFn$_invoke$arity$9 = G__24404__9;
G__24404.cljs$core$IFn$_invoke$arity$10 = G__24404__10;
G__24404.cljs$core$IFn$_invoke$arity$11 = G__24404__11;
G__24404.cljs$core$IFn$_invoke$arity$12 = G__24404__12;
G__24404.cljs$core$IFn$_invoke$arity$13 = G__24404__13;
G__24404.cljs$core$IFn$_invoke$arity$14 = G__24404__14;
G__24404.cljs$core$IFn$_invoke$arity$15 = G__24404__15;
G__24404.cljs$core$IFn$_invoke$arity$16 = G__24404__16;
G__24404.cljs$core$IFn$_invoke$arity$17 = G__24404__17;
G__24404.cljs$core$IFn$_invoke$arity$18 = G__24404__18;
G__24404.cljs$core$IFn$_invoke$arity$19 = G__24404__19;
G__24404.cljs$core$IFn$_invoke$arity$20 = G__24404__20;
G__24404.cljs$core$IFn$_invoke$arity$21 = G__24404__21;
G__24404.cljs$core$IFn$_invoke$arity$22 = G__24404__22;
return G__24404;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args24359){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24359)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24382 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24383 = a;
var G__24384 = b;
var G__24385 = c;
var G__24386 = d;
var G__24387 = e;
var G__24388 = f;
var G__24389 = g;
var G__24390 = h;
var G__24391 = i;
var G__24392 = j;
var G__24393 = k;
var G__24394 = l;
var G__24395 = m;
var G__24396 = n;
var G__24397 = o;
var G__24398 = p;
var G__24399 = q;
var G__24400 = r;
var G__24401 = s;
var G__24402 = t;
var G__24403 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392,G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403) : cljs.core.apply.call(null,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392,G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__24406 = x;
if(G__24406){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__24406.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__24406.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24406);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24406);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__24408 = value;
if(G__24408){
var bit__16826__auto__ = (G__24408.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16826__auto__) || (G__24408.cljs$core$ICloneable$)){
return true;
} else {
if((!G__24408.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24408);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24408);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24410 = coll;
if(G__24410){
var bit__16819__auto__ = (G__24410.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16819__auto__) || (G__24410.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24412 = coll;
if(G__24412){
var bit__16819__auto__ = (G__24412.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__24412.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__24414 = coll;
if(G__24414){
var bit__16819__auto__ = (G__24414.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__24414.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24416 = coll;
if(G__24416){
var bit__16819__auto__ = (G__24416.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16819__auto__) || (G__24416.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__24421__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24422 = y;
var G__24423 = cljs.core.first(more);
var G__24424 = cljs.core.next(more);
x = G__24422;
y = G__24423;
more = G__24424;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24421 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24425__i = 0, G__24425__a = new Array(arguments.length -  2);
while (G__24425__i < G__24425__a.length) {G__24425__a[G__24425__i] = arguments[G__24425__i + 2]; ++G__24425__i;}
  more = new cljs.core.IndexedSeq(G__24425__a,0);
} 
return G__24421__delegate.call(this,x,y,more);};
G__24421.cljs$lang$maxFixedArity = 2;
G__24421.cljs$lang$applyTo = (function (arglist__24426){
var x = cljs.core.first(arglist__24426);
arglist__24426 = cljs.core.next(arglist__24426);
var y = cljs.core.first(arglist__24426);
var more = cljs.core.rest(arglist__24426);
return G__24421__delegate(x,y,more);
});
G__24421.cljs$core$IFn$_invoke$arity$variadic = G__24421__delegate;
return G__24421;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__24427 = null;
if (arguments.length > 2) {
var G__24428__i = 0, G__24428__a = new Array(arguments.length -  2);
while (G__24428__i < G__24428__a.length) {G__24428__a[G__24428__i] = arguments[G__24428__i + 2]; ++G__24428__i;}
G__24427 = new cljs.core.IndexedSeq(G__24428__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__24429 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__24429) : cljs.core.es6_iterator_seq.call(null,G__24429));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24430 = (n + (1));
var G__24431 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24432 = cljs.core.next(coll__$1);
n = G__24430;
hash_code = G__24431;
coll__$1 = G__24432;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24433 = (n + (1));
var G__24434 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24435 = cljs.core.next(coll__$1);
n = G__24433;
hash_code = G__24434;
coll__$1 = G__24435;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__24436 = o;
return goog.getUid(G__24436);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__24438 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24438) : cljs.core.deref.call(null,G__24438));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24445 = val;
var G__24446 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24445,G__24446) : f.call(null,G__24445,G__24446));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24451 = nval;
var G__24452 = (n + (1));
val = G__24451;
n = G__24452;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24447 = val__$1;
var G__24448 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24447,G__24448) : f.call(null,G__24447,G__24448));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24453 = nval;
var G__24454 = (n + (1));
val__$1 = G__24453;
n = G__24454;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24449 = val__$1;
var G__24450 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24449,G__24450) : f.call(null,G__24449,G__24450));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24455 = nval;
var G__24456 = (n + (1));
val__$1 = G__24455;
n = G__24456;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24463 = val;
var G__24464 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24463,G__24464) : f.call(null,G__24463,G__24464));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24469 = nval;
var G__24470 = (n + (1));
val = G__24469;
n = G__24470;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24465 = val__$1;
var G__24466 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24465,G__24466) : f.call(null,G__24465,G__24466));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24471 = nval;
var G__24472 = (n + (1));
val__$1 = G__24471;
n = G__24472;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24467 = val__$1;
var G__24468 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24467,G__24468) : f.call(null,G__24467,G__24468));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24473 = nval;
var G__24474 = (n + (1));
val__$1 = G__24473;
n = G__24474;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__24476 = x;
if(G__24476){
var bit__16826__auto__ = (G__24476.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16826__auto__) || (G__24476.cljs$core$ICounted$)){
return true;
} else {
if((!G__24476.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24476);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24476);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__24478 = x;
if(G__24478){
var bit__16826__auto__ = (G__24478.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16826__auto__) || (G__24478.cljs$core$IIndexed$)){
return true;
} else {
if((!G__24478.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24478);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24478);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24479 = coll__$1;
var G__24480 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24479,G__24480) : cljs.core.equiv_sequential.call(null,G__24479,G__24480));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24481 = o;
var G__24482 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24481,G__24482) : cljs.core.cons.call(null,G__24481,G__24482));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24485 = coll__$1;
var G__24486 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24485,G__24486) : cljs.core.equiv_sequential.call(null,G__24485,G__24486));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24487 = cljs.core.List.EMPTY;
var G__24488 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__24487,G__24488) : cljs.core.with_meta.call(null,G__24487,G__24488));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__24489 = f;
var G__24490 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__24489,G__24490) : cljs.core.seq_reduce.call(null,G__24489,G__24490));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__24491 = f;
var G__24492 = start;
var G__24493 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__24491,G__24492,G__24493) : cljs.core.seq_reduce.call(null,G__24491,G__24492,G__24493));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24494 = o;
var G__24495 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24494,G__24495) : cljs.core.cons.call(null,G__24494,G__24495));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__24496 = sn;
s = G__24496;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__24501__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__24502 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__24503 = cljs.core.first(xs);
var G__24504 = cljs.core.next(xs);
coll = G__24502;
x = G__24503;
xs = G__24504;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__24501 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__24505__i = 0, G__24505__a = new Array(arguments.length -  2);
while (G__24505__i < G__24505__a.length) {G__24505__a[G__24505__i] = arguments[G__24505__i + 2]; ++G__24505__i;}
  xs = new cljs.core.IndexedSeq(G__24505__a,0);
} 
return G__24501__delegate.call(this,coll,x,xs);};
G__24501.cljs$lang$maxFixedArity = 2;
G__24501.cljs$lang$applyTo = (function (arglist__24506){
var coll = cljs.core.first(arglist__24506);
arglist__24506 = cljs.core.next(arglist__24506);
var x = cljs.core.first(arglist__24506);
var xs = cljs.core.rest(arglist__24506);
return G__24501__delegate(coll,x,xs);
});
G__24501.cljs$core$IFn$_invoke$arity$variadic = G__24501__delegate;
return G__24501;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__24507 = null;
if (arguments.length > 2) {
var G__24508__i = 0, G__24508__a = new Array(arguments.length -  2);
while (G__24508__i < G__24508__a.length) {G__24508__a[G__24508__i] = arguments[G__24508__i + 2]; ++G__24508__i;}
G__24507 = new cljs.core.IndexedSeq(G__24508__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__24507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__24509 = cljs.core.next(s);
var G__24510 = (acc + (1));
s = G__24509;
acc = G__24510;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__24512 = coll;
if(G__24512){
var bit__16819__auto__ = (G__24512.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16819__auto__) || (G__24512.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__24513 = cljs.core.next(coll);
var G__24514 = (n - (1));
coll = G__24513;
n = G__24514;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__24515 = cljs.core.next(coll);
var G__24516 = (n - (1));
var G__24517 = not_found;
coll = G__24515;
n = G__24516;
not_found = G__24517;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__24522 = coll;
if(G__24522){
var bit__16819__auto__ = (G__24522.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__24522.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24523 = coll;
if(G__24523){
var bit__16826__auto__ = (G__24523.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__24523.cljs$core$ISeq$)){
return true;
} else {
if((!G__24523.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24523);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24523);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__24524 = coll;
if(G__24524){
var bit__16819__auto__ = (G__24524.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__24524.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24525 = coll;
if(G__24525){
var bit__16826__auto__ = (G__24525.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__24525.cljs$core$ISeq$)){
return true;
} else {
if((!G__24525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24525);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__24526 = (n__$1 - (1));
var G__24527 = cljs.core.rest(xs);
n__$1 = G__24526;
xs = G__24527;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__24530 = o;
if(G__24530){
var bit__16819__auto__ = (G__24530.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__24530.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__24531 = o;
if(G__24531){
var bit__16819__auto__ = (G__24531.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__24531.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__24535__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__24536 = ret;
var G__24537 = cljs.core.first(kvs);
var G__24538 = cljs.core.second(kvs);
var G__24539 = cljs.core.nnext(kvs);
coll = G__24536;
k = G__24537;
v = G__24538;
kvs = G__24539;
continue;
} else {
return ret;
}
break;
}
};
var G__24535 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24540__i = 0, G__24540__a = new Array(arguments.length -  3);
while (G__24540__i < G__24540__a.length) {G__24540__a[G__24540__i] = arguments[G__24540__i + 3]; ++G__24540__i;}
  kvs = new cljs.core.IndexedSeq(G__24540__a,0);
} 
return G__24535__delegate.call(this,coll,k,v,kvs);};
G__24535.cljs$lang$maxFixedArity = 3;
G__24535.cljs$lang$applyTo = (function (arglist__24541){
var coll = cljs.core.first(arglist__24541);
arglist__24541 = cljs.core.next(arglist__24541);
var k = cljs.core.first(arglist__24541);
arglist__24541 = cljs.core.next(arglist__24541);
var v = cljs.core.first(arglist__24541);
var kvs = cljs.core.rest(arglist__24541);
return G__24535__delegate(coll,k,v,kvs);
});
G__24535.cljs$core$IFn$_invoke$arity$variadic = G__24535__delegate;
return G__24535;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__24542 = null;
if (arguments.length > 3) {
var G__24543__i = 0, G__24543__a = new Array(arguments.length -  3);
while (G__24543__i < G__24543__a.length) {G__24543__a[G__24543__i] = arguments[G__24543__i + 3]; ++G__24543__i;}
G__24542 = new cljs.core.IndexedSeq(G__24543__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__24542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__24546__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24547 = ret;
var G__24548 = cljs.core.first(ks);
var G__24549 = cljs.core.next(ks);
coll = G__24547;
k = G__24548;
ks = G__24549;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24546 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24550__i = 0, G__24550__a = new Array(arguments.length -  2);
while (G__24550__i < G__24550__a.length) {G__24550__a[G__24550__i] = arguments[G__24550__i + 2]; ++G__24550__i;}
  ks = new cljs.core.IndexedSeq(G__24550__a,0);
} 
return G__24546__delegate.call(this,coll,k,ks);};
G__24546.cljs$lang$maxFixedArity = 2;
G__24546.cljs$lang$applyTo = (function (arglist__24551){
var coll = cljs.core.first(arglist__24551);
arglist__24551 = cljs.core.next(arglist__24551);
var k = cljs.core.first(arglist__24551);
var ks = cljs.core.rest(arglist__24551);
return G__24546__delegate(coll,k,ks);
});
G__24546.cljs$core$IFn$_invoke$arity$variadic = G__24546__delegate;
return G__24546;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__24552 = null;
if (arguments.length > 2) {
var G__24553__i = 0, G__24553__a = new Array(arguments.length -  2);
while (G__24553__i < G__24553__a.length) {G__24553__a[G__24553__i] = arguments[G__24553__i + 2]; ++G__24553__i;}
G__24552 = new cljs.core.IndexedSeq(G__24553__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__16145__auto__ = (function (){var G__24558 = f;
return goog.isFunction(G__24558);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__24559 = f;
if(G__24559){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto____$1 = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
return G__24559.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__24559.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24559);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24559);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__25025 = null;
var G__25025__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__25025__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24561 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24561) : self__.afn.call(null,G__24561));
});
var G__25025__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24562 = a;
var G__24563 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24562,G__24563) : self__.afn.call(null,G__24562,G__24563));
});
var G__25025__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24564 = a;
var G__24565 = b;
var G__24566 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24564,G__24565,G__24566) : self__.afn.call(null,G__24564,G__24565,G__24566));
});
var G__25025__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24567 = a;
var G__24568 = b;
var G__24569 = c;
var G__24570 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24567,G__24568,G__24569,G__24570) : self__.afn.call(null,G__24567,G__24568,G__24569,G__24570));
});
var G__25025__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24571 = a;
var G__24572 = b;
var G__24573 = c;
var G__24574 = d;
var G__24575 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24571,G__24572,G__24573,G__24574,G__24575) : self__.afn.call(null,G__24571,G__24572,G__24573,G__24574,G__24575));
});
var G__25025__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24576 = a;
var G__24577 = b;
var G__24578 = c;
var G__24579 = d;
var G__24580 = e;
var G__24581 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24576,G__24577,G__24578,G__24579,G__24580,G__24581) : self__.afn.call(null,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581));
});
var G__25025__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24582 = a;
var G__24583 = b;
var G__24584 = c;
var G__24585 = d;
var G__24586 = e;
var G__24587 = f;
var G__24588 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24582,G__24583,G__24584,G__24585,G__24586,G__24587,G__24588) : self__.afn.call(null,G__24582,G__24583,G__24584,G__24585,G__24586,G__24587,G__24588));
});
var G__25025__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24589 = a;
var G__24590 = b;
var G__24591 = c;
var G__24592 = d;
var G__24593 = e;
var G__24594 = f;
var G__24595 = g;
var G__24596 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596) : self__.afn.call(null,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596));
});
var G__25025__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24597 = a;
var G__24598 = b;
var G__24599 = c;
var G__24600 = d;
var G__24601 = e;
var G__24602 = f;
var G__24603 = g;
var G__24604 = h;
var G__24605 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605) : self__.afn.call(null,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605));
});
var G__25025__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24606 = a;
var G__24607 = b;
var G__24608 = c;
var G__24609 = d;
var G__24610 = e;
var G__24611 = f;
var G__24612 = g;
var G__24613 = h;
var G__24614 = i;
var G__24615 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615) : self__.afn.call(null,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615));
});
var G__25025__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24616 = a;
var G__24617 = b;
var G__24618 = c;
var G__24619 = d;
var G__24620 = e;
var G__24621 = f;
var G__24622 = g;
var G__24623 = h;
var G__24624 = i;
var G__24625 = j;
var G__24626 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625,G__24626) : self__.afn.call(null,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625,G__24626));
});
var G__25025__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24627 = a;
var G__24628 = b;
var G__24629 = c;
var G__24630 = d;
var G__24631 = e;
var G__24632 = f;
var G__24633 = g;
var G__24634 = h;
var G__24635 = i;
var G__24636 = j;
var G__24637 = k;
var G__24638 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24627,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637,G__24638) : self__.afn.call(null,G__24627,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637,G__24638));
});
var G__25025__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24639 = a;
var G__24640 = b;
var G__24641 = c;
var G__24642 = d;
var G__24643 = e;
var G__24644 = f;
var G__24645 = g;
var G__24646 = h;
var G__24647 = i;
var G__24648 = j;
var G__24649 = k;
var G__24650 = l;
var G__24651 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651) : self__.afn.call(null,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651));
});
var G__25025__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24652 = a;
var G__24653 = b;
var G__24654 = c;
var G__24655 = d;
var G__24656 = e;
var G__24657 = f;
var G__24658 = g;
var G__24659 = h;
var G__24660 = i;
var G__24661 = j;
var G__24662 = k;
var G__24663 = l;
var G__24664 = m;
var G__24665 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24652,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662,G__24663,G__24664,G__24665) : self__.afn.call(null,G__24652,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662,G__24663,G__24664,G__24665));
});
var G__25025__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24666 = a;
var G__24667 = b;
var G__24668 = c;
var G__24669 = d;
var G__24670 = e;
var G__24671 = f;
var G__24672 = g;
var G__24673 = h;
var G__24674 = i;
var G__24675 = j;
var G__24676 = k;
var G__24677 = l;
var G__24678 = m;
var G__24679 = n;
var G__24680 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24666,G__24667,G__24668,G__24669,G__24670,G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680) : self__.afn.call(null,G__24666,G__24667,G__24668,G__24669,G__24670,G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680));
});
var G__25025__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24681 = a;
var G__24682 = b;
var G__24683 = c;
var G__24684 = d;
var G__24685 = e;
var G__24686 = f;
var G__24687 = g;
var G__24688 = h;
var G__24689 = i;
var G__24690 = j;
var G__24691 = k;
var G__24692 = l;
var G__24693 = m;
var G__24694 = n;
var G__24695 = o;
var G__24696 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695,G__24696) : self__.afn.call(null,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695,G__24696));
});
var G__25025__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24697 = a;
var G__24698 = b;
var G__24699 = c;
var G__24700 = d;
var G__24701 = e;
var G__24702 = f;
var G__24703 = g;
var G__24704 = h;
var G__24705 = i;
var G__24706 = j;
var G__24707 = k;
var G__24708 = l;
var G__24709 = m;
var G__24710 = n;
var G__24711 = o;
var G__24712 = p;
var G__24713 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711,G__24712,G__24713) : self__.afn.call(null,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711,G__24712,G__24713));
});
var G__25025__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24714 = a;
var G__24715 = b;
var G__24716 = c;
var G__24717 = d;
var G__24718 = e;
var G__24719 = f;
var G__24720 = g;
var G__24721 = h;
var G__24722 = i;
var G__24723 = j;
var G__24724 = k;
var G__24725 = l;
var G__24726 = m;
var G__24727 = n;
var G__24728 = o;
var G__24729 = p;
var G__24730 = q;
var G__24731 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728,G__24729,G__24730,G__24731) : self__.afn.call(null,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728,G__24729,G__24730,G__24731));
});
var G__25025__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24732 = a;
var G__24733 = b;
var G__24734 = c;
var G__24735 = d;
var G__24736 = e;
var G__24737 = f;
var G__24738 = g;
var G__24739 = h;
var G__24740 = i;
var G__24741 = j;
var G__24742 = k;
var G__24743 = l;
var G__24744 = m;
var G__24745 = n;
var G__24746 = o;
var G__24747 = p;
var G__24748 = q;
var G__24749 = r;
var G__24750 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750) : self__.afn.call(null,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750));
});
var G__25025__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24751 = a;
var G__24752 = b;
var G__24753 = c;
var G__24754 = d;
var G__24755 = e;
var G__24756 = f;
var G__24757 = g;
var G__24758 = h;
var G__24759 = i;
var G__24760 = j;
var G__24761 = k;
var G__24762 = l;
var G__24763 = m;
var G__24764 = n;
var G__24765 = o;
var G__24766 = p;
var G__24767 = q;
var G__24768 = r;
var G__24769 = s;
var G__24770 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24751,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770) : self__.afn.call(null,G__24751,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770));
});
var G__25025__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24771 = self__.afn;
var G__24772 = a;
var G__24773 = b;
var G__24774 = c;
var G__24775 = d;
var G__24776 = e;
var G__24777 = f;
var G__24778 = g;
var G__24779 = h;
var G__24780 = i;
var G__24781 = j;
var G__24782 = k;
var G__24783 = l;
var G__24784 = m;
var G__24785 = n;
var G__24786 = o;
var G__24787 = p;
var G__24788 = q;
var G__24789 = r;
var G__24790 = s;
var G__24791 = t;
var G__24792 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792) : cljs.core.apply.call(null,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792));
});
G__25025 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25025__1.call(this,self__);
case 2:
return G__25025__2.call(this,self__,a);
case 3:
return G__25025__3.call(this,self__,a,b);
case 4:
return G__25025__4.call(this,self__,a,b,c);
case 5:
return G__25025__5.call(this,self__,a,b,c,d);
case 6:
return G__25025__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25025__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25025__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25025__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25025__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25025__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25025__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25025__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25025__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25025__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25025__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25025__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25025__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25025__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25025__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25025__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25025__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25025.cljs$core$IFn$_invoke$arity$1 = G__25025__1;
G__25025.cljs$core$IFn$_invoke$arity$2 = G__25025__2;
G__25025.cljs$core$IFn$_invoke$arity$3 = G__25025__3;
G__25025.cljs$core$IFn$_invoke$arity$4 = G__25025__4;
G__25025.cljs$core$IFn$_invoke$arity$5 = G__25025__5;
G__25025.cljs$core$IFn$_invoke$arity$6 = G__25025__6;
G__25025.cljs$core$IFn$_invoke$arity$7 = G__25025__7;
G__25025.cljs$core$IFn$_invoke$arity$8 = G__25025__8;
G__25025.cljs$core$IFn$_invoke$arity$9 = G__25025__9;
G__25025.cljs$core$IFn$_invoke$arity$10 = G__25025__10;
G__25025.cljs$core$IFn$_invoke$arity$11 = G__25025__11;
G__25025.cljs$core$IFn$_invoke$arity$12 = G__25025__12;
G__25025.cljs$core$IFn$_invoke$arity$13 = G__25025__13;
G__25025.cljs$core$IFn$_invoke$arity$14 = G__25025__14;
G__25025.cljs$core$IFn$_invoke$arity$15 = G__25025__15;
G__25025.cljs$core$IFn$_invoke$arity$16 = G__25025__16;
G__25025.cljs$core$IFn$_invoke$arity$17 = G__25025__17;
G__25025.cljs$core$IFn$_invoke$arity$18 = G__25025__18;
G__25025.cljs$core$IFn$_invoke$arity$19 = G__25025__19;
G__25025.cljs$core$IFn$_invoke$arity$20 = G__25025__20;
G__25025.cljs$core$IFn$_invoke$arity$21 = G__25025__21;
G__25025.cljs$core$IFn$_invoke$arity$22 = G__25025__22;
return G__25025;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args24560){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24560)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__24793 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24793) : self__.afn.call(null,G__24793));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__24794 = a;
var G__24795 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24794,G__24795) : self__.afn.call(null,G__24794,G__24795));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__24796 = a;
var G__24797 = b;
var G__24798 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24796,G__24797,G__24798) : self__.afn.call(null,G__24796,G__24797,G__24798));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__24799 = a;
var G__24800 = b;
var G__24801 = c;
var G__24802 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24799,G__24800,G__24801,G__24802) : self__.afn.call(null,G__24799,G__24800,G__24801,G__24802));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__24803 = a;
var G__24804 = b;
var G__24805 = c;
var G__24806 = d;
var G__24807 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24803,G__24804,G__24805,G__24806,G__24807) : self__.afn.call(null,G__24803,G__24804,G__24805,G__24806,G__24807));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__24808 = a;
var G__24809 = b;
var G__24810 = c;
var G__24811 = d;
var G__24812 = e;
var G__24813 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24808,G__24809,G__24810,G__24811,G__24812,G__24813) : self__.afn.call(null,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__24814 = a;
var G__24815 = b;
var G__24816 = c;
var G__24817 = d;
var G__24818 = e;
var G__24819 = f;
var G__24820 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820) : self__.afn.call(null,G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__24821 = a;
var G__24822 = b;
var G__24823 = c;
var G__24824 = d;
var G__24825 = e;
var G__24826 = f;
var G__24827 = g;
var G__24828 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828) : self__.afn.call(null,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__24829 = a;
var G__24830 = b;
var G__24831 = c;
var G__24832 = d;
var G__24833 = e;
var G__24834 = f;
var G__24835 = g;
var G__24836 = h;
var G__24837 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837) : self__.afn.call(null,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__24838 = a;
var G__24839 = b;
var G__24840 = c;
var G__24841 = d;
var G__24842 = e;
var G__24843 = f;
var G__24844 = g;
var G__24845 = h;
var G__24846 = i;
var G__24847 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847) : self__.afn.call(null,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__24848 = a;
var G__24849 = b;
var G__24850 = c;
var G__24851 = d;
var G__24852 = e;
var G__24853 = f;
var G__24854 = g;
var G__24855 = h;
var G__24856 = i;
var G__24857 = j;
var G__24858 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858) : self__.afn.call(null,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__24859 = a;
var G__24860 = b;
var G__24861 = c;
var G__24862 = d;
var G__24863 = e;
var G__24864 = f;
var G__24865 = g;
var G__24866 = h;
var G__24867 = i;
var G__24868 = j;
var G__24869 = k;
var G__24870 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867,G__24868,G__24869,G__24870) : self__.afn.call(null,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867,G__24868,G__24869,G__24870));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__24871 = a;
var G__24872 = b;
var G__24873 = c;
var G__24874 = d;
var G__24875 = e;
var G__24876 = f;
var G__24877 = g;
var G__24878 = h;
var G__24879 = i;
var G__24880 = j;
var G__24881 = k;
var G__24882 = l;
var G__24883 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883) : self__.afn.call(null,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__24884 = a;
var G__24885 = b;
var G__24886 = c;
var G__24887 = d;
var G__24888 = e;
var G__24889 = f;
var G__24890 = g;
var G__24891 = h;
var G__24892 = i;
var G__24893 = j;
var G__24894 = k;
var G__24895 = l;
var G__24896 = m;
var G__24897 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897) : self__.afn.call(null,G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__24898 = a;
var G__24899 = b;
var G__24900 = c;
var G__24901 = d;
var G__24902 = e;
var G__24903 = f;
var G__24904 = g;
var G__24905 = h;
var G__24906 = i;
var G__24907 = j;
var G__24908 = k;
var G__24909 = l;
var G__24910 = m;
var G__24911 = n;
var G__24912 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24898,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912) : self__.afn.call(null,G__24898,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__24913 = a;
var G__24914 = b;
var G__24915 = c;
var G__24916 = d;
var G__24917 = e;
var G__24918 = f;
var G__24919 = g;
var G__24920 = h;
var G__24921 = i;
var G__24922 = j;
var G__24923 = k;
var G__24924 = l;
var G__24925 = m;
var G__24926 = n;
var G__24927 = o;
var G__24928 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928) : self__.afn.call(null,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__24929 = a;
var G__24930 = b;
var G__24931 = c;
var G__24932 = d;
var G__24933 = e;
var G__24934 = f;
var G__24935 = g;
var G__24936 = h;
var G__24937 = i;
var G__24938 = j;
var G__24939 = k;
var G__24940 = l;
var G__24941 = m;
var G__24942 = n;
var G__24943 = o;
var G__24944 = p;
var G__24945 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941,G__24942,G__24943,G__24944,G__24945) : self__.afn.call(null,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941,G__24942,G__24943,G__24944,G__24945));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__24946 = a;
var G__24947 = b;
var G__24948 = c;
var G__24949 = d;
var G__24950 = e;
var G__24951 = f;
var G__24952 = g;
var G__24953 = h;
var G__24954 = i;
var G__24955 = j;
var G__24956 = k;
var G__24957 = l;
var G__24958 = m;
var G__24959 = n;
var G__24960 = o;
var G__24961 = p;
var G__24962 = q;
var G__24963 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963) : self__.afn.call(null,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__24964 = a;
var G__24965 = b;
var G__24966 = c;
var G__24967 = d;
var G__24968 = e;
var G__24969 = f;
var G__24970 = g;
var G__24971 = h;
var G__24972 = i;
var G__24973 = j;
var G__24974 = k;
var G__24975 = l;
var G__24976 = m;
var G__24977 = n;
var G__24978 = o;
var G__24979 = p;
var G__24980 = q;
var G__24981 = r;
var G__24982 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982) : self__.afn.call(null,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24983 = a;
var G__24984 = b;
var G__24985 = c;
var G__24986 = d;
var G__24987 = e;
var G__24988 = f;
var G__24989 = g;
var G__24990 = h;
var G__24991 = i;
var G__24992 = j;
var G__24993 = k;
var G__24994 = l;
var G__24995 = m;
var G__24996 = n;
var G__24997 = o;
var G__24998 = p;
var G__24999 = q;
var G__25000 = r;
var G__25001 = s;
var G__25002 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24983,G__24984,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997,G__24998,G__24999,G__25000,G__25001,G__25002) : self__.afn.call(null,G__24983,G__24984,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997,G__24998,G__24999,G__25000,G__25001,G__25002));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__25003 = self__.afn;
var G__25004 = a;
var G__25005 = b;
var G__25006 = c;
var G__25007 = d;
var G__25008 = e;
var G__25009 = f;
var G__25010 = g;
var G__25011 = h;
var G__25012 = i;
var G__25013 = j;
var G__25014 = k;
var G__25015 = l;
var G__25016 = m;
var G__25017 = n;
var G__25018 = o;
var G__25019 = p;
var G__25020 = q;
var G__25021 = r;
var G__25022 = s;
var G__25023 = t;
var G__25024 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024) : cljs.core.apply.call(null,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__25029 = o;
if(G__25029){
var bit__16826__auto__ = (G__25029.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16826__auto__) || (G__25029.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__25029.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25029);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25029);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__16133__auto__ = !((o == null));
if(and__16133__auto__){
var G__25033 = o;
if(G__25033){
var bit__16826__auto__ = (G__25033.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__25033.cljs$core$IMeta$)){
return true;
} else {
if((!G__25033.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25033);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25033);
}
} else {
return and__16133__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__25036__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__25037 = ret;
var G__25038 = cljs.core.first(ks);
var G__25039 = cljs.core.next(ks);
coll = G__25037;
k = G__25038;
ks = G__25039;
continue;
} else {
return ret;
}
}
break;
}
};
var G__25036 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25040__i = 0, G__25040__a = new Array(arguments.length -  2);
while (G__25040__i < G__25040__a.length) {G__25040__a[G__25040__i] = arguments[G__25040__i + 2]; ++G__25040__i;}
  ks = new cljs.core.IndexedSeq(G__25040__a,0);
} 
return G__25036__delegate.call(this,coll,k,ks);};
G__25036.cljs$lang$maxFixedArity = 2;
G__25036.cljs$lang$applyTo = (function (arglist__25041){
var coll = cljs.core.first(arglist__25041);
arglist__25041 = cljs.core.next(arglist__25041);
var k = cljs.core.first(arglist__25041);
var ks = cljs.core.rest(arglist__25041);
return G__25036__delegate(coll,k,ks);
});
G__25036.cljs$core$IFn$_invoke$arity$variadic = G__25036__delegate;
return G__25036;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__25042 = null;
if (arguments.length > 2) {
var G__25043__i = 0, G__25043__a = new Array(arguments.length -  2);
while (G__25043__i < G__25043__a.length) {G__25043__a[G__25043__i] = arguments[G__25043__i + 2]; ++G__25043__i;}
G__25042 = new cljs.core.IndexedSeq(G__25043__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__25042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25045 = x;
if(G__25045){
var bit__16826__auto__ = (G__25045.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16826__auto__) || (G__25045.cljs$core$ICollection$)){
return true;
} else {
if((!G__25045.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25045);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25045);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25047 = x;
if(G__25047){
var bit__16826__auto__ = (G__25047.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16826__auto__) || (G__25047.cljs$core$ISet$)){
return true;
} else {
if((!G__25047.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25047);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25047);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__25049 = x;
if(G__25049){
var bit__16826__auto__ = (G__25049.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16826__auto__) || (G__25049.cljs$core$IAssociative$)){
return true;
} else {
if((!G__25049.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25049);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25049);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__25051 = x;
if(G__25051){
var bit__16826__auto__ = (G__25051.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16826__auto__) || (G__25051.cljs$core$ISequential$)){
return true;
} else {
if((!G__25051.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25051);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25051);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__25053 = x;
if(G__25053){
var bit__16826__auto__ = (G__25053.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16826__auto__) || (G__25053.cljs$core$ISorted$)){
return true;
} else {
if((!G__25053.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25053);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25053);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__25055 = x;
if(G__25055){
var bit__16826__auto__ = (G__25055.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16826__auto__) || (G__25055.cljs$core$IReduce$)){
return true;
} else {
if((!G__25055.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25055);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25055);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25057 = x;
if(G__25057){
var bit__16826__auto__ = (G__25057.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16826__auto__) || (G__25057.cljs$core$IMap$)){
return true;
} else {
if((!G__25057.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25057);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25057);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__25059 = x;
if(G__25059){
var bit__16826__auto__ = (G__25059.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16826__auto__) || (G__25059.cljs$core$IVector$)){
return true;
} else {
if((!G__25059.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25059);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25059);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__25061 = x;
if(G__25061){
var bit__16819__auto__ = (G__25061.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16819__auto__) || (G__25061.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj25067 = {};
return obj25067;
});
var js_obj__1 = (function() { 
var G__25070__delegate = function (keyvals){
var G__25068 = goog.object.create;
var G__25069 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__25068,G__25069) : cljs.core.apply.call(null,G__25068,G__25069));
};
var G__25070 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25071__i = 0, G__25071__a = new Array(arguments.length -  0);
while (G__25071__i < G__25071__a.length) {G__25071__a[G__25071__i] = arguments[G__25071__i + 0]; ++G__25071__i;}
  keyvals = new cljs.core.IndexedSeq(G__25071__a,0);
} 
return G__25070__delegate.call(this,keyvals);};
G__25070.cljs$lang$maxFixedArity = 0;
G__25070.cljs$lang$applyTo = (function (arglist__25072){
var keyvals = cljs.core.seq(arglist__25072);
return G__25070__delegate(keyvals);
});
G__25070.cljs$core$IFn$_invoke$arity$variadic = G__25070__delegate;
return G__25070;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__25073 = null;
if (arguments.length > 0) {
var G__25074__i = 0, G__25074__a = new Array(arguments.length -  0);
while (G__25074__i < G__25074__a.length) {G__25074__a[G__25074__i] = arguments[G__25074__i + 0]; ++G__25074__i;}
G__25073 = new cljs.core.IndexedSeq(G__25074__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__25073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__25077_25079 = obj;
var G__25078_25080 = ((function (G__25077_25079,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__25077_25079,keys))
;
goog.object.forEach(G__25077_25079,G__25078_25080);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25081 = (i__$1 + (1));
var G__25082 = (j__$1 + (1));
var G__25083 = (len__$1 - (1));
i__$1 = G__25081;
j__$1 = G__25082;
len__$1 = G__25083;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25084 = (i__$1 - (1));
var G__25085 = (j__$1 - (1));
var G__25086 = (len__$1 - (1));
i__$1 = G__25084;
j__$1 = G__25085;
len__$1 = G__25086;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj25088 = {};
return obj25088;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__25090 = s;
if(G__25090){
var bit__16826__auto__ = (G__25090.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__25090.cljs$core$ISeq$)){
return true;
} else {
if((!G__25090.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25090);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25090);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__25092 = s;
if(G__25092){
var bit__16826__auto__ = (G__25092.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16826__auto__) || (G__25092.cljs$core$ISeqable$)){
return true;
} else {
if((!G__25092.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25092);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25092);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__16145__auto__ = cljs.core.fn_QMARK_(f);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__25096 = f;
if(G__25096){
var bit__16826__auto__ = (G__25096.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16826__auto__) || (G__25096.cljs$core$IFn$)){
return true;
} else {
if((!G__25096.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25096);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25096);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__25109 = n;
return isNaN(G__25109);
})())) && (!((n === Infinity))) && (((function (){var G__25110 = n;
return parseFloat(G__25110);
})() === (function (){var G__25111 = n;
var G__25112 = (10);
return parseInt(G__25111,G__25112);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__25113__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__25114 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__25115 = etc;
s = G__25114;
xs = G__25115;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__25113 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25116__i = 0, G__25116__a = new Array(arguments.length -  2);
while (G__25116__i < G__25116__a.length) {G__25116__a[G__25116__i] = arguments[G__25116__i + 2]; ++G__25116__i;}
  more = new cljs.core.IndexedSeq(G__25116__a,0);
} 
return G__25113__delegate.call(this,x,y,more);};
G__25113.cljs$lang$maxFixedArity = 2;
G__25113.cljs$lang$applyTo = (function (arglist__25117){
var x = cljs.core.first(arglist__25117);
arglist__25117 = cljs.core.next(arglist__25117);
var y = cljs.core.first(arglist__25117);
var more = cljs.core.rest(arglist__25117);
return G__25113__delegate(x,y,more);
});
G__25113.cljs$core$IFn$_invoke$arity$variadic = G__25113__delegate;
return G__25113;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__25118 = null;
if (arguments.length > 2) {
var G__25119__i = 0, G__25119__a = new Array(arguments.length -  2);
while (G__25119__i < G__25119__a.length) {G__25119__a[G__25119__i] = arguments[G__25119__i + 2]; ++G__25119__i;}
G__25118 = new cljs.core.IndexedSeq(G__25119__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__25123 = x;
if(G__25123){
var bit__16819__auto__ = (G__25123.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16819__auto__) || (G__25123.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__25124 = x;
var G__25125 = y;
return goog.array.defaultCompare(G__25124,G__25125);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__25130 = xs;
var G__25131 = ys;
var G__25132 = len;
var G__25133 = (n + (1));
xs = G__25130;
ys = G__25131;
len = G__25132;
n = G__25133;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__25138 = x;
var G__25139 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25138,G__25139) : f.call(null,G__25138,G__25139));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25140 = y;
var G__25141 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25140,G__25141) : f.call(null,G__25140,G__25141));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__25147 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25147) : cljs.core.to_array.call(null,G__25147));
})();
var G__25148_25150 = a;
var G__25149_25151 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__25148_25150,G__25149_25151);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__25157 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25157) : keyfn.call(null,G__25157));
})(),(function (){var G__25158 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25158) : keyfn.call(null,G__25158));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__25164 = f;
var G__25165 = cljs.core.first(s);
var G__25166 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25164,G__25165,G__25166) : cljs.core.reduce.call(null,G__25164,G__25165,G__25166));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__25167 = val__$1;
var G__25168 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25167,G__25168) : f.call(null,G__25167,G__25168));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25169 = nval;
var G__25170 = cljs.core.next(coll__$1);
val__$1 = G__25169;
coll__$1 = G__25170;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__25174 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25174) : cljs.core.to_array.call(null,G__25174));
})();
var G__25175_25177 = a;
goog.array.shuffle(G__25175_25177);

var G__25176 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__25176) : cljs.core.vec.call(null,G__25176));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__25180 = coll;
if(G__25180){
var bit__16819__auto__ = (G__25180.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__25180.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__25181 = coll;
if(G__25181){
var bit__16819__auto__ = (G__25181.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__25181.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__25190 = null;
var G__25190__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__25190__1 = (function (x){
var G__25187 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__25187) : cf.call(null,G__25187));
});
var G__25190__2 = (function (x,y){
var G__25188 = x;
var G__25189 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25188,G__25189) : f.call(null,G__25188,G__25189));
});
G__25190 = function(x,y){
switch(arguments.length){
case 0:
return G__25190__0.call(this);
case 1:
return G__25190__1.call(this,x);
case 2:
return G__25190__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25190.cljs$core$IFn$_invoke$arity$0 = G__25190__0;
G__25190.cljs$core$IFn$_invoke$arity$1 = G__25190__1;
G__25190.cljs$core$IFn$_invoke$arity$2 = G__25190__2;
return G__25190;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__25197 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25197) : xform.call(null,G__25197));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__25198 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__25198) : f__$1.call(null,G__25198));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__25199__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__25199 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25200__i = 0, G__25200__a = new Array(arguments.length -  2);
while (G__25200__i < G__25200__a.length) {G__25200__a[G__25200__i] = arguments[G__25200__i + 2]; ++G__25200__i;}
  more = new cljs.core.IndexedSeq(G__25200__a,0);
} 
return G__25199__delegate.call(this,x,y,more);};
G__25199.cljs$lang$maxFixedArity = 2;
G__25199.cljs$lang$applyTo = (function (arglist__25201){
var x = cljs.core.first(arglist__25201);
arglist__25201 = cljs.core.next(arglist__25201);
var y = cljs.core.first(arglist__25201);
var more = cljs.core.rest(arglist__25201);
return G__25199__delegate(x,y,more);
});
G__25199.cljs$core$IFn$_invoke$arity$variadic = G__25199__delegate;
return G__25199;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__25202 = null;
if (arguments.length > 2) {
var G__25203__i = 0, G__25203__a = new Array(arguments.length -  2);
while (G__25203__i < G__25203__a.length) {G__25203__a[G__25203__i] = arguments[G__25203__i + 2]; ++G__25203__i;}
G__25202 = new cljs.core.IndexedSeq(G__25203__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__25204__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__25204 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25205__i = 0, G__25205__a = new Array(arguments.length -  2);
while (G__25205__i < G__25205__a.length) {G__25205__a[G__25205__i] = arguments[G__25205__i + 2]; ++G__25205__i;}
  more = new cljs.core.IndexedSeq(G__25205__a,0);
} 
return G__25204__delegate.call(this,x,y,more);};
G__25204.cljs$lang$maxFixedArity = 2;
G__25204.cljs$lang$applyTo = (function (arglist__25206){
var x = cljs.core.first(arglist__25206);
arglist__25206 = cljs.core.next(arglist__25206);
var y = cljs.core.first(arglist__25206);
var more = cljs.core.rest(arglist__25206);
return G__25204__delegate(x,y,more);
});
G__25204.cljs$core$IFn$_invoke$arity$variadic = G__25204__delegate;
return G__25204;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__25207 = null;
if (arguments.length > 2) {
var G__25208__i = 0, G__25208__a = new Array(arguments.length -  2);
while (G__25208__i < G__25208__a.length) {G__25208__a[G__25208__i] = arguments[G__25208__i + 2]; ++G__25208__i;}
G__25207 = new cljs.core.IndexedSeq(G__25208__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__25209__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__25209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25210__i = 0, G__25210__a = new Array(arguments.length -  2);
while (G__25210__i < G__25210__a.length) {G__25210__a[G__25210__i] = arguments[G__25210__i + 2]; ++G__25210__i;}
  more = new cljs.core.IndexedSeq(G__25210__a,0);
} 
return G__25209__delegate.call(this,x,y,more);};
G__25209.cljs$lang$maxFixedArity = 2;
G__25209.cljs$lang$applyTo = (function (arglist__25211){
var x = cljs.core.first(arglist__25211);
arglist__25211 = cljs.core.next(arglist__25211);
var y = cljs.core.first(arglist__25211);
var more = cljs.core.rest(arglist__25211);
return G__25209__delegate(x,y,more);
});
G__25209.cljs$core$IFn$_invoke$arity$variadic = G__25209__delegate;
return G__25209;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__25212 = null;
if (arguments.length > 2) {
var G__25213__i = 0, G__25213__a = new Array(arguments.length -  2);
while (G__25213__i < G__25213__a.length) {G__25213__a[G__25213__i] = arguments[G__25213__i + 2]; ++G__25213__i;}
G__25212 = new cljs.core.IndexedSeq(G__25213__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__25218__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25218 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25219__i = 0, G__25219__a = new Array(arguments.length -  2);
while (G__25219__i < G__25219__a.length) {G__25219__a[G__25219__i] = arguments[G__25219__i + 2]; ++G__25219__i;}
  more = new cljs.core.IndexedSeq(G__25219__a,0);
} 
return G__25218__delegate.call(this,x,y,more);};
G__25218.cljs$lang$maxFixedArity = 2;
G__25218.cljs$lang$applyTo = (function (arglist__25220){
var x = cljs.core.first(arglist__25220);
arglist__25220 = cljs.core.next(arglist__25220);
var y = cljs.core.first(arglist__25220);
var more = cljs.core.rest(arglist__25220);
return G__25218__delegate(x,y,more);
});
G__25218.cljs$core$IFn$_invoke$arity$variadic = G__25218__delegate;
return G__25218;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__25221 = null;
if (arguments.length > 2) {
var G__25222__i = 0, G__25222__a = new Array(arguments.length -  2);
while (G__25222__i < G__25222__a.length) {G__25222__a[G__25222__i] = arguments[G__25222__i + 2]; ++G__25222__i;}
G__25221 = new cljs.core.IndexedSeq(G__25222__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__25223__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__25224 = y;
var G__25225 = cljs.core.first(more);
var G__25226 = cljs.core.next(more);
x = G__25224;
y = G__25225;
more = G__25226;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25223 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25227__i = 0, G__25227__a = new Array(arguments.length -  2);
while (G__25227__i < G__25227__a.length) {G__25227__a[G__25227__i] = arguments[G__25227__i + 2]; ++G__25227__i;}
  more = new cljs.core.IndexedSeq(G__25227__a,0);
} 
return G__25223__delegate.call(this,x,y,more);};
G__25223.cljs$lang$maxFixedArity = 2;
G__25223.cljs$lang$applyTo = (function (arglist__25228){
var x = cljs.core.first(arglist__25228);
arglist__25228 = cljs.core.next(arglist__25228);
var y = cljs.core.first(arglist__25228);
var more = cljs.core.rest(arglist__25228);
return G__25223__delegate(x,y,more);
});
G__25223.cljs$core$IFn$_invoke$arity$variadic = G__25223__delegate;
return G__25223;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__25229 = null;
if (arguments.length > 2) {
var G__25230__i = 0, G__25230__a = new Array(arguments.length -  2);
while (G__25230__i < G__25230__a.length) {G__25230__a[G__25230__i] = arguments[G__25230__i + 2]; ++G__25230__i;}
G__25229 = new cljs.core.IndexedSeq(G__25230__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__25231__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__25232 = y;
var G__25233 = cljs.core.first(more);
var G__25234 = cljs.core.next(more);
x = G__25232;
y = G__25233;
more = G__25234;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25231 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25235__i = 0, G__25235__a = new Array(arguments.length -  2);
while (G__25235__i < G__25235__a.length) {G__25235__a[G__25235__i] = arguments[G__25235__i + 2]; ++G__25235__i;}
  more = new cljs.core.IndexedSeq(G__25235__a,0);
} 
return G__25231__delegate.call(this,x,y,more);};
G__25231.cljs$lang$maxFixedArity = 2;
G__25231.cljs$lang$applyTo = (function (arglist__25236){
var x = cljs.core.first(arglist__25236);
arglist__25236 = cljs.core.next(arglist__25236);
var y = cljs.core.first(arglist__25236);
var more = cljs.core.rest(arglist__25236);
return G__25231__delegate(x,y,more);
});
G__25231.cljs$core$IFn$_invoke$arity$variadic = G__25231__delegate;
return G__25231;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__25237 = null;
if (arguments.length > 2) {
var G__25238__i = 0, G__25238__a = new Array(arguments.length -  2);
while (G__25238__i < G__25238__a.length) {G__25238__a[G__25238__i] = arguments[G__25238__i + 2]; ++G__25238__i;}
G__25237 = new cljs.core.IndexedSeq(G__25238__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__25239__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__25240 = y;
var G__25241 = cljs.core.first(more);
var G__25242 = cljs.core.next(more);
x = G__25240;
y = G__25241;
more = G__25242;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25239 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25243__i = 0, G__25243__a = new Array(arguments.length -  2);
while (G__25243__i < G__25243__a.length) {G__25243__a[G__25243__i] = arguments[G__25243__i + 2]; ++G__25243__i;}
  more = new cljs.core.IndexedSeq(G__25243__a,0);
} 
return G__25239__delegate.call(this,x,y,more);};
G__25239.cljs$lang$maxFixedArity = 2;
G__25239.cljs$lang$applyTo = (function (arglist__25244){
var x = cljs.core.first(arglist__25244);
arglist__25244 = cljs.core.next(arglist__25244);
var y = cljs.core.first(arglist__25244);
var more = cljs.core.rest(arglist__25244);
return G__25239__delegate(x,y,more);
});
G__25239.cljs$core$IFn$_invoke$arity$variadic = G__25239__delegate;
return G__25239;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__25245 = null;
if (arguments.length > 2) {
var G__25246__i = 0, G__25246__a = new Array(arguments.length -  2);
while (G__25246__i < G__25246__a.length) {G__25246__a[G__25246__i] = arguments[G__25246__i + 2]; ++G__25246__i;}
G__25245 = new cljs.core.IndexedSeq(G__25246__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__25247__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__25248 = y;
var G__25249 = cljs.core.first(more);
var G__25250 = cljs.core.next(more);
x = G__25248;
y = G__25249;
more = G__25250;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25247 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25251__i = 0, G__25251__a = new Array(arguments.length -  2);
while (G__25251__i < G__25251__a.length) {G__25251__a[G__25251__i] = arguments[G__25251__i + 2]; ++G__25251__i;}
  more = new cljs.core.IndexedSeq(G__25251__a,0);
} 
return G__25247__delegate.call(this,x,y,more);};
G__25247.cljs$lang$maxFixedArity = 2;
G__25247.cljs$lang$applyTo = (function (arglist__25252){
var x = cljs.core.first(arglist__25252);
arglist__25252 = cljs.core.next(arglist__25252);
var y = cljs.core.first(arglist__25252);
var more = cljs.core.rest(arglist__25252);
return G__25247__delegate(x,y,more);
});
G__25247.cljs$core$IFn$_invoke$arity$variadic = G__25247__delegate;
return G__25247;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__25253 = null;
if (arguments.length > 2) {
var G__25254__i = 0, G__25254__a = new Array(arguments.length -  2);
while (G__25254__i < G__25254__a.length) {G__25254__a[G__25254__i] = arguments[G__25254__i + 2]; ++G__25254__i;}
G__25253 = new cljs.core.IndexedSeq(G__25254__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
});
var max__3 = (function() { 
var G__25255__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})(),more);
};
var G__25255 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25256__i = 0, G__25256__a = new Array(arguments.length -  2);
while (G__25256__i < G__25256__a.length) {G__25256__a[G__25256__i] = arguments[G__25256__i + 2]; ++G__25256__i;}
  more = new cljs.core.IndexedSeq(G__25256__a,0);
} 
return G__25255__delegate.call(this,x,y,more);};
G__25255.cljs$lang$maxFixedArity = 2;
G__25255.cljs$lang$applyTo = (function (arglist__25257){
var x = cljs.core.first(arglist__25257);
arglist__25257 = cljs.core.next(arglist__25257);
var y = cljs.core.first(arglist__25257);
var more = cljs.core.rest(arglist__25257);
return G__25255__delegate(x,y,more);
});
G__25255.cljs$core$IFn$_invoke$arity$variadic = G__25255__delegate;
return G__25255;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__25258 = null;
if (arguments.length > 2) {
var G__25259__i = 0, G__25259__a = new Array(arguments.length -  2);
while (G__25259__i < G__25259__a.length) {G__25259__a[G__25259__i] = arguments[G__25259__i + 2]; ++G__25259__i;}
G__25258 = new cljs.core.IndexedSeq(G__25259__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
});
var min__3 = (function() { 
var G__25260__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
})(),more);
};
var G__25260 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25261__i = 0, G__25261__a = new Array(arguments.length -  2);
while (G__25261__i < G__25261__a.length) {G__25261__a[G__25261__i] = arguments[G__25261__i + 2]; ++G__25261__i;}
  more = new cljs.core.IndexedSeq(G__25261__a,0);
} 
return G__25260__delegate.call(this,x,y,more);};
G__25260.cljs$lang$maxFixedArity = 2;
G__25260.cljs$lang$applyTo = (function (arglist__25262){
var x = cljs.core.first(arglist__25262);
arglist__25262 = cljs.core.next(arglist__25262);
var y = cljs.core.first(arglist__25262);
var more = cljs.core.rest(arglist__25262);
return G__25260__delegate(x,y,more);
});
G__25260.cljs$core$IFn$_invoke$arity$variadic = G__25260__delegate;
return G__25260;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__25263 = null;
if (arguments.length > 2) {
var G__25264__i = 0, G__25264__a = new Array(arguments.length -  2);
while (G__25264__i < G__25264__a.length) {G__25264__a[G__25264__i] = arguments[G__25264__i + 2]; ++G__25264__i;}
G__25263 = new cljs.core.IndexedSeq(G__25264__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__25265__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__25265 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25266__i = 0, G__25266__a = new Array(arguments.length -  2);
while (G__25266__i < G__25266__a.length) {G__25266__a[G__25266__i] = arguments[G__25266__i + 2]; ++G__25266__i;}
  more = new cljs.core.IndexedSeq(G__25266__a,0);
} 
return G__25265__delegate.call(this,x,y,more);};
G__25265.cljs$lang$maxFixedArity = 2;
G__25265.cljs$lang$applyTo = (function (arglist__25267){
var x = cljs.core.first(arglist__25267);
arglist__25267 = cljs.core.next(arglist__25267);
var y = cljs.core.first(arglist__25267);
var more = cljs.core.rest(arglist__25267);
return G__25265__delegate(x,y,more);
});
G__25265.cljs$core$IFn$_invoke$arity$variadic = G__25265__delegate;
return G__25265;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__25268 = null;
if (arguments.length > 2) {
var G__25269__i = 0, G__25269__a = new Array(arguments.length -  2);
while (G__25269__i < G__25269__a.length) {G__25269__a[G__25269__i] = arguments[G__25269__i + 2]; ++G__25269__i;}
G__25268 = new cljs.core.IndexedSeq(G__25269__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25268);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__25270__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__25270 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25271__i = 0, G__25271__a = new Array(arguments.length -  2);
while (G__25271__i < G__25271__a.length) {G__25271__a[G__25271__i] = arguments[G__25271__i + 2]; ++G__25271__i;}
  more = new cljs.core.IndexedSeq(G__25271__a,0);
} 
return G__25270__delegate.call(this,x,y,more);};
G__25270.cljs$lang$maxFixedArity = 2;
G__25270.cljs$lang$applyTo = (function (arglist__25272){
var x = cljs.core.first(arglist__25272);
arglist__25272 = cljs.core.next(arglist__25272);
var y = cljs.core.first(arglist__25272);
var more = cljs.core.rest(arglist__25272);
return G__25270__delegate(x,y,more);
});
G__25270.cljs$core$IFn$_invoke$arity$variadic = G__25270__delegate;
return G__25270;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__25273 = null;
if (arguments.length > 2) {
var G__25274__i = 0, G__25274__a = new Array(arguments.length -  2);
while (G__25274__i < G__25274__a.length) {G__25274__a[G__25274__i] = arguments[G__25274__i + 2]; ++G__25274__i;}
G__25273 = new cljs.core.IndexedSeq(G__25274__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__25279__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25279 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25280__i = 0, G__25280__a = new Array(arguments.length -  2);
while (G__25280__i < G__25280__a.length) {G__25280__a[G__25280__i] = arguments[G__25280__i + 2]; ++G__25280__i;}
  more = new cljs.core.IndexedSeq(G__25280__a,0);
} 
return G__25279__delegate.call(this,x,y,more);};
G__25279.cljs$lang$maxFixedArity = 2;
G__25279.cljs$lang$applyTo = (function (arglist__25281){
var x = cljs.core.first(arglist__25281);
arglist__25281 = cljs.core.next(arglist__25281);
var y = cljs.core.first(arglist__25281);
var more = cljs.core.rest(arglist__25281);
return G__25279__delegate(x,y,more);
});
G__25279.cljs$core$IFn$_invoke$arity$variadic = G__25279__delegate;
return G__25279;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__25282 = null;
if (arguments.length > 2) {
var G__25283__i = 0, G__25283__a = new Array(arguments.length -  2);
while (G__25283__i < G__25283__a.length) {G__25283__a[G__25283__i] = arguments[G__25283__i + 2]; ++G__25283__i;}
G__25282 = new cljs.core.IndexedSeq(G__25283__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__25284__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__25284 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25285__i = 0, G__25285__a = new Array(arguments.length -  2);
while (G__25285__i < G__25285__a.length) {G__25285__a[G__25285__i] = arguments[G__25285__i + 2]; ++G__25285__i;}
  more = new cljs.core.IndexedSeq(G__25285__a,0);
} 
return G__25284__delegate.call(this,x,y,more);};
G__25284.cljs$lang$maxFixedArity = 2;
G__25284.cljs$lang$applyTo = (function (arglist__25286){
var x = cljs.core.first(arglist__25286);
arglist__25286 = cljs.core.next(arglist__25286);
var y = cljs.core.first(arglist__25286);
var more = cljs.core.rest(arglist__25286);
return G__25284__delegate(x,y,more);
});
G__25284.cljs$core$IFn$_invoke$arity$variadic = G__25284__delegate;
return G__25284;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__25287 = null;
if (arguments.length > 2) {
var G__25288__i = 0, G__25288__a = new Array(arguments.length -  2);
while (G__25288__i < G__25288__a.length) {G__25288__a[G__25288__i] = arguments[G__25288__i + 2]; ++G__25288__i;}
G__25287 = new cljs.core.IndexedSeq(G__25288__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__25289__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__25289 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25290__i = 0, G__25290__a = new Array(arguments.length -  2);
while (G__25290__i < G__25290__a.length) {G__25290__a[G__25290__i] = arguments[G__25290__i + 2]; ++G__25290__i;}
  more = new cljs.core.IndexedSeq(G__25290__a,0);
} 
return G__25289__delegate.call(this,x,y,more);};
G__25289.cljs$lang$maxFixedArity = 2;
G__25289.cljs$lang$applyTo = (function (arglist__25291){
var x = cljs.core.first(arglist__25291);
arglist__25291 = cljs.core.next(arglist__25291);
var y = cljs.core.first(arglist__25291);
var more = cljs.core.rest(arglist__25291);
return G__25289__delegate(x,y,more);
});
G__25289.cljs$core$IFn$_invoke$arity$variadic = G__25289__delegate;
return G__25289;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__25292 = null;
if (arguments.length > 2) {
var G__25293__i = 0, G__25293__a = new Array(arguments.length -  2);
while (G__25293__i < G__25293__a.length) {G__25293__a[G__25293__i] = arguments[G__25293__i + 2]; ++G__25293__i;}
G__25292 = new cljs.core.IndexedSeq(G__25293__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__25296 = x;
var G__25297 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__25296,G__25297) : cljs.core.mod.call(null,G__25296,G__25297));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__25298__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__25298 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25299__i = 0, G__25299__a = new Array(arguments.length -  2);
while (G__25299__i < G__25299__a.length) {G__25299__a[G__25299__i] = arguments[G__25299__i + 2]; ++G__25299__i;}
  more = new cljs.core.IndexedSeq(G__25299__a,0);
} 
return G__25298__delegate.call(this,x,y,more);};
G__25298.cljs$lang$maxFixedArity = 2;
G__25298.cljs$lang$applyTo = (function (arglist__25300){
var x = cljs.core.first(arglist__25300);
arglist__25300 = cljs.core.next(arglist__25300);
var y = cljs.core.first(arglist__25300);
var more = cljs.core.rest(arglist__25300);
return G__25298__delegate(x,y,more);
});
G__25298.cljs$core$IFn$_invoke$arity$variadic = G__25298__delegate;
return G__25298;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__25301 = null;
if (arguments.length > 2) {
var G__25302__i = 0, G__25302__a = new Array(arguments.length -  2);
while (G__25302__i < G__25302__a.length) {G__25302__a[G__25302__i] = arguments[G__25302__i + 2]; ++G__25302__i;}
G__25301 = new cljs.core.IndexedSeq(G__25302__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__25303__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__25303 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25304__i = 0, G__25304__a = new Array(arguments.length -  2);
while (G__25304__i < G__25304__a.length) {G__25304__a[G__25304__i] = arguments[G__25304__i + 2]; ++G__25304__i;}
  more = new cljs.core.IndexedSeq(G__25304__a,0);
} 
return G__25303__delegate.call(this,x,y,more);};
G__25303.cljs$lang$maxFixedArity = 2;
G__25303.cljs$lang$applyTo = (function (arglist__25305){
var x = cljs.core.first(arglist__25305);
arglist__25305 = cljs.core.next(arglist__25305);
var y = cljs.core.first(arglist__25305);
var more = cljs.core.rest(arglist__25305);
return G__25303__delegate(x,y,more);
});
G__25303.cljs$core$IFn$_invoke$arity$variadic = G__25303__delegate;
return G__25303;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__25306 = null;
if (arguments.length > 2) {
var G__25307__i = 0, G__25307__a = new Array(arguments.length -  2);
while (G__25307__i < G__25307__a.length) {G__25307__a[G__25307__i] = arguments[G__25307__i + 2]; ++G__25307__i;}
G__25306 = new cljs.core.IndexedSeq(G__25307__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25306);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__25310 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25310) : Math.floor.call(null,G__25310));
} else {
var G__25311 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25311) : Math.ceil.call(null,G__25311));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__25312__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__25312 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25313__i = 0, G__25313__a = new Array(arguments.length -  2);
while (G__25313__i < G__25313__a.length) {G__25313__a[G__25313__i] = arguments[G__25313__i + 2]; ++G__25313__i;}
  more = new cljs.core.IndexedSeq(G__25313__a,0);
} 
return G__25312__delegate.call(this,x,y,more);};
G__25312.cljs$lang$maxFixedArity = 2;
G__25312.cljs$lang$applyTo = (function (arglist__25314){
var x = cljs.core.first(arglist__25314);
arglist__25314 = cljs.core.next(arglist__25314);
var y = cljs.core.first(arglist__25314);
var more = cljs.core.rest(arglist__25314);
return G__25312__delegate(x,y,more);
});
G__25312.cljs$core$IFn$_invoke$arity$variadic = G__25312__delegate;
return G__25312;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__25315 = null;
if (arguments.length > 2) {
var G__25316__i = 0, G__25316__a = new Array(arguments.length -  2);
while (G__25316__i < G__25316__a.length) {G__25316__a[G__25316__i] = arguments[G__25316__i + 2]; ++G__25316__i;}
G__25315 = new cljs.core.IndexedSeq(G__25316__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__25317__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__25317 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25318__i = 0, G__25318__a = new Array(arguments.length -  2);
while (G__25318__i < G__25318__a.length) {G__25318__a[G__25318__i] = arguments[G__25318__i + 2]; ++G__25318__i;}
  more = new cljs.core.IndexedSeq(G__25318__a,0);
} 
return G__25317__delegate.call(this,x,y,more);};
G__25317.cljs$lang$maxFixedArity = 2;
G__25317.cljs$lang$applyTo = (function (arglist__25319){
var x = cljs.core.first(arglist__25319);
arglist__25319 = cljs.core.next(arglist__25319);
var y = cljs.core.first(arglist__25319);
var more = cljs.core.rest(arglist__25319);
return G__25317__delegate(x,y,more);
});
G__25317.cljs$core$IFn$_invoke$arity$variadic = G__25317__delegate;
return G__25317;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__25320 = null;
if (arguments.length > 2) {
var G__25321__i = 0, G__25321__a = new Array(arguments.length -  2);
while (G__25321__i < G__25321__a.length) {G__25321__a[G__25321__i] = arguments[G__25321__i + 2]; ++G__25321__i;}
G__25320 = new cljs.core.IndexedSeq(G__25321__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__25322__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__25322 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25323__i = 0, G__25323__a = new Array(arguments.length -  2);
while (G__25323__i < G__25323__a.length) {G__25323__a[G__25323__i] = arguments[G__25323__i + 2]; ++G__25323__i;}
  more = new cljs.core.IndexedSeq(G__25323__a,0);
} 
return G__25322__delegate.call(this,x,y,more);};
G__25322.cljs$lang$maxFixedArity = 2;
G__25322.cljs$lang$applyTo = (function (arglist__25324){
var x = cljs.core.first(arglist__25324);
arglist__25324 = cljs.core.next(arglist__25324);
var y = cljs.core.first(arglist__25324);
var more = cljs.core.rest(arglist__25324);
return G__25322__delegate(x,y,more);
});
G__25322.cljs$core$IFn$_invoke$arity$variadic = G__25322__delegate;
return G__25322;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__25325 = null;
if (arguments.length > 2) {
var G__25326__i = 0, G__25326__a = new Array(arguments.length -  2);
while (G__25326__i < G__25326__a.length) {G__25326__a[G__25326__i] = arguments[G__25326__i + 2]; ++G__25326__i;}
G__25325 = new cljs.core.IndexedSeq(G__25326__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__25327__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__25327 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25328__i = 0, G__25328__a = new Array(arguments.length -  2);
while (G__25328__i < G__25328__a.length) {G__25328__a[G__25328__i] = arguments[G__25328__i + 2]; ++G__25328__i;}
  more = new cljs.core.IndexedSeq(G__25328__a,0);
} 
return G__25327__delegate.call(this,x,y,more);};
G__25327.cljs$lang$maxFixedArity = 2;
G__25327.cljs$lang$applyTo = (function (arglist__25329){
var x = cljs.core.first(arglist__25329);
arglist__25329 = cljs.core.next(arglist__25329);
var y = cljs.core.first(arglist__25329);
var more = cljs.core.rest(arglist__25329);
return G__25327__delegate(x,y,more);
});
G__25327.cljs$core$IFn$_invoke$arity$variadic = G__25327__delegate;
return G__25327;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__25330 = null;
if (arguments.length > 2) {
var G__25331__i = 0, G__25331__a = new Array(arguments.length -  2);
while (G__25331__i < G__25331__a.length) {G__25331__a[G__25331__i] = arguments[G__25331__i + 2]; ++G__25331__i;}
G__25330 = new cljs.core.IndexedSeq(G__25331__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__25336__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__25337 = y;
var G__25338 = cljs.core.first(more);
var G__25339 = cljs.core.next(more);
x = G__25337;
y = G__25338;
more = G__25339;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25336 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25340__i = 0, G__25340__a = new Array(arguments.length -  2);
while (G__25340__i < G__25340__a.length) {G__25340__a[G__25340__i] = arguments[G__25340__i + 2]; ++G__25340__i;}
  more = new cljs.core.IndexedSeq(G__25340__a,0);
} 
return G__25336__delegate.call(this,x,y,more);};
G__25336.cljs$lang$maxFixedArity = 2;
G__25336.cljs$lang$applyTo = (function (arglist__25341){
var x = cljs.core.first(arglist__25341);
arglist__25341 = cljs.core.next(arglist__25341);
var y = cljs.core.first(arglist__25341);
var more = cljs.core.rest(arglist__25341);
return G__25336__delegate(x,y,more);
});
G__25336.cljs$core$IFn$_invoke$arity$variadic = G__25336__delegate;
return G__25336;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__25342 = null;
if (arguments.length > 2) {
var G__25343__i = 0, G__25343__a = new Array(arguments.length -  2);
while (G__25343__i < G__25343__a.length) {G__25343__a[G__25343__i] = arguments[G__25343__i + 2]; ++G__25343__i;}
G__25342 = new cljs.core.IndexedSeq(G__25343__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__25344 = (n__$1 - (1));
var G__25345 = cljs.core.next(xs);
n__$1 = G__25344;
xs = G__25345;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__25349 = x;
return goog.string.buildString(G__25349);
}
});
var str__2 = (function() { 
var G__25350__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__25351 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__25352 = cljs.core.next(more);
sb = G__25351;
more = G__25352;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__25350 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__25353__i = 0, G__25353__a = new Array(arguments.length -  1);
while (G__25353__i < G__25353__a.length) {G__25353__a[G__25353__i] = arguments[G__25353__i + 1]; ++G__25353__i;}
  ys = new cljs.core.IndexedSeq(G__25353__a,0);
} 
return G__25350__delegate.call(this,x,ys);};
G__25350.cljs$lang$maxFixedArity = 1;
G__25350.cljs$lang$applyTo = (function (arglist__25354){
var x = cljs.core.first(arglist__25354);
var ys = cljs.core.rest(arglist__25354);
return G__25350__delegate(x,ys);
});
G__25350.cljs$core$IFn$_invoke$arity$variadic = G__25350__delegate;
return G__25350;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__25355 = null;
if (arguments.length > 1) {
var G__25356__i = 0, G__25356__a = new Array(arguments.length -  1);
while (G__25356__i < G__25356__a.length) {G__25356__a[G__25356__i] = arguments[G__25356__i + 1]; ++G__25356__i;}
G__25355 = new cljs.core.IndexedSeq(G__25356__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__25357 = cljs.core.next(xs);
var G__25358 = cljs.core.next(ys);
xs = G__25357;
ys = G__25358;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__25359 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__25360 = cljs.core.next(s);
res = G__25359;
s = G__25360;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__25365 = ((h + (cljs.core.hash((function (){var G__25363 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25363) : cljs.core.key.call(null,G__25363));
})()) ^ cljs.core.hash((function (){var G__25364 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25364) : cljs.core.val.call(null,G__25364));
})()))) % (4503599627370496));
var G__25366 = cljs.core.next(s);
h = G__25365;
s = G__25366;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__25367 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__25368 = cljs.core.next(s__$1);
h = G__25367;
s__$1 = G__25368;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__25379_25389 = cljs.core.seq(fn_map);
var chunk__25380_25390 = null;
var count__25381_25391 = (0);
var i__25382_25392 = (0);
while(true){
if((i__25382_25392 < count__25381_25391)){
var vec__25383_25393 = chunk__25380_25390.cljs$core$IIndexed$_nth$arity$2(null,i__25382_25392);
var key_name_25394 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25383_25393,(0),null);
var f_25395 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25383_25393,(1),null);
var str_name_25396 = (function (){var G__25384 = key_name_25394;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25384) : cljs.core.name.call(null,G__25384));
})();
(obj[str_name_25396] = f_25395);

var G__25397 = seq__25379_25389;
var G__25398 = chunk__25380_25390;
var G__25399 = count__25381_25391;
var G__25400 = (i__25382_25392 + (1));
seq__25379_25389 = G__25397;
chunk__25380_25390 = G__25398;
count__25381_25391 = G__25399;
i__25382_25392 = G__25400;
continue;
} else {
var temp__4126__auto___25401 = cljs.core.seq(seq__25379_25389);
if(temp__4126__auto___25401){
var seq__25379_25402__$1 = temp__4126__auto___25401;
if(cljs.core.chunked_seq_QMARK_(seq__25379_25402__$1)){
var c__16932__auto___25403 = (function (){var G__25385 = seq__25379_25402__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__25385) : cljs.core.chunk_first.call(null,G__25385));
})();
var G__25404 = (function (){var G__25386 = seq__25379_25402__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__25386) : cljs.core.chunk_rest.call(null,G__25386));
})();
var G__25405 = c__16932__auto___25403;
var G__25406 = cljs.core.count(c__16932__auto___25403);
var G__25407 = (0);
seq__25379_25389 = G__25404;
chunk__25380_25390 = G__25405;
count__25381_25391 = G__25406;
i__25382_25392 = G__25407;
continue;
} else {
var vec__25387_25408 = cljs.core.first(seq__25379_25402__$1);
var key_name_25409 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25387_25408,(0),null);
var f_25410 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25387_25408,(1),null);
var str_name_25411 = (function (){var G__25388 = key_name_25409;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25388) : cljs.core.name.call(null,G__25388));
})();
(obj[str_name_25411] = f_25410);

var G__25412 = cljs.core.next(seq__25379_25402__$1);
var G__25413 = null;
var G__25414 = (0);
var G__25415 = (0);
seq__25379_25389 = G__25412;
chunk__25380_25390 = G__25413;
count__25381_25391 = G__25414;
i__25382_25392 = G__25415;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__25417 = coll;
if(G__25417){
var bit__16826__auto__ = (G__25417.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16826__auto__) || (G__25417.cljs$core$IReversible$)){
return true;
} else {
if((!G__25417.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25417);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25417);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__25418 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__25418;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__25419 = (i - (1));
var G__25420 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__25419;
r = G__25420;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__25421__i = 0, G__25421__a = new Array(arguments.length -  0);
while (G__25421__i < G__25421__a.length) {G__25421__a[G__25421__i] = arguments[G__25421__i + 0]; ++G__25421__i;}
  xs = new cljs.core.IndexedSeq(G__25421__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__25422){
var xs = cljs.core.seq(arglist__25422);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__16145__auto__ = (coll == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__25426 = coll;
if(G__25426){
var bit__16819__auto__ = (G__25426.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__25426.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__25428 = x;
if(G__25428){
var bit__16826__auto__ = (G__25428.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16826__auto__) || (G__25428.cljs$core$IList$)){
return true;
} else {
if((!G__25428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25428);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__25435 = a.ns;
var G__25436 = b.ns;
return goog.array.defaultCompare(G__25435,G__25436);
})();
if(((0) === nsc)){
var G__25437 = a.name;
var G__25438 = b.name;
return goog.array.defaultCompare(G__25437,G__25438);
} else {
return nsc;
}
}
} else {
var G__25439 = a.name;
var G__25440 = b.name;
return goog.array.defaultCompare(G__25439,G__25440);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__25442 = null;
var G__25442__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__25442__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__25442 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__25442__2.call(this,self__,coll);
case 3:
return G__25442__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25442.cljs$core$IFn$_invoke$arity$2 = G__25442__2;
G__25442.cljs$core$IFn$_invoke$arity$3 = G__25442__3;
return G__25442;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args25441){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25441)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__25444 = x;
if(G__25444){
var bit__16819__auto__ = (G__25444.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__25444.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__25446 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25446) : cljs.core.name.call(null,G__25446));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__25447 = ls.sval();
ls = G__25447;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__25449 = s;
if(G__25449){
var bit__16819__auto__ = (G__25449.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16819__auto__) || (G__25449.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__25450 = cljs.core.next(s__$1);
s__$1 = G__25450;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_25451 = (0);
var xs_25452 = cljs.core.seq(coll);
while(true){
if(xs_25452){
(ret[i_25451] = cljs.core.to_array(cljs.core.first(xs_25452)));

var G__25453 = (i_25451 + (1));
var G__25454 = cljs.core.next(xs_25452);
i_25451 = G__25453;
xs_25452 = G__25454;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25457 = (i + (1));
var G__25458 = cljs.core.next(s__$1);
i = G__25457;
s__$1 = G__25458;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___25459 = size;
var i_25460 = (0);
while(true){
if((i_25460 < n__17032__auto___25459)){
(a[i_25460] = init_val_or_seq);

var G__25461 = (i_25460 + (1));
i_25460 = G__25461;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25464 = (i + (1));
var G__25465 = cljs.core.next(s__$1);
i = G__25464;
s__$1 = G__25465;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___25466 = size;
var i_25467 = (0);
while(true){
if((i_25467 < n__17032__auto___25466)){
(a[i_25467] = init_val_or_seq);

var G__25468 = (i_25467 + (1));
i_25467 = G__25468;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25471 = (i + (1));
var G__25472 = cljs.core.next(s__$1);
i = G__25471;
s__$1 = G__25472;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___25473 = size;
var i_25474 = (0);
while(true){
if((i_25474 < n__17032__auto___25473)){
(a[i_25474] = init_val_or_seq);

var G__25475 = (i_25474 + (1));
i_25474 = G__25475;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25478 = (i + (1));
var G__25479 = cljs.core.next(s__$1);
i = G__25478;
s__$1 = G__25479;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___25480 = size;
var i_25481 = (0);
while(true){
if((i_25481 < n__17032__auto___25480)){
(a[i_25481] = init_val_or_seq);

var G__25482 = (i_25481 + (1));
i_25481 = G__25482;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__25483 = cljs.core.next(s__$1);
var G__25484 = (i - (1));
var G__25485 = (sum + (1));
s__$1 = G__25483;
i = G__25484;
sum = G__25485;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__25505__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__25505 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25506__i = 0, G__25506__a = new Array(arguments.length -  2);
while (G__25506__i < G__25506__a.length) {G__25506__a[G__25506__i] = arguments[G__25506__i + 2]; ++G__25506__i;}
  zs = new cljs.core.IndexedSeq(G__25506__a,0);
} 
return G__25505__delegate.call(this,x,y,zs);};
G__25505.cljs$lang$maxFixedArity = 2;
G__25505.cljs$lang$applyTo = (function (arglist__25507){
var x = cljs.core.first(arglist__25507);
arglist__25507 = cljs.core.next(arglist__25507);
var y = cljs.core.first(arglist__25507);
var zs = cljs.core.rest(arglist__25507);
return G__25505__delegate(x,y,zs);
});
G__25505.cljs$core$IFn$_invoke$arity$variadic = G__25505__delegate;
return G__25505;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__25508 = null;
if (arguments.length > 2) {
var G__25509__i = 0, G__25509__a = new Array(arguments.length -  2);
while (G__25509__i < G__25509__a.length) {G__25509__a[G__25509__i] = arguments[G__25509__i + 2]; ++G__25509__i;}
G__25508 = new cljs.core.IndexedSeq(G__25509__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__25510__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__25510 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__25511__i = 0, G__25511__a = new Array(arguments.length -  4);
while (G__25511__i < G__25511__a.length) {G__25511__a[G__25511__i] = arguments[G__25511__i + 4]; ++G__25511__i;}
  more = new cljs.core.IndexedSeq(G__25511__a,0);
} 
return G__25510__delegate.call(this,a,b,c,d,more);};
G__25510.cljs$lang$maxFixedArity = 4;
G__25510.cljs$lang$applyTo = (function (arglist__25512){
var a = cljs.core.first(arglist__25512);
arglist__25512 = cljs.core.next(arglist__25512);
var b = cljs.core.first(arglist__25512);
arglist__25512 = cljs.core.next(arglist__25512);
var c = cljs.core.first(arglist__25512);
arglist__25512 = cljs.core.next(arglist__25512);
var d = cljs.core.first(arglist__25512);
var more = cljs.core.rest(arglist__25512);
return G__25510__delegate(a,b,c,d,more);
});
G__25510.cljs$core$IFn$_invoke$arity$variadic = G__25510__delegate;
return G__25510;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__25513 = null;
if (arguments.length > 4) {
var G__25514__i = 0, G__25514__a = new Array(arguments.length -  4);
while (G__25514__i < G__25514__a.length) {G__25514__a[G__25514__i] = arguments[G__25514__i + 4]; ++G__25514__i;}
G__25513 = new cljs.core.IndexedSeq(G__25514__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__25513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__25515__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25516 = ntcoll;
var G__25517 = cljs.core.first(vals);
var G__25518 = cljs.core.next(vals);
tcoll = G__25516;
val = G__25517;
vals = G__25518;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25515 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25519__i = 0, G__25519__a = new Array(arguments.length -  2);
while (G__25519__i < G__25519__a.length) {G__25519__a[G__25519__i] = arguments[G__25519__i + 2]; ++G__25519__i;}
  vals = new cljs.core.IndexedSeq(G__25519__a,0);
} 
return G__25515__delegate.call(this,tcoll,val,vals);};
G__25515.cljs$lang$maxFixedArity = 2;
G__25515.cljs$lang$applyTo = (function (arglist__25520){
var tcoll = cljs.core.first(arglist__25520);
arglist__25520 = cljs.core.next(arglist__25520);
var val = cljs.core.first(arglist__25520);
var vals = cljs.core.rest(arglist__25520);
return G__25515__delegate(tcoll,val,vals);
});
G__25515.cljs$core$IFn$_invoke$arity$variadic = G__25515__delegate;
return G__25515;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__25521 = null;
if (arguments.length > 2) {
var G__25522__i = 0, G__25522__a = new Array(arguments.length -  2);
while (G__25522__i < G__25522__a.length) {G__25522__a[G__25522__i] = arguments[G__25522__i + 2]; ++G__25522__i;}
G__25521 = new cljs.core.IndexedSeq(G__25522__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__25523__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__25524 = ntcoll;
var G__25525 = cljs.core.first(kvs);
var G__25526 = cljs.core.second(kvs);
var G__25527 = cljs.core.nnext(kvs);
tcoll = G__25524;
key = G__25525;
val = G__25526;
kvs = G__25527;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25523 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__25528__i = 0, G__25528__a = new Array(arguments.length -  3);
while (G__25528__i < G__25528__a.length) {G__25528__a[G__25528__i] = arguments[G__25528__i + 3]; ++G__25528__i;}
  kvs = new cljs.core.IndexedSeq(G__25528__a,0);
} 
return G__25523__delegate.call(this,tcoll,key,val,kvs);};
G__25523.cljs$lang$maxFixedArity = 3;
G__25523.cljs$lang$applyTo = (function (arglist__25529){
var tcoll = cljs.core.first(arglist__25529);
arglist__25529 = cljs.core.next(arglist__25529);
var key = cljs.core.first(arglist__25529);
arglist__25529 = cljs.core.next(arglist__25529);
var val = cljs.core.first(arglist__25529);
var kvs = cljs.core.rest(arglist__25529);
return G__25523__delegate(tcoll,key,val,kvs);
});
G__25523.cljs$core$IFn$_invoke$arity$variadic = G__25523__delegate;
return G__25523;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__25530 = null;
if (arguments.length > 3) {
var G__25531__i = 0, G__25531__a = new Array(arguments.length -  3);
while (G__25531__i < G__25531__a.length) {G__25531__a[G__25531__i] = arguments[G__25531__i + 3]; ++G__25531__i;}
G__25530 = new cljs.core.IndexedSeq(G__25531__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__25530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__25532__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__25533 = ntcoll;
var G__25534 = cljs.core.first(ks);
var G__25535 = cljs.core.next(ks);
tcoll = G__25533;
key = G__25534;
ks = G__25535;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25532 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25536__i = 0, G__25536__a = new Array(arguments.length -  2);
while (G__25536__i < G__25536__a.length) {G__25536__a[G__25536__i] = arguments[G__25536__i + 2]; ++G__25536__i;}
  ks = new cljs.core.IndexedSeq(G__25536__a,0);
} 
return G__25532__delegate.call(this,tcoll,key,ks);};
G__25532.cljs$lang$maxFixedArity = 2;
G__25532.cljs$lang$applyTo = (function (arglist__25537){
var tcoll = cljs.core.first(arglist__25537);
arglist__25537 = cljs.core.next(arglist__25537);
var key = cljs.core.first(arglist__25537);
var ks = cljs.core.rest(arglist__25537);
return G__25532__delegate(tcoll,key,ks);
});
G__25532.cljs$core$IFn$_invoke$arity$variadic = G__25532__delegate;
return G__25532;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__25538 = null;
if (arguments.length > 2) {
var G__25539__i = 0, G__25539__a = new Array(arguments.length -  2);
while (G__25539__i < G__25539__a.length) {G__25539__a[G__25539__i] = arguments[G__25539__i + 2]; ++G__25539__i;}
G__25538 = new cljs.core.IndexedSeq(G__25539__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__25538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__25540__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25541 = ntcoll;
var G__25542 = cljs.core.first(vals);
var G__25543 = cljs.core.next(vals);
tcoll = G__25541;
val = G__25542;
vals = G__25543;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25540 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25544__i = 0, G__25544__a = new Array(arguments.length -  2);
while (G__25544__i < G__25544__a.length) {G__25544__a[G__25544__i] = arguments[G__25544__i + 2]; ++G__25544__i;}
  vals = new cljs.core.IndexedSeq(G__25544__a,0);
} 
return G__25540__delegate.call(this,tcoll,val,vals);};
G__25540.cljs$lang$maxFixedArity = 2;
G__25540.cljs$lang$applyTo = (function (arglist__25545){
var tcoll = cljs.core.first(arglist__25545);
arglist__25545 = cljs.core.next(arglist__25545);
var val = cljs.core.first(arglist__25545);
var vals = cljs.core.rest(arglist__25545);
return G__25540__delegate(tcoll,val,vals);
});
G__25540.cljs$core$IFn$_invoke$arity$variadic = G__25540__delegate;
return G__25540;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__25546 = null;
if (arguments.length > 2) {
var G__25547__i = 0, G__25547__a = new Array(arguments.length -  2);
while (G__25547__i < G__25547__a.length) {G__25547__a[G__25547__i] = arguments[G__25547__i + 2]; ++G__25547__i;}
G__25546 = new cljs.core.IndexedSeq(G__25547__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25546);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a17076 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a17076);
} else {
var G__25758 = a17076;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25758) : f.call(null,G__25758));
}
} else {
var b17077 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a17076,b17077);
} else {
var G__25759 = a17076;
var G__25760 = b17077;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25759,G__25760) : f.call(null,G__25759,G__25760));
}
} else {
var c17078 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a17076,b17077,c17078);
} else {
var G__25761 = a17076;
var G__25762 = b17077;
var G__25763 = c17078;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25761,G__25762,G__25763) : f.call(null,G__25761,G__25762,G__25763));
}
} else {
var d17079 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a17076,b17077,c17078,d17079);
} else {
var G__25764 = a17076;
var G__25765 = b17077;
var G__25766 = c17078;
var G__25767 = d17079;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25764,G__25765,G__25766,G__25767) : f.call(null,G__25764,G__25765,G__25766,G__25767));
}
} else {
var e17080 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a17076,b17077,c17078,d17079,e17080);
} else {
var G__25768 = a17076;
var G__25769 = b17077;
var G__25770 = c17078;
var G__25771 = d17079;
var G__25772 = e17080;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25768,G__25769,G__25770,G__25771,G__25772) : f.call(null,G__25768,G__25769,G__25770,G__25771,G__25772));
}
} else {
var f17081 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a17076,b17077,c17078,d17079,e17080,f17081);
} else {
var G__25773 = a17076;
var G__25774 = b17077;
var G__25775 = c17078;
var G__25776 = d17079;
var G__25777 = e17080;
var G__25778 = f17081;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25773,G__25774,G__25775,G__25776,G__25777,G__25778) : f.call(null,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778));
}
} else {
var g17082 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a17076,b17077,c17078,d17079,e17080,f17081,g17082);
} else {
var G__25779 = a17076;
var G__25780 = b17077;
var G__25781 = c17078;
var G__25782 = d17079;
var G__25783 = e17080;
var G__25784 = f17081;
var G__25785 = g17082;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__25779,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785) : f.call(null,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785));
}
} else {
var h17083 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083);
} else {
var G__25786 = a17076;
var G__25787 = b17077;
var G__25788 = c17078;
var G__25789 = d17079;
var G__25790 = e17080;
var G__25791 = f17081;
var G__25792 = g17082;
var G__25793 = h17083;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793) : f.call(null,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793));
}
} else {
var i17084 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084);
} else {
var G__25794 = a17076;
var G__25795 = b17077;
var G__25796 = c17078;
var G__25797 = d17079;
var G__25798 = e17080;
var G__25799 = f17081;
var G__25800 = g17082;
var G__25801 = h17083;
var G__25802 = i17084;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__25794,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802) : f.call(null,G__25794,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802));
}
} else {
var j17085 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085);
} else {
var G__25803 = a17076;
var G__25804 = b17077;
var G__25805 = c17078;
var G__25806 = d17079;
var G__25807 = e17080;
var G__25808 = f17081;
var G__25809 = g17082;
var G__25810 = h17083;
var G__25811 = i17084;
var G__25812 = j17085;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__25803,G__25804,G__25805,G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812) : f.call(null,G__25803,G__25804,G__25805,G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812));
}
} else {
var k17086 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086);
} else {
var G__25813 = a17076;
var G__25814 = b17077;
var G__25815 = c17078;
var G__25816 = d17079;
var G__25817 = e17080;
var G__25818 = f17081;
var G__25819 = g17082;
var G__25820 = h17083;
var G__25821 = i17084;
var G__25822 = j17085;
var G__25823 = k17086;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__25813,G__25814,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823) : f.call(null,G__25813,G__25814,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823));
}
} else {
var l17087 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087);
} else {
var G__25824 = a17076;
var G__25825 = b17077;
var G__25826 = c17078;
var G__25827 = d17079;
var G__25828 = e17080;
var G__25829 = f17081;
var G__25830 = g17082;
var G__25831 = h17083;
var G__25832 = i17084;
var G__25833 = j17085;
var G__25834 = k17086;
var G__25835 = l17087;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__25824,G__25825,G__25826,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835) : f.call(null,G__25824,G__25825,G__25826,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835));
}
} else {
var m17088 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088);
} else {
var G__25836 = a17076;
var G__25837 = b17077;
var G__25838 = c17078;
var G__25839 = d17079;
var G__25840 = e17080;
var G__25841 = f17081;
var G__25842 = g17082;
var G__25843 = h17083;
var G__25844 = i17084;
var G__25845 = j17085;
var G__25846 = k17086;
var G__25847 = l17087;
var G__25848 = m17088;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__25836,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843,G__25844,G__25845,G__25846,G__25847,G__25848) : f.call(null,G__25836,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843,G__25844,G__25845,G__25846,G__25847,G__25848));
}
} else {
var n17089 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089);
} else {
var G__25849 = a17076;
var G__25850 = b17077;
var G__25851 = c17078;
var G__25852 = d17079;
var G__25853 = e17080;
var G__25854 = f17081;
var G__25855 = g17082;
var G__25856 = h17083;
var G__25857 = i17084;
var G__25858 = j17085;
var G__25859 = k17086;
var G__25860 = l17087;
var G__25861 = m17088;
var G__25862 = n17089;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860,G__25861,G__25862) : f.call(null,G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860,G__25861,G__25862));
}
} else {
var o17090 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090);
} else {
var G__25863 = a17076;
var G__25864 = b17077;
var G__25865 = c17078;
var G__25866 = d17079;
var G__25867 = e17080;
var G__25868 = f17081;
var G__25869 = g17082;
var G__25870 = h17083;
var G__25871 = i17084;
var G__25872 = j17085;
var G__25873 = k17086;
var G__25874 = l17087;
var G__25875 = m17088;
var G__25876 = n17089;
var G__25877 = o17090;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__25863,G__25864,G__25865,G__25866,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873,G__25874,G__25875,G__25876,G__25877) : f.call(null,G__25863,G__25864,G__25865,G__25866,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873,G__25874,G__25875,G__25876,G__25877));
}
} else {
var p17091 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091);
} else {
var G__25878 = a17076;
var G__25879 = b17077;
var G__25880 = c17078;
var G__25881 = d17079;
var G__25882 = e17080;
var G__25883 = f17081;
var G__25884 = g17082;
var G__25885 = h17083;
var G__25886 = i17084;
var G__25887 = j17085;
var G__25888 = k17086;
var G__25889 = l17087;
var G__25890 = m17088;
var G__25891 = n17089;
var G__25892 = o17090;
var G__25893 = p17091;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__25878,G__25879,G__25880,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893) : f.call(null,G__25878,G__25879,G__25880,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893));
}
} else {
var q17092 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092);
} else {
var G__25894 = a17076;
var G__25895 = b17077;
var G__25896 = c17078;
var G__25897 = d17079;
var G__25898 = e17080;
var G__25899 = f17081;
var G__25900 = g17082;
var G__25901 = h17083;
var G__25902 = i17084;
var G__25903 = j17085;
var G__25904 = k17086;
var G__25905 = l17087;
var G__25906 = m17088;
var G__25907 = n17089;
var G__25908 = o17090;
var G__25909 = p17091;
var G__25910 = q17092;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__25894,G__25895,G__25896,G__25897,G__25898,G__25899,G__25900,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909,G__25910) : f.call(null,G__25894,G__25895,G__25896,G__25897,G__25898,G__25899,G__25900,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909,G__25910));
}
} else {
var r17093 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093);
} else {
var G__25911 = a17076;
var G__25912 = b17077;
var G__25913 = c17078;
var G__25914 = d17079;
var G__25915 = e17080;
var G__25916 = f17081;
var G__25917 = g17082;
var G__25918 = h17083;
var G__25919 = i17084;
var G__25920 = j17085;
var G__25921 = k17086;
var G__25922 = l17087;
var G__25923 = m17088;
var G__25924 = n17089;
var G__25925 = o17090;
var G__25926 = p17091;
var G__25927 = q17092;
var G__25928 = r17093;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__25911,G__25912,G__25913,G__25914,G__25915,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924,G__25925,G__25926,G__25927,G__25928) : f.call(null,G__25911,G__25912,G__25913,G__25914,G__25915,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924,G__25925,G__25926,G__25927,G__25928));
}
} else {
var s17094 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094);
} else {
var G__25929 = a17076;
var G__25930 = b17077;
var G__25931 = c17078;
var G__25932 = d17079;
var G__25933 = e17080;
var G__25934 = f17081;
var G__25935 = g17082;
var G__25936 = h17083;
var G__25937 = i17084;
var G__25938 = j17085;
var G__25939 = k17086;
var G__25940 = l17087;
var G__25941 = m17088;
var G__25942 = n17089;
var G__25943 = o17090;
var G__25944 = p17091;
var G__25945 = q17092;
var G__25946 = r17093;
var G__25947 = s17094;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__25929,G__25930,G__25931,G__25932,G__25933,G__25934,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940,G__25941,G__25942,G__25943,G__25944,G__25945,G__25946,G__25947) : f.call(null,G__25929,G__25930,G__25931,G__25932,G__25933,G__25934,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940,G__25941,G__25942,G__25943,G__25944,G__25945,G__25946,G__25947));
}
} else {
var t17095 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094,t17095);
} else {
var G__25948 = a17076;
var G__25949 = b17077;
var G__25950 = c17078;
var G__25951 = d17079;
var G__25952 = e17080;
var G__25953 = f17081;
var G__25954 = g17082;
var G__25955 = h17083;
var G__25956 = i17084;
var G__25957 = j17085;
var G__25958 = k17086;
var G__25959 = l17087;
var G__25960 = m17088;
var G__25961 = n17089;
var G__25962 = o17090;
var G__25963 = p17091;
var G__25964 = q17092;
var G__25965 = r17093;
var G__25966 = s17094;
var G__25967 = t17095;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954,G__25955,G__25956,G__25957,G__25958,G__25959,G__25960,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967) : f.call(null,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954,G__25955,G__25956,G__25957,G__25958,G__25959,G__25960,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__25968__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__25968 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25969__i = 0, G__25969__a = new Array(arguments.length -  5);
while (G__25969__i < G__25969__a.length) {G__25969__a[G__25969__i] = arguments[G__25969__i + 5]; ++G__25969__i;}
  args = new cljs.core.IndexedSeq(G__25969__a,0);
} 
return G__25968__delegate.call(this,f,a,b,c,d,args);};
G__25968.cljs$lang$maxFixedArity = 5;
G__25968.cljs$lang$applyTo = (function (arglist__25970){
var f = cljs.core.first(arglist__25970);
arglist__25970 = cljs.core.next(arglist__25970);
var a = cljs.core.first(arglist__25970);
arglist__25970 = cljs.core.next(arglist__25970);
var b = cljs.core.first(arglist__25970);
arglist__25970 = cljs.core.next(arglist__25970);
var c = cljs.core.first(arglist__25970);
arglist__25970 = cljs.core.next(arglist__25970);
var d = cljs.core.first(arglist__25970);
var args = cljs.core.rest(arglist__25970);
return G__25968__delegate(f,a,b,c,d,args);
});
G__25968.cljs$core$IFn$_invoke$arity$variadic = G__25968__delegate;
return G__25968;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25971 = null;
if (arguments.length > 5) {
var G__25972__i = 0, G__25972__a = new Array(arguments.length -  5);
while (G__25972__i < G__25972__a.length) {G__25972__a[G__25972__i] = arguments[G__25972__i + 5]; ++G__25972__i;}
G__25971 = new cljs.core.IndexedSeq(G__25972__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25988 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25988) : f.call(null,G__25988));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25989 = cljs.core.meta(obj);
var G__25990 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25989,G__25990) : f.call(null,G__25989,G__25990));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25991 = cljs.core.meta(obj);
var G__25992 = a;
var G__25993 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25991,G__25992,G__25993) : f.call(null,G__25991,G__25992,G__25993));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25994 = cljs.core.meta(obj);
var G__25995 = a;
var G__25996 = b;
var G__25997 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25994,G__25995,G__25996,G__25997) : f.call(null,G__25994,G__25995,G__25996,G__25997));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25998 = cljs.core.meta(obj);
var G__25999 = a;
var G__26000 = b;
var G__26001 = c;
var G__26002 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25998,G__25999,G__26000,G__26001,G__26002) : f.call(null,G__25998,G__25999,G__26000,G__26001,G__26002));
})());
});
var vary_meta__7 = (function() { 
var G__26003__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__26003 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__26004__i = 0, G__26004__a = new Array(arguments.length -  6);
while (G__26004__i < G__26004__a.length) {G__26004__a[G__26004__i] = arguments[G__26004__i + 6]; ++G__26004__i;}
  args = new cljs.core.IndexedSeq(G__26004__a,0);
} 
return G__26003__delegate.call(this,obj,f,a,b,c,d,args);};
G__26003.cljs$lang$maxFixedArity = 6;
G__26003.cljs$lang$applyTo = (function (arglist__26005){
var obj = cljs.core.first(arglist__26005);
arglist__26005 = cljs.core.next(arglist__26005);
var f = cljs.core.first(arglist__26005);
arglist__26005 = cljs.core.next(arglist__26005);
var a = cljs.core.first(arglist__26005);
arglist__26005 = cljs.core.next(arglist__26005);
var b = cljs.core.first(arglist__26005);
arglist__26005 = cljs.core.next(arglist__26005);
var c = cljs.core.first(arglist__26005);
arglist__26005 = cljs.core.next(arglist__26005);
var d = cljs.core.first(arglist__26005);
var args = cljs.core.rest(arglist__26005);
return G__26003__delegate(obj,f,a,b,c,d,args);
});
G__26003.cljs$core$IFn$_invoke$arity$variadic = G__26003__delegate;
return G__26003;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__26006 = null;
if (arguments.length > 6) {
var G__26007__i = 0, G__26007__a = new Array(arguments.length -  6);
while (G__26007__i < G__26007__a.length) {G__26007__a[G__26007__i] = arguments[G__26007__i + 6]; ++G__26007__i;}
G__26006 = new cljs.core.IndexedSeq(G__26007__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__26006);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__26008__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__26008 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__26009__i = 0, G__26009__a = new Array(arguments.length -  2);
while (G__26009__i < G__26009__a.length) {G__26009__a[G__26009__i] = arguments[G__26009__i + 2]; ++G__26009__i;}
  more = new cljs.core.IndexedSeq(G__26009__a,0);
} 
return G__26008__delegate.call(this,x,y,more);};
G__26008.cljs$lang$maxFixedArity = 2;
G__26008.cljs$lang$applyTo = (function (arglist__26010){
var x = cljs.core.first(arglist__26010);
arglist__26010 = cljs.core.next(arglist__26010);
var y = cljs.core.first(arglist__26010);
var more = cljs.core.rest(arglist__26010);
return G__26008__delegate(x,y,more);
});
G__26008.cljs$core$IFn$_invoke$arity$variadic = G__26008__delegate;
return G__26008;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__26011 = null;
if (arguments.length > 2) {
var G__26012__i = 0, G__26012__a = new Array(arguments.length -  2);
while (G__26012__i < G__26012__a.length) {G__26012__a[G__26012__i] = arguments[G__26012__i + 2]; ++G__26012__i;}
G__26011 = new cljs.core.IndexedSeq(G__26012__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t26016 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t26016 = (function (nil_iter,meta26017){
this.nil_iter = nil_iter;
this.meta26017 = meta26017;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t26016.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t26016.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t26016.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t26016.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_26018){
var self__ = this;
var _26018__$1 = this;
return self__.meta26017;
});

cljs.core.t26016.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_26018,meta26017__$1){
var self__ = this;
var _26018__$1 = this;
return (new cljs.core.t26016(self__.nil_iter,meta26017__$1));
});

cljs.core.t26016.cljs$lang$type = true;

cljs.core.t26016.cljs$lang$ctorStr = "cljs.core/t26016";

cljs.core.t26016.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/t26016");
});

cljs.core.__GT_t26016 = (function __GT_t26016(nil_iter__$1,meta26017){
return (new cljs.core.t26016(nil_iter__$1,meta26017));
});

}

return (new cljs.core.t26016(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return self__.iter.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__26019 = lt;
var G__26020 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__26019,G__26020) : self__.xform.call(null,G__26019,G__26020));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26021 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26021) : self__.xform.call(null,G__26021));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__26023 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26023) : xform.call(null,G__26023));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__26025 = cljs.core.next(iters__$1);
iters__$1 = G__26025;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__17032__auto___26026 = self__.iters.length;
var i_26027 = (0);
while(true){
if((i_26027 < n__17032__auto___26026)){
(self__.nexts[i_26027] = (self__.iters[i_26027]).next());

var G__26028 = (i_26027 + (1));
i_26027 = G__26028;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return this$.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26024 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26024) : self__.xform.call(null,G__26024));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__26033 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26033) : xform.call(null,G__26033));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__26034_26038 = cljs.core.seq(colls);
var chunk__26035_26039 = null;
var count__26036_26040 = (0);
var i__26037_26041 = (0);
while(true){
if((i__26037_26041 < count__26036_26040)){
var coll_26042 = chunk__26035_26039.cljs$core$IIndexed$_nth$arity$2(null,i__26037_26041);
iters.push(cljs.core.iter(coll_26042));

var G__26043 = seq__26034_26038;
var G__26044 = chunk__26035_26039;
var G__26045 = count__26036_26040;
var G__26046 = (i__26037_26041 + (1));
seq__26034_26038 = G__26043;
chunk__26035_26039 = G__26044;
count__26036_26040 = G__26045;
i__26037_26041 = G__26046;
continue;
} else {
var temp__4126__auto___26047 = cljs.core.seq(seq__26034_26038);
if(temp__4126__auto___26047){
var seq__26034_26048__$1 = temp__4126__auto___26047;
if(cljs.core.chunked_seq_QMARK_(seq__26034_26048__$1)){
var c__16932__auto___26049 = cljs.core.chunk_first(seq__26034_26048__$1);
var G__26050 = cljs.core.chunk_rest(seq__26034_26048__$1);
var G__26051 = c__16932__auto___26049;
var G__26052 = cljs.core.count(c__16932__auto___26049);
var G__26053 = (0);
seq__26034_26038 = G__26050;
chunk__26035_26039 = G__26051;
count__26036_26040 = G__26052;
i__26037_26041 = G__26053;
continue;
} else {
var coll_26054 = cljs.core.first(seq__26034_26048__$1);
iters.push(cljs.core.iter(coll_26054));

var G__26055 = cljs.core.next(seq__26034_26048__$1);
var G__26056 = null;
var G__26057 = (0);
var G__26058 = (0);
seq__26034_26038 = G__26055;
chunk__26035_26039 = G__26056;
count__26036_26040 = G__26057;
i__26037_26041 = G__26058;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__16145__auto__ = cljs.core.seq(coll);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__26059__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__26059 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26060__i = 0, G__26060__a = new Array(arguments.length -  2);
while (G__26060__i < G__26060__a.length) {G__26060__a[G__26060__i] = arguments[G__26060__i + 2]; ++G__26060__i;}
  colls = new cljs.core.IndexedSeq(G__26060__a,0);
} 
return G__26059__delegate.call(this,xform,coll,colls);};
G__26059.cljs$lang$maxFixedArity = 2;
G__26059.cljs$lang$applyTo = (function (arglist__26061){
var xform = cljs.core.first(arglist__26061);
arglist__26061 = cljs.core.next(arglist__26061);
var coll = cljs.core.first(arglist__26061);
var colls = cljs.core.rest(arglist__26061);
return G__26059__delegate(xform,coll,colls);
});
G__26059.cljs$core$IFn$_invoke$arity$variadic = G__26059__delegate;
return G__26059;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__26062 = null;
if (arguments.length > 2) {
var G__26063__i = 0, G__26063__a = new Array(arguments.length -  2);
while (G__26063__i < G__26063__a.length) {G__26063__a[G__26063__i] = arguments[G__26063__i + 2]; ++G__26063__i;}
G__26062 = new cljs.core.IndexedSeq(G__26063__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__26062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__26065 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26065) : pred.call(null,G__26065));
})())){
var G__26066 = pred;
var G__26067 = cljs.core.next(coll);
pred = G__26066;
coll = G__26067;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__16145__auto__ = (function (){var G__26071 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26071) : pred.call(null,G__26071));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__26072 = pred;
var G__26073 = cljs.core.next(coll);
pred = G__26072;
coll = G__26073;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__26080 = null;
var G__26080__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__26080__1 = (function (x){
return cljs.core.not((function (){var G__26077 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26077) : f.call(null,G__26077));
})());
});
var G__26080__2 = (function (x,y){
return cljs.core.not((function (){var G__26078 = x;
var G__26079 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26078,G__26079) : f.call(null,G__26078,G__26079));
})());
});
var G__26080__3 = (function() { 
var G__26081__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__26081 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__26082__i = 0, G__26082__a = new Array(arguments.length -  2);
while (G__26082__i < G__26082__a.length) {G__26082__a[G__26082__i] = arguments[G__26082__i + 2]; ++G__26082__i;}
  zs = new cljs.core.IndexedSeq(G__26082__a,0);
} 
return G__26081__delegate.call(this,x,y,zs);};
G__26081.cljs$lang$maxFixedArity = 2;
G__26081.cljs$lang$applyTo = (function (arglist__26083){
var x = cljs.core.first(arglist__26083);
arglist__26083 = cljs.core.next(arglist__26083);
var y = cljs.core.first(arglist__26083);
var zs = cljs.core.rest(arglist__26083);
return G__26081__delegate(x,y,zs);
});
G__26081.cljs$core$IFn$_invoke$arity$variadic = G__26081__delegate;
return G__26081;
})()
;
G__26080 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__26080__0.call(this);
case 1:
return G__26080__1.call(this,x);
case 2:
return G__26080__2.call(this,x,y);
default:
var G__26084 = null;
if (arguments.length > 2) {
var G__26085__i = 0, G__26085__a = new Array(arguments.length -  2);
while (G__26085__i < G__26085__a.length) {G__26085__a[G__26085__i] = arguments[G__26085__i + 2]; ++G__26085__i;}
G__26084 = new cljs.core.IndexedSeq(G__26085__a,0);
}
return G__26080__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26080.cljs$lang$maxFixedArity = 2;
G__26080.cljs$lang$applyTo = G__26080__3.cljs$lang$applyTo;
G__26080.cljs$core$IFn$_invoke$arity$0 = G__26080__0;
G__26080.cljs$core$IFn$_invoke$arity$1 = G__26080__1;
G__26080.cljs$core$IFn$_invoke$arity$2 = G__26080__2;
G__26080.cljs$core$IFn$_invoke$arity$variadic = G__26080__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26080;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__26086__delegate = function (args){
return x;
};
var G__26086 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26087__i = 0, G__26087__a = new Array(arguments.length -  0);
while (G__26087__i < G__26087__a.length) {G__26087__a[G__26087__i] = arguments[G__26087__i + 0]; ++G__26087__i;}
  args = new cljs.core.IndexedSeq(G__26087__a,0);
} 
return G__26086__delegate.call(this,args);};
G__26086.cljs$lang$maxFixedArity = 0;
G__26086.cljs$lang$applyTo = (function (arglist__26088){
var args = cljs.core.seq(arglist__26088);
return G__26086__delegate(args);
});
G__26086.cljs$core$IFn$_invoke$arity$variadic = G__26086__delegate;
return G__26086;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__26143 = null;
var G__26143__0 = (function (){
var G__26116 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26116) : f.call(null,G__26116));
});
var G__26143__1 = (function (x){
var G__26117 = (function (){var G__26118 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26118) : g.call(null,G__26118));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26117) : f.call(null,G__26117));
});
var G__26143__2 = (function (x,y){
var G__26119 = (function (){var G__26120 = x;
var G__26121 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__26120,G__26121) : g.call(null,G__26120,G__26121));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26119) : f.call(null,G__26119));
});
var G__26143__3 = (function (x,y,z){
var G__26122 = (function (){var G__26123 = x;
var G__26124 = y;
var G__26125 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__26123,G__26124,G__26125) : g.call(null,G__26123,G__26124,G__26125));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26122) : f.call(null,G__26122));
});
var G__26143__4 = (function() { 
var G__26144__delegate = function (x,y,z,args){
var G__26126 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26126) : f.call(null,G__26126));
};
var G__26144 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26145__i = 0, G__26145__a = new Array(arguments.length -  3);
while (G__26145__i < G__26145__a.length) {G__26145__a[G__26145__i] = arguments[G__26145__i + 3]; ++G__26145__i;}
  args = new cljs.core.IndexedSeq(G__26145__a,0);
} 
return G__26144__delegate.call(this,x,y,z,args);};
G__26144.cljs$lang$maxFixedArity = 3;
G__26144.cljs$lang$applyTo = (function (arglist__26146){
var x = cljs.core.first(arglist__26146);
arglist__26146 = cljs.core.next(arglist__26146);
var y = cljs.core.first(arglist__26146);
arglist__26146 = cljs.core.next(arglist__26146);
var z = cljs.core.first(arglist__26146);
var args = cljs.core.rest(arglist__26146);
return G__26144__delegate(x,y,z,args);
});
G__26144.cljs$core$IFn$_invoke$arity$variadic = G__26144__delegate;
return G__26144;
})()
;
G__26143 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26143__0.call(this);
case 1:
return G__26143__1.call(this,x);
case 2:
return G__26143__2.call(this,x,y);
case 3:
return G__26143__3.call(this,x,y,z);
default:
var G__26147 = null;
if (arguments.length > 3) {
var G__26148__i = 0, G__26148__a = new Array(arguments.length -  3);
while (G__26148__i < G__26148__a.length) {G__26148__a[G__26148__i] = arguments[G__26148__i + 3]; ++G__26148__i;}
G__26147 = new cljs.core.IndexedSeq(G__26148__a,0);
}
return G__26143__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26143.cljs$lang$maxFixedArity = 3;
G__26143.cljs$lang$applyTo = G__26143__4.cljs$lang$applyTo;
G__26143.cljs$core$IFn$_invoke$arity$0 = G__26143__0;
G__26143.cljs$core$IFn$_invoke$arity$1 = G__26143__1;
G__26143.cljs$core$IFn$_invoke$arity$2 = G__26143__2;
G__26143.cljs$core$IFn$_invoke$arity$3 = G__26143__3;
G__26143.cljs$core$IFn$_invoke$arity$variadic = G__26143__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26143;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__26149 = null;
var G__26149__0 = (function (){
var G__26127 = (function (){var G__26128 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26128) : g.call(null,G__26128));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26127) : f.call(null,G__26127));
});
var G__26149__1 = (function (x){
var G__26129 = (function (){var G__26130 = (function (){var G__26131 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__26131) : h.call(null,G__26131));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26130) : g.call(null,G__26130));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26129) : f.call(null,G__26129));
});
var G__26149__2 = (function (x,y){
var G__26132 = (function (){var G__26133 = (function (){var G__26134 = x;
var G__26135 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__26134,G__26135) : h.call(null,G__26134,G__26135));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26133) : g.call(null,G__26133));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26132) : f.call(null,G__26132));
});
var G__26149__3 = (function (x,y,z){
var G__26136 = (function (){var G__26137 = (function (){var G__26138 = x;
var G__26139 = y;
var G__26140 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__26138,G__26139,G__26140) : h.call(null,G__26138,G__26139,G__26140));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26137) : g.call(null,G__26137));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26136) : f.call(null,G__26136));
});
var G__26149__4 = (function() { 
var G__26150__delegate = function (x,y,z,args){
var G__26141 = (function (){var G__26142 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26142) : g.call(null,G__26142));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26141) : f.call(null,G__26141));
};
var G__26150 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26151__i = 0, G__26151__a = new Array(arguments.length -  3);
while (G__26151__i < G__26151__a.length) {G__26151__a[G__26151__i] = arguments[G__26151__i + 3]; ++G__26151__i;}
  args = new cljs.core.IndexedSeq(G__26151__a,0);
} 
return G__26150__delegate.call(this,x,y,z,args);};
G__26150.cljs$lang$maxFixedArity = 3;
G__26150.cljs$lang$applyTo = (function (arglist__26152){
var x = cljs.core.first(arglist__26152);
arglist__26152 = cljs.core.next(arglist__26152);
var y = cljs.core.first(arglist__26152);
arglist__26152 = cljs.core.next(arglist__26152);
var z = cljs.core.first(arglist__26152);
var args = cljs.core.rest(arglist__26152);
return G__26150__delegate(x,y,z,args);
});
G__26150.cljs$core$IFn$_invoke$arity$variadic = G__26150__delegate;
return G__26150;
})()
;
G__26149 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26149__0.call(this);
case 1:
return G__26149__1.call(this,x);
case 2:
return G__26149__2.call(this,x,y);
case 3:
return G__26149__3.call(this,x,y,z);
default:
var G__26153 = null;
if (arguments.length > 3) {
var G__26154__i = 0, G__26154__a = new Array(arguments.length -  3);
while (G__26154__i < G__26154__a.length) {G__26154__a[G__26154__i] = arguments[G__26154__i + 3]; ++G__26154__i;}
G__26153 = new cljs.core.IndexedSeq(G__26154__a,0);
}
return G__26149__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26153);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26149.cljs$lang$maxFixedArity = 3;
G__26149.cljs$lang$applyTo = G__26149__4.cljs$lang$applyTo;
G__26149.cljs$core$IFn$_invoke$arity$0 = G__26149__0;
G__26149.cljs$core$IFn$_invoke$arity$1 = G__26149__1;
G__26149.cljs$core$IFn$_invoke$arity$2 = G__26149__2;
G__26149.cljs$core$IFn$_invoke$arity$3 = G__26149__3;
G__26149.cljs$core$IFn$_invoke$arity$variadic = G__26149__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26149;
})()
});
var comp__4 = (function() { 
var G__26155__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__26156__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__26157 = cljs.core.first(fs__$2).call(null,ret);
var G__26158 = cljs.core.next(fs__$2);
ret = G__26157;
fs__$2 = G__26158;
continue;
} else {
return ret;
}
break;
}
};
var G__26156 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26159__i = 0, G__26159__a = new Array(arguments.length -  0);
while (G__26159__i < G__26159__a.length) {G__26159__a[G__26159__i] = arguments[G__26159__i + 0]; ++G__26159__i;}
  args = new cljs.core.IndexedSeq(G__26159__a,0);
} 
return G__26156__delegate.call(this,args);};
G__26156.cljs$lang$maxFixedArity = 0;
G__26156.cljs$lang$applyTo = (function (arglist__26160){
var args = cljs.core.seq(arglist__26160);
return G__26156__delegate(args);
});
G__26156.cljs$core$IFn$_invoke$arity$variadic = G__26156__delegate;
return G__26156;
})()
;
;})(fs__$1))
};
var G__26155 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__26161__i = 0, G__26161__a = new Array(arguments.length -  3);
while (G__26161__i < G__26161__a.length) {G__26161__a[G__26161__i] = arguments[G__26161__i + 3]; ++G__26161__i;}
  fs = new cljs.core.IndexedSeq(G__26161__a,0);
} 
return G__26155__delegate.call(this,f1,f2,f3,fs);};
G__26155.cljs$lang$maxFixedArity = 3;
G__26155.cljs$lang$applyTo = (function (arglist__26162){
var f1 = cljs.core.first(arglist__26162);
arglist__26162 = cljs.core.next(arglist__26162);
var f2 = cljs.core.first(arglist__26162);
arglist__26162 = cljs.core.next(arglist__26162);
var f3 = cljs.core.first(arglist__26162);
var fs = cljs.core.rest(arglist__26162);
return G__26155__delegate(f1,f2,f3,fs);
});
G__26155.cljs$core$IFn$_invoke$arity$variadic = G__26155__delegate;
return G__26155;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__26163 = null;
if (arguments.length > 3) {
var G__26164__i = 0, G__26164__a = new Array(arguments.length -  3);
while (G__26164__i < G__26164__a.length) {G__26164__a[G__26164__i] = arguments[G__26164__i + 3]; ++G__26164__i;}
G__26163 = new cljs.core.IndexedSeq(G__26164__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__26163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__26249 = null;
var G__26249__0 = (function (){
var G__26207 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26207) : f.call(null,G__26207));
});
var G__26249__1 = (function (x){
var G__26208 = arg1;
var G__26209 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26208,G__26209) : f.call(null,G__26208,G__26209));
});
var G__26249__2 = (function (x,y){
var G__26210 = arg1;
var G__26211 = x;
var G__26212 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26210,G__26211,G__26212) : f.call(null,G__26210,G__26211,G__26212));
});
var G__26249__3 = (function (x,y,z){
var G__26213 = arg1;
var G__26214 = x;
var G__26215 = y;
var G__26216 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26213,G__26214,G__26215,G__26216) : f.call(null,G__26213,G__26214,G__26215,G__26216));
});
var G__26249__4 = (function() { 
var G__26250__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__26250 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26251__i = 0, G__26251__a = new Array(arguments.length -  3);
while (G__26251__i < G__26251__a.length) {G__26251__a[G__26251__i] = arguments[G__26251__i + 3]; ++G__26251__i;}
  args = new cljs.core.IndexedSeq(G__26251__a,0);
} 
return G__26250__delegate.call(this,x,y,z,args);};
G__26250.cljs$lang$maxFixedArity = 3;
G__26250.cljs$lang$applyTo = (function (arglist__26252){
var x = cljs.core.first(arglist__26252);
arglist__26252 = cljs.core.next(arglist__26252);
var y = cljs.core.first(arglist__26252);
arglist__26252 = cljs.core.next(arglist__26252);
var z = cljs.core.first(arglist__26252);
var args = cljs.core.rest(arglist__26252);
return G__26250__delegate(x,y,z,args);
});
G__26250.cljs$core$IFn$_invoke$arity$variadic = G__26250__delegate;
return G__26250;
})()
;
G__26249 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26249__0.call(this);
case 1:
return G__26249__1.call(this,x);
case 2:
return G__26249__2.call(this,x,y);
case 3:
return G__26249__3.call(this,x,y,z);
default:
var G__26253 = null;
if (arguments.length > 3) {
var G__26254__i = 0, G__26254__a = new Array(arguments.length -  3);
while (G__26254__i < G__26254__a.length) {G__26254__a[G__26254__i] = arguments[G__26254__i + 3]; ++G__26254__i;}
G__26253 = new cljs.core.IndexedSeq(G__26254__a,0);
}
return G__26249__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26249.cljs$lang$maxFixedArity = 3;
G__26249.cljs$lang$applyTo = G__26249__4.cljs$lang$applyTo;
G__26249.cljs$core$IFn$_invoke$arity$0 = G__26249__0;
G__26249.cljs$core$IFn$_invoke$arity$1 = G__26249__1;
G__26249.cljs$core$IFn$_invoke$arity$2 = G__26249__2;
G__26249.cljs$core$IFn$_invoke$arity$3 = G__26249__3;
G__26249.cljs$core$IFn$_invoke$arity$variadic = G__26249__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26249;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__26255 = null;
var G__26255__0 = (function (){
var G__26217 = arg1;
var G__26218 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26217,G__26218) : f.call(null,G__26217,G__26218));
});
var G__26255__1 = (function (x){
var G__26219 = arg1;
var G__26220 = arg2;
var G__26221 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26219,G__26220,G__26221) : f.call(null,G__26219,G__26220,G__26221));
});
var G__26255__2 = (function (x,y){
var G__26222 = arg1;
var G__26223 = arg2;
var G__26224 = x;
var G__26225 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26222,G__26223,G__26224,G__26225) : f.call(null,G__26222,G__26223,G__26224,G__26225));
});
var G__26255__3 = (function (x,y,z){
var G__26226 = arg1;
var G__26227 = arg2;
var G__26228 = x;
var G__26229 = y;
var G__26230 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26226,G__26227,G__26228,G__26229,G__26230) : f.call(null,G__26226,G__26227,G__26228,G__26229,G__26230));
});
var G__26255__4 = (function() { 
var G__26256__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__26256 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26257__i = 0, G__26257__a = new Array(arguments.length -  3);
while (G__26257__i < G__26257__a.length) {G__26257__a[G__26257__i] = arguments[G__26257__i + 3]; ++G__26257__i;}
  args = new cljs.core.IndexedSeq(G__26257__a,0);
} 
return G__26256__delegate.call(this,x,y,z,args);};
G__26256.cljs$lang$maxFixedArity = 3;
G__26256.cljs$lang$applyTo = (function (arglist__26258){
var x = cljs.core.first(arglist__26258);
arglist__26258 = cljs.core.next(arglist__26258);
var y = cljs.core.first(arglist__26258);
arglist__26258 = cljs.core.next(arglist__26258);
var z = cljs.core.first(arglist__26258);
var args = cljs.core.rest(arglist__26258);
return G__26256__delegate(x,y,z,args);
});
G__26256.cljs$core$IFn$_invoke$arity$variadic = G__26256__delegate;
return G__26256;
})()
;
G__26255 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26255__0.call(this);
case 1:
return G__26255__1.call(this,x);
case 2:
return G__26255__2.call(this,x,y);
case 3:
return G__26255__3.call(this,x,y,z);
default:
var G__26259 = null;
if (arguments.length > 3) {
var G__26260__i = 0, G__26260__a = new Array(arguments.length -  3);
while (G__26260__i < G__26260__a.length) {G__26260__a[G__26260__i] = arguments[G__26260__i + 3]; ++G__26260__i;}
G__26259 = new cljs.core.IndexedSeq(G__26260__a,0);
}
return G__26255__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26255.cljs$lang$maxFixedArity = 3;
G__26255.cljs$lang$applyTo = G__26255__4.cljs$lang$applyTo;
G__26255.cljs$core$IFn$_invoke$arity$0 = G__26255__0;
G__26255.cljs$core$IFn$_invoke$arity$1 = G__26255__1;
G__26255.cljs$core$IFn$_invoke$arity$2 = G__26255__2;
G__26255.cljs$core$IFn$_invoke$arity$3 = G__26255__3;
G__26255.cljs$core$IFn$_invoke$arity$variadic = G__26255__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26255;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__26261 = null;
var G__26261__0 = (function (){
var G__26231 = arg1;
var G__26232 = arg2;
var G__26233 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26231,G__26232,G__26233) : f.call(null,G__26231,G__26232,G__26233));
});
var G__26261__1 = (function (x){
var G__26234 = arg1;
var G__26235 = arg2;
var G__26236 = arg3;
var G__26237 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26234,G__26235,G__26236,G__26237) : f.call(null,G__26234,G__26235,G__26236,G__26237));
});
var G__26261__2 = (function (x,y){
var G__26238 = arg1;
var G__26239 = arg2;
var G__26240 = arg3;
var G__26241 = x;
var G__26242 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26238,G__26239,G__26240,G__26241,G__26242) : f.call(null,G__26238,G__26239,G__26240,G__26241,G__26242));
});
var G__26261__3 = (function (x,y,z){
var G__26243 = arg1;
var G__26244 = arg2;
var G__26245 = arg3;
var G__26246 = x;
var G__26247 = y;
var G__26248 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26243,G__26244,G__26245,G__26246,G__26247,G__26248) : f.call(null,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248));
});
var G__26261__4 = (function() { 
var G__26262__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__26262 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26263__i = 0, G__26263__a = new Array(arguments.length -  3);
while (G__26263__i < G__26263__a.length) {G__26263__a[G__26263__i] = arguments[G__26263__i + 3]; ++G__26263__i;}
  args = new cljs.core.IndexedSeq(G__26263__a,0);
} 
return G__26262__delegate.call(this,x,y,z,args);};
G__26262.cljs$lang$maxFixedArity = 3;
G__26262.cljs$lang$applyTo = (function (arglist__26264){
var x = cljs.core.first(arglist__26264);
arglist__26264 = cljs.core.next(arglist__26264);
var y = cljs.core.first(arglist__26264);
arglist__26264 = cljs.core.next(arglist__26264);
var z = cljs.core.first(arglist__26264);
var args = cljs.core.rest(arglist__26264);
return G__26262__delegate(x,y,z,args);
});
G__26262.cljs$core$IFn$_invoke$arity$variadic = G__26262__delegate;
return G__26262;
})()
;
G__26261 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26261__0.call(this);
case 1:
return G__26261__1.call(this,x);
case 2:
return G__26261__2.call(this,x,y);
case 3:
return G__26261__3.call(this,x,y,z);
default:
var G__26265 = null;
if (arguments.length > 3) {
var G__26266__i = 0, G__26266__a = new Array(arguments.length -  3);
while (G__26266__i < G__26266__a.length) {G__26266__a[G__26266__i] = arguments[G__26266__i + 3]; ++G__26266__i;}
G__26265 = new cljs.core.IndexedSeq(G__26266__a,0);
}
return G__26261__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26261.cljs$lang$maxFixedArity = 3;
G__26261.cljs$lang$applyTo = G__26261__4.cljs$lang$applyTo;
G__26261.cljs$core$IFn$_invoke$arity$0 = G__26261__0;
G__26261.cljs$core$IFn$_invoke$arity$1 = G__26261__1;
G__26261.cljs$core$IFn$_invoke$arity$2 = G__26261__2;
G__26261.cljs$core$IFn$_invoke$arity$3 = G__26261__3;
G__26261.cljs$core$IFn$_invoke$arity$variadic = G__26261__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26261;
})()
});
var partial__5 = (function() { 
var G__26267__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__26268__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__26268 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26269__i = 0, G__26269__a = new Array(arguments.length -  0);
while (G__26269__i < G__26269__a.length) {G__26269__a[G__26269__i] = arguments[G__26269__i + 0]; ++G__26269__i;}
  args = new cljs.core.IndexedSeq(G__26269__a,0);
} 
return G__26268__delegate.call(this,args);};
G__26268.cljs$lang$maxFixedArity = 0;
G__26268.cljs$lang$applyTo = (function (arglist__26270){
var args = cljs.core.seq(arglist__26270);
return G__26268__delegate(args);
});
G__26268.cljs$core$IFn$_invoke$arity$variadic = G__26268__delegate;
return G__26268;
})()
;
};
var G__26267 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__26271__i = 0, G__26271__a = new Array(arguments.length -  4);
while (G__26271__i < G__26271__a.length) {G__26271__a[G__26271__i] = arguments[G__26271__i + 4]; ++G__26271__i;}
  more = new cljs.core.IndexedSeq(G__26271__a,0);
} 
return G__26267__delegate.call(this,f,arg1,arg2,arg3,more);};
G__26267.cljs$lang$maxFixedArity = 4;
G__26267.cljs$lang$applyTo = (function (arglist__26272){
var f = cljs.core.first(arglist__26272);
arglist__26272 = cljs.core.next(arglist__26272);
var arg1 = cljs.core.first(arglist__26272);
arglist__26272 = cljs.core.next(arglist__26272);
var arg2 = cljs.core.first(arglist__26272);
arglist__26272 = cljs.core.next(arglist__26272);
var arg3 = cljs.core.first(arglist__26272);
var more = cljs.core.rest(arglist__26272);
return G__26267__delegate(f,arg1,arg2,arg3,more);
});
G__26267.cljs$core$IFn$_invoke$arity$variadic = G__26267__delegate;
return G__26267;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__26273 = null;
if (arguments.length > 4) {
var G__26274__i = 0, G__26274__a = new Array(arguments.length -  4);
while (G__26274__i < G__26274__a.length) {G__26274__a[G__26274__i] = arguments[G__26274__i + 4]; ++G__26274__i;}
G__26273 = new cljs.core.IndexedSeq(G__26274__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__26273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__26307 = null;
var G__26307__1 = (function (a){
var G__26291 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26291) : f.call(null,G__26291));
});
var G__26307__2 = (function (a,b){
var G__26292 = (((a == null))?x:a);
var G__26293 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26292,G__26293) : f.call(null,G__26292,G__26293));
});
var G__26307__3 = (function (a,b,c){
var G__26294 = (((a == null))?x:a);
var G__26295 = b;
var G__26296 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26294,G__26295,G__26296) : f.call(null,G__26294,G__26295,G__26296));
});
var G__26307__4 = (function() { 
var G__26308__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__26308 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26309__i = 0, G__26309__a = new Array(arguments.length -  3);
while (G__26309__i < G__26309__a.length) {G__26309__a[G__26309__i] = arguments[G__26309__i + 3]; ++G__26309__i;}
  ds = new cljs.core.IndexedSeq(G__26309__a,0);
} 
return G__26308__delegate.call(this,a,b,c,ds);};
G__26308.cljs$lang$maxFixedArity = 3;
G__26308.cljs$lang$applyTo = (function (arglist__26310){
var a = cljs.core.first(arglist__26310);
arglist__26310 = cljs.core.next(arglist__26310);
var b = cljs.core.first(arglist__26310);
arglist__26310 = cljs.core.next(arglist__26310);
var c = cljs.core.first(arglist__26310);
var ds = cljs.core.rest(arglist__26310);
return G__26308__delegate(a,b,c,ds);
});
G__26308.cljs$core$IFn$_invoke$arity$variadic = G__26308__delegate;
return G__26308;
})()
;
G__26307 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__26307__1.call(this,a);
case 2:
return G__26307__2.call(this,a,b);
case 3:
return G__26307__3.call(this,a,b,c);
default:
var G__26311 = null;
if (arguments.length > 3) {
var G__26312__i = 0, G__26312__a = new Array(arguments.length -  3);
while (G__26312__i < G__26312__a.length) {G__26312__a[G__26312__i] = arguments[G__26312__i + 3]; ++G__26312__i;}
G__26311 = new cljs.core.IndexedSeq(G__26312__a,0);
}
return G__26307__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26307.cljs$lang$maxFixedArity = 3;
G__26307.cljs$lang$applyTo = G__26307__4.cljs$lang$applyTo;
G__26307.cljs$core$IFn$_invoke$arity$1 = G__26307__1;
G__26307.cljs$core$IFn$_invoke$arity$2 = G__26307__2;
G__26307.cljs$core$IFn$_invoke$arity$3 = G__26307__3;
G__26307.cljs$core$IFn$_invoke$arity$variadic = G__26307__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26307;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__26313 = null;
var G__26313__2 = (function (a,b){
var G__26297 = (((a == null))?x:a);
var G__26298 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26297,G__26298) : f.call(null,G__26297,G__26298));
});
var G__26313__3 = (function (a,b,c){
var G__26299 = (((a == null))?x:a);
var G__26300 = (((b == null))?y:b);
var G__26301 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26299,G__26300,G__26301) : f.call(null,G__26299,G__26300,G__26301));
});
var G__26313__4 = (function() { 
var G__26314__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__26314 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26315__i = 0, G__26315__a = new Array(arguments.length -  3);
while (G__26315__i < G__26315__a.length) {G__26315__a[G__26315__i] = arguments[G__26315__i + 3]; ++G__26315__i;}
  ds = new cljs.core.IndexedSeq(G__26315__a,0);
} 
return G__26314__delegate.call(this,a,b,c,ds);};
G__26314.cljs$lang$maxFixedArity = 3;
G__26314.cljs$lang$applyTo = (function (arglist__26316){
var a = cljs.core.first(arglist__26316);
arglist__26316 = cljs.core.next(arglist__26316);
var b = cljs.core.first(arglist__26316);
arglist__26316 = cljs.core.next(arglist__26316);
var c = cljs.core.first(arglist__26316);
var ds = cljs.core.rest(arglist__26316);
return G__26314__delegate(a,b,c,ds);
});
G__26314.cljs$core$IFn$_invoke$arity$variadic = G__26314__delegate;
return G__26314;
})()
;
G__26313 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26313__2.call(this,a,b);
case 3:
return G__26313__3.call(this,a,b,c);
default:
var G__26317 = null;
if (arguments.length > 3) {
var G__26318__i = 0, G__26318__a = new Array(arguments.length -  3);
while (G__26318__i < G__26318__a.length) {G__26318__a[G__26318__i] = arguments[G__26318__i + 3]; ++G__26318__i;}
G__26317 = new cljs.core.IndexedSeq(G__26318__a,0);
}
return G__26313__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26313.cljs$lang$maxFixedArity = 3;
G__26313.cljs$lang$applyTo = G__26313__4.cljs$lang$applyTo;
G__26313.cljs$core$IFn$_invoke$arity$2 = G__26313__2;
G__26313.cljs$core$IFn$_invoke$arity$3 = G__26313__3;
G__26313.cljs$core$IFn$_invoke$arity$variadic = G__26313__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26313;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__26319 = null;
var G__26319__2 = (function (a,b){
var G__26302 = (((a == null))?x:a);
var G__26303 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26302,G__26303) : f.call(null,G__26302,G__26303));
});
var G__26319__3 = (function (a,b,c){
var G__26304 = (((a == null))?x:a);
var G__26305 = (((b == null))?y:b);
var G__26306 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26304,G__26305,G__26306) : f.call(null,G__26304,G__26305,G__26306));
});
var G__26319__4 = (function() { 
var G__26320__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__26320 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26321__i = 0, G__26321__a = new Array(arguments.length -  3);
while (G__26321__i < G__26321__a.length) {G__26321__a[G__26321__i] = arguments[G__26321__i + 3]; ++G__26321__i;}
  ds = new cljs.core.IndexedSeq(G__26321__a,0);
} 
return G__26320__delegate.call(this,a,b,c,ds);};
G__26320.cljs$lang$maxFixedArity = 3;
G__26320.cljs$lang$applyTo = (function (arglist__26322){
var a = cljs.core.first(arglist__26322);
arglist__26322 = cljs.core.next(arglist__26322);
var b = cljs.core.first(arglist__26322);
arglist__26322 = cljs.core.next(arglist__26322);
var c = cljs.core.first(arglist__26322);
var ds = cljs.core.rest(arglist__26322);
return G__26320__delegate(a,b,c,ds);
});
G__26320.cljs$core$IFn$_invoke$arity$variadic = G__26320__delegate;
return G__26320;
})()
;
G__26319 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26319__2.call(this,a,b);
case 3:
return G__26319__3.call(this,a,b,c);
default:
var G__26323 = null;
if (arguments.length > 3) {
var G__26324__i = 0, G__26324__a = new Array(arguments.length -  3);
while (G__26324__i < G__26324__a.length) {G__26324__a[G__26324__i] = arguments[G__26324__i + 3]; ++G__26324__i;}
G__26323 = new cljs.core.IndexedSeq(G__26324__a,0);
}
return G__26319__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26323);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26319.cljs$lang$maxFixedArity = 3;
G__26319.cljs$lang$applyTo = G__26319__4.cljs$lang$applyTo;
G__26319.cljs$core$IFn$_invoke$arity$2 = G__26319__2;
G__26319.cljs$core$IFn$_invoke$arity$3 = G__26319__3;
G__26319.cljs$core$IFn$_invoke$arity$variadic = G__26319__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26319;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__26355 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__26355) : cljs.core.volatile_BANG_.call(null,G__26355));
})();
return ((function (i){
return (function() {
var G__26385 = null;
var G__26385__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26385__1 = (function (result){
var G__26356 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26356) : rf.call(null,G__26356));
});
var G__26385__2 = (function (result,input){
var G__26357 = result;
var G__26358 = (function (){var G__26359 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__26360 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26359,G__26360) : f.call(null,G__26359,G__26360));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26357,G__26358) : rf.call(null,G__26357,G__26358));
});
G__26385 = function(result,input){
switch(arguments.length){
case 0:
return G__26385__0.call(this);
case 1:
return G__26385__1.call(this,result);
case 2:
return G__26385__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26385.cljs$core$IFn$_invoke$arity$0 = G__26385__0;
G__26385.cljs$core$IFn$_invoke$arity$1 = G__26385__1;
G__26385.cljs$core$IFn$_invoke$arity$2 = G__26385__2;
return G__26385;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26386 = size;
var i_26387 = (0);
while(true){
if((i_26387 < n__17032__auto___26386)){
cljs.core.chunk_append(b,(function (){var G__26381 = (idx + i_26387);
var G__26382 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26387);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26381,G__26382) : f.call(null,G__26381,G__26382));
})());

var G__26388 = (i_26387 + (1));
i_26387 = G__26388;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26383 = idx;
var G__26384 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26383,G__26384) : f.call(null,G__26383,G__26384));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__26407 = null;
var G__26407__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26407__1 = (function (result){
var G__26401 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26401) : rf.call(null,G__26401));
});
var G__26407__2 = (function (result,input){
var v = (function (){var G__26402 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26402) : f.call(null,G__26402));
})();
if((v == null)){
return result;
} else {
var G__26403 = result;
var G__26404 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26403,G__26404) : rf.call(null,G__26403,G__26404));
}
});
G__26407 = function(result,input){
switch(arguments.length){
case 0:
return G__26407__0.call(this);
case 1:
return G__26407__1.call(this,result);
case 2:
return G__26407__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26407.cljs$core$IFn$_invoke$arity$0 = G__26407__0;
G__26407.cljs$core$IFn$_invoke$arity$1 = G__26407__1;
G__26407.cljs$core$IFn$_invoke$arity$2 = G__26407__2;
return G__26407;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26408 = size;
var i_26409 = (0);
while(true){
if((i_26409 < n__17032__auto___26408)){
var x_26410 = (function (){var G__26405 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26409);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26405) : f.call(null,G__26405));
})();
if((x_26410 == null)){
} else {
cljs.core.chunk_append(b,x_26410);
}

var G__26411 = (i_26409 + (1));
i_26409 = G__26411;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26406 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26406) : f.call(null,G__26406));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26412 = this$__$1;
return goog.getUid(G__26412);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__26413 = cljs.core.seq(self__.watches);
var chunk__26414 = null;
var count__26415 = (0);
var i__26416 = (0);
while(true){
if((i__26416 < count__26415)){
var vec__26417 = chunk__26414.cljs$core$IIndexed$_nth$arity$2(null,i__26416);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26417,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26417,(1),null);
var G__26418_26427 = key;
var G__26419_26428 = this$__$1;
var G__26420_26429 = oldval;
var G__26421_26430 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26418_26427,G__26419_26428,G__26420_26429,G__26421_26430) : f.call(null,G__26418_26427,G__26419_26428,G__26420_26429,G__26421_26430));

var G__26431 = seq__26413;
var G__26432 = chunk__26414;
var G__26433 = count__26415;
var G__26434 = (i__26416 + (1));
seq__26413 = G__26431;
chunk__26414 = G__26432;
count__26415 = G__26433;
i__26416 = G__26434;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26413);
if(temp__4126__auto__){
var seq__26413__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26413__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__26413__$1);
var G__26435 = cljs.core.chunk_rest(seq__26413__$1);
var G__26436 = c__16932__auto__;
var G__26437 = cljs.core.count(c__16932__auto__);
var G__26438 = (0);
seq__26413 = G__26435;
chunk__26414 = G__26436;
count__26415 = G__26437;
i__26416 = G__26438;
continue;
} else {
var vec__26422 = cljs.core.first(seq__26413__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26422,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26422,(1),null);
var G__26423_26439 = key;
var G__26424_26440 = this$__$1;
var G__26425_26441 = oldval;
var G__26426_26442 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26423_26439,G__26424_26440,G__26425_26441,G__26426_26442) : f.call(null,G__26423_26439,G__26424_26440,G__26425_26441,G__26426_26442));

var G__26443 = cljs.core.next(seq__26413__$1);
var G__26444 = null;
var G__26445 = (0);
var G__26446 = (0);
seq__26413 = G__26443;
chunk__26414 = G__26444;
count__26415 = G__26445;
i__26416 = G__26446;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__26450__delegate = function (x,p__26447){
var map__26449 = p__26447;
var map__26449__$1 = ((cljs.core.seq_QMARK_(map__26449))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26449):map__26449);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26449__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26449__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__26450 = function (x,var_args){
var p__26447 = null;
if (arguments.length > 1) {
var G__26451__i = 0, G__26451__a = new Array(arguments.length -  1);
while (G__26451__i < G__26451__a.length) {G__26451__a[G__26451__i] = arguments[G__26451__i + 1]; ++G__26451__i;}
  p__26447 = new cljs.core.IndexedSeq(G__26451__a,0);
} 
return G__26450__delegate.call(this,x,p__26447);};
G__26450.cljs$lang$maxFixedArity = 1;
G__26450.cljs$lang$applyTo = (function (arglist__26452){
var x = cljs.core.first(arglist__26452);
var p__26447 = cljs.core.rest(arglist__26452);
return G__26450__delegate(x,p__26447);
});
G__26450.cljs$core$IFn$_invoke$arity$variadic = G__26450__delegate;
return G__26450;
})()
;
atom = function(x,var_args){
var p__26447 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__26453 = null;
if (arguments.length > 1) {
var G__26454__i = 0, G__26454__a = new Array(arguments.length -  1);
while (G__26454__i < G__26454__a.length) {G__26454__a[G__26454__i] = arguments[G__26454__i + 1]; ++G__26454__i;}
G__26453 = new cljs.core.IndexedSeq(G__26454__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__26457 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__26457) : validate.call(null,G__26457));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__26458 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26458) : cljs.core.pr_str.call(null,G__26458));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26465 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26465) : f.call(null,G__26465));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26466 = a.state;
var G__26467 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26466,G__26467) : f.call(null,G__26466,G__26467));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26468 = a.state;
var G__26469 = x;
var G__26470 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26468,G__26469,G__26470) : f.call(null,G__26468,G__26469,G__26470));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__26471__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__26471 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__26472__i = 0, G__26472__a = new Array(arguments.length -  4);
while (G__26472__i < G__26472__a.length) {G__26472__a[G__26472__i] = arguments[G__26472__i + 4]; ++G__26472__i;}
  more = new cljs.core.IndexedSeq(G__26472__a,0);
} 
return G__26471__delegate.call(this,a,f,x,y,more);};
G__26471.cljs$lang$maxFixedArity = 4;
G__26471.cljs$lang$applyTo = (function (arglist__26473){
var a = cljs.core.first(arglist__26473);
arglist__26473 = cljs.core.next(arglist__26473);
var f = cljs.core.first(arglist__26473);
arglist__26473 = cljs.core.next(arglist__26473);
var x = cljs.core.first(arglist__26473);
arglist__26473 = cljs.core.next(arglist__26473);
var y = cljs.core.first(arglist__26473);
var more = cljs.core.rest(arglist__26473);
return G__26471__delegate(a,f,x,y,more);
});
G__26471.cljs$core$IFn$_invoke$arity$variadic = G__26471__delegate;
return G__26471;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__26474 = null;
if (arguments.length > 4) {
var G__26475__i = 0, G__26475__a = new Array(arguments.length -  4);
while (G__26475__i < G__26475__a.length) {G__26475__a[G__26475__i] = arguments[G__26475__i + 4]; ++G__26475__i;}
G__26474 = new cljs.core.IndexedSeq(G__26475__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__26474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__26542 = null;
var G__26542__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26542__1 = (function (result){
var G__26509 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26509) : rf.call(null,G__26509));
});
var G__26542__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__26510 = i;
var G__26511 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26510,G__26511) : f.call(null,G__26510,G__26511));
})();
if((v == null)){
return result;
} else {
var G__26512 = result;
var G__26513 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26512,G__26513) : rf.call(null,G__26512,G__26513));
}
});
G__26542 = function(result,input){
switch(arguments.length){
case 0:
return G__26542__0.call(this);
case 1:
return G__26542__1.call(this,result);
case 2:
return G__26542__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26542.cljs$core$IFn$_invoke$arity$0 = G__26542__0;
G__26542.cljs$core$IFn$_invoke$arity$1 = G__26542__1;
G__26542.cljs$core$IFn$_invoke$arity$2 = G__26542__2;
return G__26542;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___26543 = size;
var i_26544 = (0);
while(true){
if((i_26544 < n__17032__auto___26543)){
var x_26545 = (function (){var G__26538 = (idx + i_26544);
var G__26539 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26544);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26538,G__26539) : f.call(null,G__26538,G__26539));
})();
if((x_26545 == null)){
} else {
cljs.core.chunk_append(b,x_26545);
}

var G__26546 = (i_26544 + (1));
i_26544 = G__26546;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26540 = idx;
var G__26541 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26540,G__26541) : f.call(null,G__26540,G__26541));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__26760 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26760) : p.call(null,G__26760));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26762 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26762) : p.call(null,G__26762));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26763 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26763) : p.call(null,G__26763));
} else {
return and__16133__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26765 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26765) : p.call(null,G__26765));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26767 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26767) : p.call(null,G__26767));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26768 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26768) : p.call(null,G__26768));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__26937__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__26937 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26938__i = 0, G__26938__a = new Array(arguments.length -  3);
while (G__26938__i < G__26938__a.length) {G__26938__a[G__26938__i] = arguments[G__26938__i + 3]; ++G__26938__i;}
  args = new cljs.core.IndexedSeq(G__26938__a,0);
} 
return G__26937__delegate.call(this,x,y,z,args);};
G__26937.cljs$lang$maxFixedArity = 3;
G__26937.cljs$lang$applyTo = (function (arglist__26939){
var x = cljs.core.first(arglist__26939);
arglist__26939 = cljs.core.next(arglist__26939);
var y = cljs.core.first(arglist__26939);
arglist__26939 = cljs.core.next(arglist__26939);
var z = cljs.core.first(arglist__26939);
var args = cljs.core.rest(arglist__26939);
return G__26937__delegate(x,y,z,args);
});
G__26937.cljs$core$IFn$_invoke$arity$variadic = G__26937__delegate;
return G__26937;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__26940 = null;
if (arguments.length > 3) {
var G__26941__i = 0, G__26941__a = new Array(arguments.length -  3);
while (G__26941__i < G__26941__a.length) {G__26941__a[G__26941__i] = arguments[G__26941__i + 3]; ++G__26941__i;}
G__26940 = new cljs.core.IndexedSeq(G__26941__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26800 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26800) : p1.call(null,G__26800));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26801 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26801) : p2.call(null,G__26801));
} else {
return and__16133__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26803 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26803) : p1.call(null,G__26803));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26805 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26805) : p1.call(null,G__26805));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26807 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26807) : p2.call(null,G__26807));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var G__26808 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26808) : p2.call(null,G__26808));
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26810 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26810) : p1.call(null,G__26810));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26812 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26812) : p1.call(null,G__26812));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26814 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26814) : p1.call(null,G__26814));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__26816 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26816) : p2.call(null,G__26816));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__26818 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26818) : p2.call(null,G__26818));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__26819 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26819) : p2.call(null,G__26819));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__26942__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26547_SHARP_){
var and__16133__auto__ = (function (){var G__26824 = p1__26547_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26824) : p1.call(null,G__26824));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26825 = p1__26547_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26825) : p2.call(null,G__26825));
} else {
return and__16133__auto__;
}
}),args)));
};
var G__26942 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26943__i = 0, G__26943__a = new Array(arguments.length -  3);
while (G__26943__i < G__26943__a.length) {G__26943__a[G__26943__i] = arguments[G__26943__i + 3]; ++G__26943__i;}
  args = new cljs.core.IndexedSeq(G__26943__a,0);
} 
return G__26942__delegate.call(this,x,y,z,args);};
G__26942.cljs$lang$maxFixedArity = 3;
G__26942.cljs$lang$applyTo = (function (arglist__26944){
var x = cljs.core.first(arglist__26944);
arglist__26944 = cljs.core.next(arglist__26944);
var y = cljs.core.first(arglist__26944);
arglist__26944 = cljs.core.next(arglist__26944);
var z = cljs.core.first(arglist__26944);
var args = cljs.core.rest(arglist__26944);
return G__26942__delegate(x,y,z,args);
});
G__26942.cljs$core$IFn$_invoke$arity$variadic = G__26942__delegate;
return G__26942;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__26945 = null;
if (arguments.length > 3) {
var G__26946__i = 0, G__26946__a = new Array(arguments.length -  3);
while (G__26946__i < G__26946__a.length) {G__26946__a[G__26946__i] = arguments[G__26946__i + 3]; ++G__26946__i;}
G__26945 = new cljs.core.IndexedSeq(G__26946__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26871 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26871) : p1.call(null,G__26871));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26873 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26873) : p2.call(null,G__26873));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26874 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26874) : p3.call(null,G__26874));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26876 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26876) : p1.call(null,G__26876));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26878 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26878) : p2.call(null,G__26878));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26880 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26880) : p3.call(null,G__26880));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__26882 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26882) : p1.call(null,G__26882));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__26884 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26884) : p2.call(null,G__26884));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__26885 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26885) : p3.call(null,G__26885));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__26887 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26887) : p1.call(null,G__26887));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26889 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26889) : p2.call(null,G__26889));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__26891 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26891) : p3.call(null,G__26891));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__26893 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26893) : p1.call(null,G__26893));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__26895 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26895) : p2.call(null,G__26895));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var and__16133__auto____$5 = (function (){var G__26897 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26897) : p3.call(null,G__26897));
})();
if(cljs.core.truth_(and__16133__auto____$5)){
var and__16133__auto____$6 = (function (){var G__26899 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26899) : p1.call(null,G__26899));
})();
if(cljs.core.truth_(and__16133__auto____$6)){
var and__16133__auto____$7 = (function (){var G__26901 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26901) : p2.call(null,G__26901));
})();
if(cljs.core.truth_(and__16133__auto____$7)){
var G__26902 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26902) : p3.call(null,G__26902));
} else {
return and__16133__auto____$7;
}
} else {
return and__16133__auto____$6;
}
} else {
return and__16133__auto____$5;
}
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__26947__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26548_SHARP_){
var and__16133__auto__ = (function (){var G__26909 = p1__26548_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26909) : p1.call(null,G__26909));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26911 = p1__26548_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26911) : p2.call(null,G__26911));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26912 = p1__26548_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26912) : p3.call(null,G__26912));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}),args)));
};
var G__26947 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26948__i = 0, G__26948__a = new Array(arguments.length -  3);
while (G__26948__i < G__26948__a.length) {G__26948__a[G__26948__i] = arguments[G__26948__i + 3]; ++G__26948__i;}
  args = new cljs.core.IndexedSeq(G__26948__a,0);
} 
return G__26947__delegate.call(this,x,y,z,args);};
G__26947.cljs$lang$maxFixedArity = 3;
G__26947.cljs$lang$applyTo = (function (arglist__26949){
var x = cljs.core.first(arglist__26949);
arglist__26949 = cljs.core.next(arglist__26949);
var y = cljs.core.first(arglist__26949);
arglist__26949 = cljs.core.next(arglist__26949);
var z = cljs.core.first(arglist__26949);
var args = cljs.core.rest(arglist__26949);
return G__26947__delegate(x,y,z,args);
});
G__26947.cljs$core$IFn$_invoke$arity$variadic = G__26947__delegate;
return G__26947;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__26950 = null;
if (arguments.length > 3) {
var G__26951__i = 0, G__26951__a = new Array(arguments.length -  3);
while (G__26951__i < G__26951__a.length) {G__26951__a[G__26951__i] = arguments[G__26951__i + 3]; ++G__26951__i;}
G__26950 = new cljs.core.IndexedSeq(G__26951__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__26952__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26549_SHARP_){
var G__26928 = x;
return (p1__26549_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26549_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26928) : p1__26549_SHARP_.call(null,G__26928));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26550_SHARP_){
var and__16133__auto__ = (function (){var G__26930 = x;
return (p1__26550_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26550_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26930) : p1__26550_SHARP_.call(null,G__26930));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__26931 = y;
return (p1__26550_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26550_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26931) : p1__26550_SHARP_.call(null,G__26931));
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26551_SHARP_){
var and__16133__auto__ = (function (){var G__26933 = x;
return (p1__26551_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26551_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26933) : p1__26551_SHARP_.call(null,G__26933));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__26935 = y;
return (p1__26551_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26551_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26935) : p1__26551_SHARP_.call(null,G__26935));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__26936 = z;
return (p1__26551_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26551_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26936) : p1__26551_SHARP_.call(null,G__26936));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__26953__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26552_SHARP_){
return cljs.core.every_QMARK_(p1__26552_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__26953 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26954__i = 0, G__26954__a = new Array(arguments.length -  3);
while (G__26954__i < G__26954__a.length) {G__26954__a[G__26954__i] = arguments[G__26954__i + 3]; ++G__26954__i;}
  args = new cljs.core.IndexedSeq(G__26954__a,0);
} 
return G__26953__delegate.call(this,x,y,z,args);};
G__26953.cljs$lang$maxFixedArity = 3;
G__26953.cljs$lang$applyTo = (function (arglist__26955){
var x = cljs.core.first(arglist__26955);
arglist__26955 = cljs.core.next(arglist__26955);
var y = cljs.core.first(arglist__26955);
arglist__26955 = cljs.core.next(arglist__26955);
var z = cljs.core.first(arglist__26955);
var args = cljs.core.rest(arglist__26955);
return G__26953__delegate(x,y,z,args);
});
G__26953.cljs$core$IFn$_invoke$arity$variadic = G__26953__delegate;
return G__26953;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__26956 = null;
if (arguments.length > 3) {
var G__26957__i = 0, G__26957__a = new Array(arguments.length -  3);
while (G__26957__i < G__26957__a.length) {G__26957__a[G__26957__i] = arguments[G__26957__i + 3]; ++G__26957__i;}
G__26956 = new cljs.core.IndexedSeq(G__26957__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__26952 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26958__i = 0, G__26958__a = new Array(arguments.length -  3);
while (G__26958__i < G__26958__a.length) {G__26958__a[G__26958__i] = arguments[G__26958__i + 3]; ++G__26958__i;}
  ps = new cljs.core.IndexedSeq(G__26958__a,0);
} 
return G__26952__delegate.call(this,p1,p2,p3,ps);};
G__26952.cljs$lang$maxFixedArity = 3;
G__26952.cljs$lang$applyTo = (function (arglist__26959){
var p1 = cljs.core.first(arglist__26959);
arglist__26959 = cljs.core.next(arglist__26959);
var p2 = cljs.core.first(arglist__26959);
arglist__26959 = cljs.core.next(arglist__26959);
var p3 = cljs.core.first(arglist__26959);
var ps = cljs.core.rest(arglist__26959);
return G__26952__delegate(p1,p2,p3,ps);
});
G__26952.cljs$core$IFn$_invoke$arity$variadic = G__26952__delegate;
return G__26952;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__26960 = null;
if (arguments.length > 3) {
var G__26961__i = 0, G__26961__a = new Array(arguments.length -  3);
while (G__26961__i < G__26961__a.length) {G__26961__a[G__26961__i] = arguments[G__26961__i + 3]; ++G__26961__i;}
G__26960 = new cljs.core.IndexedSeq(G__26961__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__27167 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27167) : p.call(null,G__27167));
});
var sp1__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__27169 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27169) : p.call(null,G__27169));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__27170 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27170) : p.call(null,G__27170));
}
});
var sp1__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__27172 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27172) : p.call(null,G__27172));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27174 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27174) : p.call(null,G__27174));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__27175 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27175) : p.call(null,G__27175));
}
}
});
var sp1__4 = (function() { 
var G__27336__delegate = function (x,y,z,args){
var or__16145__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__27336 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27337__i = 0, G__27337__a = new Array(arguments.length -  3);
while (G__27337__i < G__27337__a.length) {G__27337__a[G__27337__i] = arguments[G__27337__i + 3]; ++G__27337__i;}
  args = new cljs.core.IndexedSeq(G__27337__a,0);
} 
return G__27336__delegate.call(this,x,y,z,args);};
G__27336.cljs$lang$maxFixedArity = 3;
G__27336.cljs$lang$applyTo = (function (arglist__27338){
var x = cljs.core.first(arglist__27338);
arglist__27338 = cljs.core.next(arglist__27338);
var y = cljs.core.first(arglist__27338);
arglist__27338 = cljs.core.next(arglist__27338);
var z = cljs.core.first(arglist__27338);
var args = cljs.core.rest(arglist__27338);
return G__27336__delegate(x,y,z,args);
});
G__27336.cljs$core$IFn$_invoke$arity$variadic = G__27336__delegate;
return G__27336;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__27339 = null;
if (arguments.length > 3) {
var G__27340__i = 0, G__27340__a = new Array(arguments.length -  3);
while (G__27340__i < G__27340__a.length) {G__27340__a[G__27340__i] = arguments[G__27340__i + 3]; ++G__27340__i;}
G__27339 = new cljs.core.IndexedSeq(G__27340__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__16145__auto__ = (function (){var G__27207 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27207) : p1.call(null,G__27207));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__27208 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27208) : p2.call(null,G__27208));
}
});
var sp2__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__27210 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27210) : p1.call(null,G__27210));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27212 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27212) : p1.call(null,G__27212));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__27214 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27214) : p2.call(null,G__27214));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__27215 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27215) : p2.call(null,G__27215));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__27217 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27217) : p1.call(null,G__27217));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27219 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27219) : p1.call(null,G__27219));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__27221 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27221) : p1.call(null,G__27221));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__27223 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27223) : p2.call(null,G__27223));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__27225 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27225) : p2.call(null,G__27225));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__27226 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27226) : p2.call(null,G__27226));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__27341__delegate = function (x,y,z,args){
var or__16145__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__26962_SHARP_){
var or__16145__auto____$1 = (function (){var G__27228 = p1__26962_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27228) : p1.call(null,G__27228));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__27229 = p1__26962_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27229) : p2.call(null,G__27229));
}
});})(or__16145__auto__))
,args);
}
};
var G__27341 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27342__i = 0, G__27342__a = new Array(arguments.length -  3);
while (G__27342__i < G__27342__a.length) {G__27342__a[G__27342__i] = arguments[G__27342__i + 3]; ++G__27342__i;}
  args = new cljs.core.IndexedSeq(G__27342__a,0);
} 
return G__27341__delegate.call(this,x,y,z,args);};
G__27341.cljs$lang$maxFixedArity = 3;
G__27341.cljs$lang$applyTo = (function (arglist__27343){
var x = cljs.core.first(arglist__27343);
arglist__27343 = cljs.core.next(arglist__27343);
var y = cljs.core.first(arglist__27343);
arglist__27343 = cljs.core.next(arglist__27343);
var z = cljs.core.first(arglist__27343);
var args = cljs.core.rest(arglist__27343);
return G__27341__delegate(x,y,z,args);
});
G__27341.cljs$core$IFn$_invoke$arity$variadic = G__27341__delegate;
return G__27341;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__27344 = null;
if (arguments.length > 3) {
var G__27345__i = 0, G__27345__a = new Array(arguments.length -  3);
while (G__27345__i < G__27345__a.length) {G__27345__a[G__27345__i] = arguments[G__27345__i + 3]; ++G__27345__i;}
G__27344 = new cljs.core.IndexedSeq(G__27345__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__16145__auto__ = (function (){var G__27275 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27275) : p1.call(null,G__27275));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27277 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27277) : p2.call(null,G__27277));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__27278 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27278) : p3.call(null,G__27278));
}
}
});
var sp3__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__27280 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27280) : p1.call(null,G__27280));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27282 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27282) : p2.call(null,G__27282));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__27284 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27284) : p3.call(null,G__27284));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__27286 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27286) : p1.call(null,G__27286));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__27288 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27288) : p2.call(null,G__27288));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__27289 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27289) : p3.call(null,G__27289));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__27291 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27291) : p1.call(null,G__27291));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27293 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27293) : p2.call(null,G__27293));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__27295 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27295) : p3.call(null,G__27295));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__27297 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27297) : p1.call(null,G__27297));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__27299 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27299) : p2.call(null,G__27299));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var or__16145__auto____$5 = (function (){var G__27301 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27301) : p3.call(null,G__27301));
})();
if(cljs.core.truth_(or__16145__auto____$5)){
return or__16145__auto____$5;
} else {
var or__16145__auto____$6 = (function (){var G__27303 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27303) : p1.call(null,G__27303));
})();
if(cljs.core.truth_(or__16145__auto____$6)){
return or__16145__auto____$6;
} else {
var or__16145__auto____$7 = (function (){var G__27305 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27305) : p2.call(null,G__27305));
})();
if(cljs.core.truth_(or__16145__auto____$7)){
return or__16145__auto____$7;
} else {
var G__27306 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27306) : p3.call(null,G__27306));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__27346__delegate = function (x,y,z,args){
var or__16145__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__26963_SHARP_){
var or__16145__auto____$1 = (function (){var G__27308 = p1__26963_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27308) : p1.call(null,G__27308));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__27310 = p1__26963_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27310) : p2.call(null,G__27310));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__27311 = p1__26963_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27311) : p3.call(null,G__27311));
}
}
});})(or__16145__auto__))
,args);
}
};
var G__27346 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27347__i = 0, G__27347__a = new Array(arguments.length -  3);
while (G__27347__i < G__27347__a.length) {G__27347__a[G__27347__i] = arguments[G__27347__i + 3]; ++G__27347__i;}
  args = new cljs.core.IndexedSeq(G__27347__a,0);
} 
return G__27346__delegate.call(this,x,y,z,args);};
G__27346.cljs$lang$maxFixedArity = 3;
G__27346.cljs$lang$applyTo = (function (arglist__27348){
var x = cljs.core.first(arglist__27348);
arglist__27348 = cljs.core.next(arglist__27348);
var y = cljs.core.first(arglist__27348);
arglist__27348 = cljs.core.next(arglist__27348);
var z = cljs.core.first(arglist__27348);
var args = cljs.core.rest(arglist__27348);
return G__27346__delegate(x,y,z,args);
});
G__27346.cljs$core$IFn$_invoke$arity$variadic = G__27346__delegate;
return G__27346;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__27349 = null;
if (arguments.length > 3) {
var G__27350__i = 0, G__27350__a = new Array(arguments.length -  3);
while (G__27350__i < G__27350__a.length) {G__27350__a[G__27350__i] = arguments[G__27350__i + 3]; ++G__27350__i;}
G__27349 = new cljs.core.IndexedSeq(G__27350__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__27351__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__26964_SHARP_){
var G__27327 = x;
return (p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26964_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27327) : p1__26964_SHARP_.call(null,G__27327));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__26965_SHARP_){
var or__16145__auto__ = (function (){var G__27329 = x;
return (p1__26965_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26965_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27329) : p1__26965_SHARP_.call(null,G__27329));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__27330 = y;
return (p1__26965_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26965_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27330) : p1__26965_SHARP_.call(null,G__27330));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__26966_SHARP_){
var or__16145__auto__ = (function (){var G__27332 = x;
return (p1__26966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26966_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27332) : p1__26966_SHARP_.call(null,G__27332));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__27334 = y;
return (p1__26966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26966_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27334) : p1__26966_SHARP_.call(null,G__27334));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__27335 = z;
return (p1__26966_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26966_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27335) : p1__26966_SHARP_.call(null,G__27335));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__27352__delegate = function (x,y,z,args){
var or__16145__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__,ps__$1){
return (function (p1__26967_SHARP_){
return cljs.core.some(p1__26967_SHARP_,args);
});})(or__16145__auto__,ps__$1))
,ps__$1);
}
};
var G__27352 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27353__i = 0, G__27353__a = new Array(arguments.length -  3);
while (G__27353__i < G__27353__a.length) {G__27353__a[G__27353__i] = arguments[G__27353__i + 3]; ++G__27353__i;}
  args = new cljs.core.IndexedSeq(G__27353__a,0);
} 
return G__27352__delegate.call(this,x,y,z,args);};
G__27352.cljs$lang$maxFixedArity = 3;
G__27352.cljs$lang$applyTo = (function (arglist__27354){
var x = cljs.core.first(arglist__27354);
arglist__27354 = cljs.core.next(arglist__27354);
var y = cljs.core.first(arglist__27354);
arglist__27354 = cljs.core.next(arglist__27354);
var z = cljs.core.first(arglist__27354);
var args = cljs.core.rest(arglist__27354);
return G__27352__delegate(x,y,z,args);
});
G__27352.cljs$core$IFn$_invoke$arity$variadic = G__27352__delegate;
return G__27352;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__27355 = null;
if (arguments.length > 3) {
var G__27356__i = 0, G__27356__a = new Array(arguments.length -  3);
while (G__27356__i < G__27356__a.length) {G__27356__a[G__27356__i] = arguments[G__27356__i + 3]; ++G__27356__i;}
G__27355 = new cljs.core.IndexedSeq(G__27356__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__27351 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27357__i = 0, G__27357__a = new Array(arguments.length -  3);
while (G__27357__i < G__27357__a.length) {G__27357__a[G__27357__i] = arguments[G__27357__i + 3]; ++G__27357__i;}
  ps = new cljs.core.IndexedSeq(G__27357__a,0);
} 
return G__27351__delegate.call(this,p1,p2,p3,ps);};
G__27351.cljs$lang$maxFixedArity = 3;
G__27351.cljs$lang$applyTo = (function (arglist__27358){
var p1 = cljs.core.first(arglist__27358);
arglist__27358 = cljs.core.next(arglist__27358);
var p2 = cljs.core.first(arglist__27358);
arglist__27358 = cljs.core.next(arglist__27358);
var p3 = cljs.core.first(arglist__27358);
var ps = cljs.core.rest(arglist__27358);
return G__27351__delegate(p1,p2,p3,ps);
});
G__27351.cljs$core$IFn$_invoke$arity$variadic = G__27351__delegate;
return G__27351;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__27359 = null;
if (arguments.length > 3) {
var G__27360__i = 0, G__27360__a = new Array(arguments.length -  3);
while (G__27360__i < G__27360__a.length) {G__27360__a[G__27360__i] = arguments[G__27360__i + 3]; ++G__27360__i;}
G__27359 = new cljs.core.IndexedSeq(G__27360__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__27415 = null;
var G__27415__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27415__1 = (function (result){
var G__27401 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27401) : rf.call(null,G__27401));
});
var G__27415__2 = (function (result,input){
var G__27402 = result;
var G__27403 = (function (){var G__27404 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27404) : f.call(null,G__27404));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27402,G__27403) : rf.call(null,G__27402,G__27403));
});
var G__27415__3 = (function() { 
var G__27416__delegate = function (result,input,inputs){
var G__27405 = result;
var G__27406 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27405,G__27406) : rf.call(null,G__27405,G__27406));
};
var G__27416 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__27417__i = 0, G__27417__a = new Array(arguments.length -  2);
while (G__27417__i < G__27417__a.length) {G__27417__a[G__27417__i] = arguments[G__27417__i + 2]; ++G__27417__i;}
  inputs = new cljs.core.IndexedSeq(G__27417__a,0);
} 
return G__27416__delegate.call(this,result,input,inputs);};
G__27416.cljs$lang$maxFixedArity = 2;
G__27416.cljs$lang$applyTo = (function (arglist__27418){
var result = cljs.core.first(arglist__27418);
arglist__27418 = cljs.core.next(arglist__27418);
var input = cljs.core.first(arglist__27418);
var inputs = cljs.core.rest(arglist__27418);
return G__27416__delegate(result,input,inputs);
});
G__27416.cljs$core$IFn$_invoke$arity$variadic = G__27416__delegate;
return G__27416;
})()
;
G__27415 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__27415__0.call(this);
case 1:
return G__27415__1.call(this,result);
case 2:
return G__27415__2.call(this,result,input);
default:
var G__27419 = null;
if (arguments.length > 2) {
var G__27420__i = 0, G__27420__a = new Array(arguments.length -  2);
while (G__27420__i < G__27420__a.length) {G__27420__a[G__27420__i] = arguments[G__27420__i + 2]; ++G__27420__i;}
G__27419 = new cljs.core.IndexedSeq(G__27420__a,0);
}
return G__27415__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__27419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27415.cljs$lang$maxFixedArity = 2;
G__27415.cljs$lang$applyTo = G__27415__3.cljs$lang$applyTo;
G__27415.cljs$core$IFn$_invoke$arity$0 = G__27415__0;
G__27415.cljs$core$IFn$_invoke$arity$1 = G__27415__1;
G__27415.cljs$core$IFn$_invoke$arity$2 = G__27415__2;
G__27415.cljs$core$IFn$_invoke$arity$variadic = G__27415__3.cljs$core$IFn$_invoke$arity$variadic;
return G__27415;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___27421 = size;
var i_27422 = (0);
while(true){
if((i_27422 < n__17032__auto___27421)){
cljs.core.chunk_append(b,(function (){var G__27407 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27422);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27407) : f.call(null,G__27407));
})());

var G__27423 = (i_27422 + (1));
i_27422 = G__27423;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__27408 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27408) : f.call(null,G__27408));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__27409 = cljs.core.first(s1);
var G__27410 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27409,G__27410) : f.call(null,G__27409,G__27410));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__27411 = cljs.core.first(s1);
var G__27412 = cljs.core.first(s2);
var G__27413 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27411,G__27412,G__27413) : f.call(null,G__27411,G__27412,G__27413));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__27424__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__27361_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__27361_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__27424 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27425__i = 0, G__27425__a = new Array(arguments.length -  4);
while (G__27425__i < G__27425__a.length) {G__27425__a[G__27425__i] = arguments[G__27425__i + 4]; ++G__27425__i;}
  colls = new cljs.core.IndexedSeq(G__27425__a,0);
} 
return G__27424__delegate.call(this,f,c1,c2,c3,colls);};
G__27424.cljs$lang$maxFixedArity = 4;
G__27424.cljs$lang$applyTo = (function (arglist__27426){
var f = cljs.core.first(arglist__27426);
arglist__27426 = cljs.core.next(arglist__27426);
var c1 = cljs.core.first(arglist__27426);
arglist__27426 = cljs.core.next(arglist__27426);
var c2 = cljs.core.first(arglist__27426);
arglist__27426 = cljs.core.next(arglist__27426);
var c3 = cljs.core.first(arglist__27426);
var colls = cljs.core.rest(arglist__27426);
return G__27424__delegate(f,c1,c2,c3,colls);
});
G__27424.cljs$core$IFn$_invoke$arity$variadic = G__27424__delegate;
return G__27424;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__27427 = null;
if (arguments.length > 4) {
var G__27428__i = 0, G__27428__a = new Array(arguments.length -  4);
while (G__27428__i < G__27428__a.length) {G__27428__a[G__27428__i] = arguments[G__27428__i + 4]; ++G__27428__i;}
G__27427 = new cljs.core.IndexedSeq(G__27428__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27437 = null;
var G__27437__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27437__1 = (function (result){
var G__27434 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27434) : rf.call(null,G__27434));
});
var G__27437__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__27435 = result;
var G__27436 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27435,G__27436) : rf.call(null,G__27435,G__27436));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__27437 = function(result,input){
switch(arguments.length){
case 0:
return G__27437__0.call(this);
case 1:
return G__27437__1.call(this,result);
case 2:
return G__27437__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27437.cljs$core$IFn$_invoke$arity$0 = G__27437__0;
G__27437.cljs$core$IFn$_invoke$arity$1 = G__27437__1;
G__27437.cljs$core$IFn$_invoke$arity$2 = G__27437__2;
return G__27437;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27444 = null;
var G__27444__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27444__1 = (function (result){
var G__27441 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27441) : rf.call(null,G__27441));
});
var G__27444__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__27442 = result;
var G__27443 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27442,G__27443) : rf.call(null,G__27442,G__27443));
}
});
G__27444 = function(result,input){
switch(arguments.length){
case 0:
return G__27444__0.call(this);
case 1:
return G__27444__1.call(this,result);
case 2:
return G__27444__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27444.cljs$core$IFn$_invoke$arity$0 = G__27444__0;
G__27444.cljs$core$IFn$_invoke$arity$1 = G__27444__1;
G__27444.cljs$core$IFn$_invoke$arity$2 = G__27444__2;
return G__27444;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__27445 = (n__$1 - (1));
var G__27446 = cljs.core.rest(s);
n__$1 = G__27445;
coll__$1 = G__27446;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__27449 = cljs.core.next(s);
var G__27450 = cljs.core.next(lead);
s = G__27449;
lead = G__27450;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__27463 = null;
var G__27463__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27463__1 = (function (result){
var G__27457 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27457) : rf.call(null,G__27457));
});
var G__27463__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__16133__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__16133__auto__)){
var G__27458 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27458) : pred.call(null,G__27458));
} else {
return and__16133__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__27459 = result;
var G__27460 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27459,G__27460) : rf.call(null,G__27459,G__27460));
}
});
G__27463 = function(result,input){
switch(arguments.length){
case 0:
return G__27463__0.call(this);
case 1:
return G__27463__1.call(this,result);
case 2:
return G__27463__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27463.cljs$core$IFn$_invoke$arity$0 = G__27463__0;
G__27463.cljs$core$IFn$_invoke$arity$1 = G__27463__1;
G__27463.cljs$core$IFn$_invoke$arity$2 = G__27463__2;
return G__27463;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__16133__auto__ = s;
if(and__16133__auto__){
var G__27462 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__27462) : pred__$1.call(null,G__27462));
} else {
return and__16133__auto__;
}
})())){
var G__27464 = pred__$1;
var G__27465 = cljs.core.rest(s);
pred__$1 = G__27464;
coll__$1 = G__27465;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__27474 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27474) : f.call(null,G__27474));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__27477__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__27477 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27478__i = 0, G__27478__a = new Array(arguments.length -  2);
while (G__27478__i < G__27478__a.length) {G__27478__a[G__27478__i] = arguments[G__27478__i + 2]; ++G__27478__i;}
  colls = new cljs.core.IndexedSeq(G__27478__a,0);
} 
return G__27477__delegate.call(this,c1,c2,colls);};
G__27477.cljs$lang$maxFixedArity = 2;
G__27477.cljs$lang$applyTo = (function (arglist__27479){
var c1 = cljs.core.first(arglist__27479);
arglist__27479 = cljs.core.next(arglist__27479);
var c2 = cljs.core.first(arglist__27479);
var colls = cljs.core.rest(arglist__27479);
return G__27477__delegate(c1,c2,colls);
});
G__27477.cljs$core$IFn$_invoke$arity$variadic = G__27477__delegate;
return G__27477;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__27480 = null;
if (arguments.length > 2) {
var G__27481__i = 0, G__27481__a = new Array(arguments.length -  2);
while (G__27481__i < G__27481__a.length) {G__27481__a[G__27481__i] = arguments[G__27481__i + 2]; ++G__27481__i;}
G__27480 = new cljs.core.IndexedSeq(G__27481__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__27480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__27496 = null;
var G__27496__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27496__1 = (function (result){
var G__27489 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27489) : rf.call(null,G__27489));
});
var G__27496__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__27490 = result;
var G__27491 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27490,G__27491) : rf.call(null,G__27490,G__27491));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__27492 = sepr;
var G__27493 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27492,G__27493) : rf.call(null,G__27492,G__27493));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__27494 = result;
var G__27495 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27494,G__27495) : rf.call(null,G__27494,G__27495));
}
});
G__27496 = function(result,input){
switch(arguments.length){
case 0:
return G__27496__0.call(this);
case 1:
return G__27496__1.call(this,result);
case 2:
return G__27496__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27496.cljs$core$IFn$_invoke$arity$0 = G__27496__0;
G__27496.cljs$core$IFn$_invoke$arity$1 = G__27496__1;
G__27496.cljs$core$IFn$_invoke$arity$2 = G__27496__2;
return G__27496;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__27505__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__27505 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__27506__i = 0, G__27506__a = new Array(arguments.length -  1);
while (G__27506__i < G__27506__a.length) {G__27506__a[G__27506__i] = arguments[G__27506__i + 1]; ++G__27506__i;}
  colls = new cljs.core.IndexedSeq(G__27506__a,0);
} 
return G__27505__delegate.call(this,f,colls);};
G__27505.cljs$lang$maxFixedArity = 1;
G__27505.cljs$lang$applyTo = (function (arglist__27507){
var f = cljs.core.first(arglist__27507);
var colls = cljs.core.rest(arglist__27507);
return G__27505__delegate(f,colls);
});
G__27505.cljs$core$IFn$_invoke$arity$variadic = G__27505__delegate;
return G__27505;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__27508 = null;
if (arguments.length > 1) {
var G__27509__i = 0, G__27509__a = new Array(arguments.length -  1);
while (G__27509__i < G__27509__a.length) {G__27509__a[G__27509__i] = arguments[G__27509__i + 1]; ++G__27509__i;}
G__27508 = new cljs.core.IndexedSeq(G__27509__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__27528 = null;
var G__27528__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27528__1 = (function (result){
var G__27522 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27522) : rf.call(null,G__27522));
});
var G__27528__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27523 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27523) : pred.call(null,G__27523));
})())){
var G__27524 = result;
var G__27525 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27524,G__27525) : rf.call(null,G__27524,G__27525));
} else {
return result;
}
});
G__27528 = function(result,input){
switch(arguments.length){
case 0:
return G__27528__0.call(this);
case 1:
return G__27528__1.call(this,result);
case 2:
return G__27528__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27528.cljs$core$IFn$_invoke$arity$0 = G__27528__0;
G__27528.cljs$core$IFn$_invoke$arity$1 = G__27528__1;
G__27528.cljs$core$IFn$_invoke$arity$2 = G__27528__2;
return G__27528;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___27529 = size;
var i_27530 = (0);
while(true){
if((i_27530 < n__17032__auto___27529)){
if(cljs.core.truth_((function (){var G__27526 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27530);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27526) : pred.call(null,G__27526));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27530));
} else {
}

var G__27531 = (i_27530 + (1));
i_27530 = G__27531;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__27527 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27527) : pred.call(null,G__27527));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__27538 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__27538) : branch_QMARK_.call(null,G__27538));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__27539 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__27539) : children.call(null,G__27539));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__27540_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__27540_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__27543 = to;
if(G__27543){
var bit__16819__auto__ = (G__27543.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__27543.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__27544 = to;
if(G__27544){
var bit__16819__auto__ = (G__27544.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__27544.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__27546 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27546) : f.call(null,G__27546));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__27547__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__27547 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27548__i = 0, G__27548__a = new Array(arguments.length -  4);
while (G__27548__i < G__27548__a.length) {G__27548__a[G__27548__i] = arguments[G__27548__i + 4]; ++G__27548__i;}
  colls = new cljs.core.IndexedSeq(G__27548__a,0);
} 
return G__27547__delegate.call(this,f,c1,c2,c3,colls);};
G__27547.cljs$lang$maxFixedArity = 4;
G__27547.cljs$lang$applyTo = (function (arglist__27549){
var f = cljs.core.first(arglist__27549);
arglist__27549 = cljs.core.next(arglist__27549);
var c1 = cljs.core.first(arglist__27549);
arglist__27549 = cljs.core.next(arglist__27549);
var c2 = cljs.core.first(arglist__27549);
arglist__27549 = cljs.core.next(arglist__27549);
var c3 = cljs.core.first(arglist__27549);
var colls = cljs.core.rest(arglist__27549);
return G__27547__delegate(f,c1,c2,c3,colls);
});
G__27547.cljs$core$IFn$_invoke$arity$variadic = G__27547__delegate;
return G__27547;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__27550 = null;
if (arguments.length > 4) {
var G__27551__i = 0, G__27551__a = new Array(arguments.length -  4);
while (G__27551__i < G__27551__a.length) {G__27551__a[G__27551__i] = arguments[G__27551__i + 4]; ++G__27551__i;}
G__27550 = new cljs.core.IndexedSeq(G__27551__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__27553 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27553) : pred.call(null,G__27553));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__27568 = m__$1;
if(G__27568){
var bit__16826__auto__ = (G__27568.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16826__auto__) || (G__27568.cljs$core$ILookup$)){
return true;
} else {
if((!G__27568.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27568);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27568);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__27569 = sentinel;
var G__27570 = m__$2;
var G__27571 = cljs.core.next(ks__$1);
sentinel = G__27569;
m__$1 = G__27570;
ks__$1 = G__27571;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__27572,v){
var vec__27577 = p__27572;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27577,(0),null);
var ks = cljs.core.nthnext(vec__27577,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__27578,f){
var vec__27616 = p__27578;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27616,(0),null);
var ks = cljs.core.nthnext(vec__27616,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27617 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27617) : f.call(null,G__27617));
})());
}
});
var update_in__4 = (function (m,p__27579,f,a){
var vec__27618 = p__27579;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27618,(0),null);
var ks = cljs.core.nthnext(vec__27618,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27619 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27620 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27619,G__27620) : f.call(null,G__27619,G__27620));
})());
}
});
var update_in__5 = (function (m,p__27580,f,a,b){
var vec__27621 = p__27580;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27621,(0),null);
var ks = cljs.core.nthnext(vec__27621,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27622 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27623 = a;
var G__27624 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27622,G__27623,G__27624) : f.call(null,G__27622,G__27623,G__27624));
})());
}
});
var update_in__6 = (function (m,p__27581,f,a,b,c){
var vec__27625 = p__27581;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27625,(0),null);
var ks = cljs.core.nthnext(vec__27625,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27626 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27627 = a;
var G__27628 = b;
var G__27629 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27626,G__27627,G__27628,G__27629) : f.call(null,G__27626,G__27627,G__27628,G__27629));
})());
}
});
var update_in__7 = (function() { 
var G__27631__delegate = function (m,p__27582,f,a,b,c,args){
var vec__27630 = p__27582;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27630,(0),null);
var ks = cljs.core.nthnext(vec__27630,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__27631 = function (m,p__27582,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__27632__i = 0, G__27632__a = new Array(arguments.length -  6);
while (G__27632__i < G__27632__a.length) {G__27632__a[G__27632__i] = arguments[G__27632__i + 6]; ++G__27632__i;}
  args = new cljs.core.IndexedSeq(G__27632__a,0);
} 
return G__27631__delegate.call(this,m,p__27582,f,a,b,c,args);};
G__27631.cljs$lang$maxFixedArity = 6;
G__27631.cljs$lang$applyTo = (function (arglist__27633){
var m = cljs.core.first(arglist__27633);
arglist__27633 = cljs.core.next(arglist__27633);
var p__27582 = cljs.core.first(arglist__27633);
arglist__27633 = cljs.core.next(arglist__27633);
var f = cljs.core.first(arglist__27633);
arglist__27633 = cljs.core.next(arglist__27633);
var a = cljs.core.first(arglist__27633);
arglist__27633 = cljs.core.next(arglist__27633);
var b = cljs.core.first(arglist__27633);
arglist__27633 = cljs.core.next(arglist__27633);
var c = cljs.core.first(arglist__27633);
var args = cljs.core.rest(arglist__27633);
return G__27631__delegate(m,p__27582,f,a,b,c,args);
});
G__27631.cljs$core$IFn$_invoke$arity$variadic = G__27631__delegate;
return G__27631;
})()
;
update_in = function(m,p__27582,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__27582,f);
case 4:
return update_in__4.call(this,m,p__27582,f,a);
case 5:
return update_in__5.call(this,m,p__27582,f,a,b);
case 6:
return update_in__6.call(this,m,p__27582,f,a,b,c);
default:
var G__27634 = null;
if (arguments.length > 6) {
var G__27635__i = 0, G__27635__a = new Array(arguments.length -  6);
while (G__27635__i < G__27635__a.length) {G__27635__a[G__27635__i] = arguments[G__27635__i + 6]; ++G__27635__i;}
G__27634 = new cljs.core.IndexedSeq(G__27635__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__27582,f,a,b,c, G__27634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27646 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27646) : f.call(null,G__27646));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27647 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27648 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27647,G__27648) : f.call(null,G__27647,G__27648));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27649 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27650 = x;
var G__27651 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27649,G__27650,G__27651) : f.call(null,G__27649,G__27650,G__27651));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27652 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27653 = x;
var G__27654 = y;
var G__27655 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27652,G__27653,G__27654,G__27655) : f.call(null,G__27652,G__27653,G__27654,G__27655));
})());
});
var update__7 = (function() { 
var G__27656__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__27656 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__27657__i = 0, G__27657__a = new Array(arguments.length -  6);
while (G__27657__i < G__27657__a.length) {G__27657__a[G__27657__i] = arguments[G__27657__i + 6]; ++G__27657__i;}
  more = new cljs.core.IndexedSeq(G__27657__a,0);
} 
return G__27656__delegate.call(this,m,k,f,x,y,z,more);};
G__27656.cljs$lang$maxFixedArity = 6;
G__27656.cljs$lang$applyTo = (function (arglist__27658){
var m = cljs.core.first(arglist__27658);
arglist__27658 = cljs.core.next(arglist__27658);
var k = cljs.core.first(arglist__27658);
arglist__27658 = cljs.core.next(arglist__27658);
var f = cljs.core.first(arglist__27658);
arglist__27658 = cljs.core.next(arglist__27658);
var x = cljs.core.first(arglist__27658);
arglist__27658 = cljs.core.next(arglist__27658);
var y = cljs.core.first(arglist__27658);
arglist__27658 = cljs.core.next(arglist__27658);
var z = cljs.core.first(arglist__27658);
var more = cljs.core.rest(arglist__27658);
return G__27656__delegate(m,k,f,x,y,z,more);
});
G__27656.cljs$core$IFn$_invoke$arity$variadic = G__27656__delegate;
return G__27656;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__27659 = null;
if (arguments.length > 6) {
var G__27660__i = 0, G__27660__a = new Array(arguments.length -  6);
while (G__27660__i < G__27660__a.length) {G__27660__a[G__27660__i] = arguments[G__27660__i + 6]; ++G__27660__i;}
G__27659 = new cljs.core.IndexedSeq(G__27660__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__27659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__27661 = (ll - (5));
var G__27662 = r;
ll = G__27661;
ret = G__27662;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27667 = cljs.core.pv_aget(node,(0));
var G__27668 = (level - (5));
node = G__27667;
level = G__27668;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27669 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__27670 = (level - (5));
node = G__27669;
level = G__27670;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27680 = init__$2;
var G__27681 = (j + i);
var G__27682 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27680,G__27681,G__27682) : f.call(null,G__27680,G__27681,G__27682));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27693 = (j + (1));
var G__27694 = init__$3;
j = G__27693;
init__$2 = G__27694;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27683 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27683) : cljs.core.deref.call(null,G__27683));
} else {
var G__27695 = (i + len);
var G__27696 = init__$2;
i = G__27695;
init__$1 = G__27696;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__27684 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__27684) : cljs.core.tv_editable_root.call(null,G__27684));
})(),(function (){var G__27685 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__27685) : cljs.core.tv_editable_tail.call(null,G__27685));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27686 = init__$2;
var G__27687 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27686,G__27687) : f.call(null,G__27686,G__27687));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27697 = (j + (1));
var G__27698 = init__$3;
j = G__27697;
init__$2 = G__27698;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27688 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27688) : cljs.core.deref.call(null,G__27688));
} else {
var G__27699 = (i + len);
var G__27700 = init__$2;
i = G__27699;
init__$1 = G__27700;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__27689 = coll__$1;
var G__27690 = cljs.core.first_array_for_longvec(coll__$1);
var G__27691 = (0);
var G__27692 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27689,G__27690,G__27691,G__27692) : cljs.core.chunked_seq.call(null,G__27689,G__27690,G__27691,G__27692));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__17032__auto___27701 = len;
var i_27702 = (0);
while(true){
if((i_27702 < n__17032__auto___27701)){
(new_tail[i_27702] = (self__.tail[i_27702]));

var G__27703 = (i_27702 + (1));
i_27702 = G__27703;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__27704 = null;
var G__27704__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27704__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27704 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27704__2.call(this,self__,k);
case 3:
return G__27704__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27704.cljs$core$IFn$_invoke$arity$2 = G__27704__2;
G__27704.cljs$core$IFn$_invoke$arity$3 = G__27704__3;
return G__27704;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args27679){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27679)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__27705 = (i + (1));
var G__27706 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__27705;
out = G__27706;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27707__i = 0, G__27707__a = new Array(arguments.length -  0);
while (G__27707__i < G__27707__a.length) {G__27707__a[G__27707__i] = arguments[G__27707__i + 0]; ++G__27707__i;}
  args = new cljs.core.IndexedSeq(G__27707__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__27708){
var args = cljs.core.seq(arglist__27708);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27709 = self__.vec;
var G__27710 = self__.node;
var G__27711 = self__.i;
var G__27712 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27709,G__27710,G__27711,G__27712) : cljs.core.chunked_seq.call(null,G__27709,G__27710,G__27711,G__27712));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__27713 = self__.vec;
var G__27714 = (self__.i + self__.off);
var G__27715 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27713,G__27714,G__27715) : cljs.core.subvec.call(null,G__27713,G__27714,G__27715));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__27716 = self__.vec;
var G__27717 = (self__.i + self__.off);
var G__27718 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27716,G__27717,G__27718) : cljs.core.subvec.call(null,G__27716,G__27717,G__27718));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27719 = self__.vec;
var G__27720 = self__.node;
var G__27721 = self__.i;
var G__27722 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27719,G__27720,G__27721,G__27722) : cljs.core.chunked_seq.call(null,G__27719,G__27720,G__27721,G__27722));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27723 = self__.vec;
var G__27724 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27725 = end;
var G__27726 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27723,G__27724,G__27725,G__27726) : cljs.core.chunked_seq.call(null,G__27723,G__27724,G__27725,G__27726));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__27727 = self__.vec;
var G__27728 = self__.node;
var G__27729 = self__.i;
var G__27730 = self__.off;
var G__27731 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__27727,G__27728,G__27729,G__27730,G__27731) : cljs.core.chunked_seq.call(null,G__27727,G__27728,G__27729,G__27730,G__27731));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27732 = self__.vec;
var G__27733 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27734 = end;
var G__27735 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27732,G__27733,G__27734,G__27735) : cljs.core.chunked_seq.call(null,G__27732,G__27733,G__27734,G__27735));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__27737 = self__.meta;
var G__27738 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__27739 = self__.start;
var G__27740 = (function (){var x__16462__auto__ = self__.end;
var y__16463__auto__ = (v_pos + (1));
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})();
var G__27741 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27737,G__27738,G__27739,G__27740,G__27741) : cljs.core.build_subvec.call(null,G__27737,G__27738,G__27739,G__27740,G__27741));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__27742 = self__.meta;
var G__27743 = self__.v;
var G__27744 = self__.start;
var G__27745 = (self__.end - (1));
var G__27746 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27742,G__27743,G__27744,G__27745,G__27746) : cljs.core.build_subvec.call(null,G__27742,G__27743,G__27744,G__27745,G__27746));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__27748 = meta__$1;
var G__27749 = self__.v;
var G__27750 = self__.start;
var G__27751 = self__.end;
var G__27752 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27748,G__27749,G__27750,G__27751,G__27752) : cljs.core.build_subvec.call(null,G__27748,G__27749,G__27750,G__27751,G__27752));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27753 = self__.meta;
var G__27754 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__27755 = self__.start;
var G__27756 = (self__.end + (1));
var G__27757 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27753,G__27754,G__27755,G__27756,G__27757) : cljs.core.build_subvec.call(null,G__27753,G__27754,G__27755,G__27756,G__27757));
});

cljs.core.Subvec.prototype.call = (function() {
var G__27758 = null;
var G__27758__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27758__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27758 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27758__2.call(this,self__,k);
case 3:
return G__27758__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27758.cljs$core$IFn$_invoke$arity$2 = G__27758__2;
G__27758.cljs$core$IFn$_invoke$arity$3 = G__27758__3;
return G__27758;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args27736){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27736)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__27759 = meta;
var G__27760 = v.v;
var G__27761 = (v.start + start);
var G__27762 = (v.start + end);
var G__27763 = __hash;
meta = G__27759;
v = G__27760;
start = G__27761;
end = G__27762;
__hash = G__27763;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj27770 = {};
return obj27770;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__27778 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__27779 = (level - (5));
node = G__27778;
level = G__27779;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__27783 = null;
var G__27783__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27783__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27783 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27783__2.call(this,self__,k);
case 3:
return G__27783__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27783.cljs$core$IFn$_invoke$arity$2 = G__27783__2;
G__27783.cljs$core$IFn$_invoke$arity$3 = G__27783__3;
return G__27783;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args27780){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27780)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__16145__auto__ = self__.front;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = self__.rear;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__27784 = (i + incr);
i = G__27784;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__27785 = (i + (1));
var G__27786 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__27785;
out = G__27786;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj27790 = {};
return obj27790;
})();
var l = ks.length;
var i_27791 = (0);
while(true){
if((i_27791 < l)){
var k_27792 = (ks[i_27791]);
(new_obj[k_27792] = (obj[k_27792]));

var G__27793 = (i_27791 + (1));
i_27791 = G__27793;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__27797 = k;
return goog.isString(G__27797);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__27798 = init__$1;
var G__27799 = k;
var G__27800 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27798,G__27799,G__27800) : f.call(null,G__27798,G__27799,G__27800));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27801 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27801) : cljs.core.deref.call(null,G__27801));
} else {
var G__27807 = cljs.core.rest(keys__$1);
var G__27808 = init__$2;
keys__$1 = G__27807;
init__$1 = G__27808;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__27803 = k;
return goog.isString(G__27803);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__27804 = k;
return goog.isString(G__27804);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__27806 = k;
return goog.isString(G__27806);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__27794_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__27794_SHARP_,(self__.strobj[p1__27794_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__27809 = null;
var G__27809__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27809__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27809 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27809__2.call(this,self__,k);
case 3:
return G__27809__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27809.cljs$core$IFn$_invoke$arity$2 = G__27809__2;
G__27809.cljs$core$IFn$_invoke$arity$3 = G__27809__3;
return G__27809;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args27795){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27795)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj27811 = {};
return obj27811;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__27812 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27812,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27812,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__27813 = (i + (2));
i = G__27813;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__27814 = (i + (2));
i = G__27814;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__27815 = (i + (2));
i = G__27815;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__27816 = (i + (2));
i = G__27816;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__27817 = (i + (2));
i = G__27817;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__16145__auto__ = (function (){var G__27821 = k;
return goog.isString(G__27821);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_27822 = (0);
while(true){
if((i_27822 < l)){
(narr[i_27822] = (arr[i_27822]));

var G__27823 = (i_27822 + (1));
i_27822 = G__27823;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27825 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27825) : cljs.core.keys.call(null,G__27825));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27826 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27826) : cljs.core.vals.call(null,G__27826));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27827 = cljs.core.seq(coll);
var chunk__27828 = null;
var count__27829 = (0);
var i__27830 = (0);
while(true){
if((i__27830 < count__27829)){
var vec__27831 = chunk__27828.cljs$core$IIndexed$_nth$arity$2(null,i__27830);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27831,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27831,(1),null);
var G__27832_27845 = v;
var G__27833_27846 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27832_27845,G__27833_27846) : f.call(null,G__27832_27845,G__27833_27846));

var G__27847 = seq__27827;
var G__27848 = chunk__27828;
var G__27849 = count__27829;
var G__27850 = (i__27830 + (1));
seq__27827 = G__27847;
chunk__27828 = G__27848;
count__27829 = G__27849;
i__27830 = G__27850;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27827);
if(temp__4126__auto__){
var seq__27827__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27827__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27827__$1);
var G__27851 = cljs.core.chunk_rest(seq__27827__$1);
var G__27852 = c__16932__auto__;
var G__27853 = cljs.core.count(c__16932__auto__);
var G__27854 = (0);
seq__27827 = G__27851;
chunk__27828 = G__27852;
count__27829 = G__27853;
i__27830 = G__27854;
continue;
} else {
var vec__27834 = cljs.core.first(seq__27827__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27834,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27834,(1),null);
var G__27835_27855 = v;
var G__27836_27856 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27835_27855,G__27836_27856) : f.call(null,G__27835_27855,G__27836_27856));

var G__27857 = cljs.core.next(seq__27827__$1);
var G__27858 = null;
var G__27859 = (0);
var G__27860 = (0);
seq__27827 = G__27857;
chunk__27828 = G__27858;
count__27829 = G__27859;
i__27830 = G__27860;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__27837 = init__$1;
var G__27838 = (self__.arr[i]);
var G__27839 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27837,G__27838,G__27839) : f.call(null,G__27837,G__27838,G__27839));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27840 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27840) : cljs.core.deref.call(null,G__27840));
} else {
var G__27861 = (i + (2));
var G__27862 = init__$2;
i = G__27861;
init__$1 = G__27862;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__27841 = other;
if(G__27841){
var bit__16819__auto__ = (G__27841.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16819__auto__) || (G__27841.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__27863 = (i + (2));
i = G__27863;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj27843 = {};
return obj27843;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__27864 = (s + (2));
var G__27865 = d;
s = G__27864;
d = G__27865;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__27866 = (s + (2));
var G__27867 = (d + (2));
s = G__27866;
d = G__27867;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__27844 = cljs.core.aclone(self__.arr);
(G__27844[(idx + (1))] = v);

return G__27844;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27868 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27869 = cljs.core.next(es);
ret = G__27868;
es = G__27869;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__27870 = null;
var G__27870__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27870__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27870 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27870__2.call(this,self__,k);
case 3:
return G__27870__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27870.cljs$core$IFn$_invoke$arity$2 = G__27870__2;
G__27870.cljs$core$IFn$_invoke$arity$3 = G__27870__3;
return G__27870;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args27824){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27824)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27871 = (i + (2));
var G__27872 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27871;
ret = G__27872;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__27873_27881 = self__.arr;
G__27873_27881.pop();

G__27873_27881.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__27874 = self__.len;
var G__27875 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__27874,G__27875) : cljs.core.array__GT_transient_hash_map.call(null,G__27874,G__27875));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__27876 = o;
if(G__27876){
var bit__16826__auto__ = (G__27876.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__27876.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27876.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27876);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27876);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__27877 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27877) : cljs.core.key.call(null,G__27877));
})(),(function (){var G__27878 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27878) : cljs.core.val.call(null,G__27878));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27882 = cljs.core.next(es);
var G__27883 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__27879 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27879) : cljs.core.key.call(null,G__27879));
})(),(function (){var G__27880 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27880) : cljs.core.val.call(null,G__27880));
})());
es = G__27882;
tcoll__$2 = G__27883;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__27884 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__27885 = (i + (2));
out = G__27884;
i = G__27885;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__27888 = cljs.core.aclone(arr);
(G__27888[i] = a);

return G__27888;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__27889 = cljs.core.aclone(arr);
(G__27889[i] = a);

(G__27889[j] = b);

return G__27889;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__27894 = init__$1;
var G__27895 = k;
var G__27896 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27894,G__27895,G__27896) : f.call(null,G__27894,G__27895,G__27896));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27897 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27897) : cljs.core.deref.call(null,G__27897));
} else {
var G__27898 = (i + (2));
var G__27899 = init__$2;
i = G__27898;
init__$1 = G__27899;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27900 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27900) : cljs.core.create_inode_seq.call(null,G__27900));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27914 = (0);
var j_27915 = (0);
while(true){
if((i_27914 < (32))){
if((((self__.bitmap >>> i_27914) & (1)) === (0))){
var G__27916 = (i_27914 + (1));
var G__27917 = j_27915;
i_27914 = G__27916;
j_27915 = G__27917;
continue;
} else {
(nodes[i_27914] = ((!(((self__.arr[j_27915]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_27915])),(self__.arr[j_27915]),(self__.arr[(j_27915 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27915 + (1))])));

var G__27918 = (i_27914 + (1));
var G__27919 = (j_27915 + (2));
i_27914 = G__27918;
j_27915 = G__27919;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27901 = edit__$1;
var G__27902 = (shift + (5));
var G__27903 = key_or_nil;
var G__27904 = val_or_node;
var G__27905 = hash;
var G__27906 = key;
var G__27907 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27901,G__27902,G__27903,G__27904,G__27905,G__27906,G__27907) : cljs.core.create_node.call(null,G__27901,G__27902,G__27903,G__27904,G__27905,G__27906,G__27907));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27920 = (0);
var j_27921 = (0);
while(true){
if((i_27920 < (32))){
if((((self__.bitmap >>> i_27920) & (1)) === (0))){
var G__27922 = (i_27920 + (1));
var G__27923 = j_27921;
i_27920 = G__27922;
j_27921 = G__27923;
continue;
} else {
(nodes[i_27920] = ((!(((self__.arr[j_27921]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_27921])),(self__.arr[j_27921]),(self__.arr[(j_27921 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27921 + (1))])));

var G__27924 = (i_27920 + (1));
var G__27925 = (j_27921 + (2));
i_27920 = G__27924;
j_27921 = G__27925;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27908 = (shift + (5));
var G__27909 = key_or_nil;
var G__27910 = val_or_node;
var G__27911 = hash;
var G__27912 = key;
var G__27913 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27908,G__27909,G__27910,G__27911,G__27912,G__27913) : cljs.core.create_node.call(null,G__27908,G__27909,G__27910,G__27911,G__27912,G__27913));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__27926 = (i + (1));
var G__27927 = (j + (2));
var G__27928 = (bitmap | ((1) << i));
i = G__27926;
j = G__27927;
bitmap = G__27928;
continue;
} else {
var G__27929 = (i + (1));
var G__27930 = j;
var G__27931 = bitmap;
i = G__27929;
j = G__27930;
bitmap = G__27931;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27932 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__27932) : cljs.core.create_array_node_seq.call(null,G__27932));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27933 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27933) : cljs.core.deref.call(null,G__27933));
} else {
var G__27934 = (i + (1));
var G__27935 = init__$2;
i = G__27934;
init__$1 = G__27935;
continue;
}
} else {
var G__27936 = (i + (1));
var G__27937 = init__$1;
i = G__27936;
init__$1 = G__27937;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__27938 = (i + (2));
i = G__27938;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27939 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27939) : cljs.core.create_inode_seq.call(null,G__27939));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__27940 = self__.nodes;
var G__27941 = (self__.i + (2));
var G__27942 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27940,G__27941,G__27942) : cljs.core.create_inode_seq.call(null,G__27940,G__27941,G__27942));
} else {
var G__27943 = self__.nodes;
var G__27944 = self__.i;
var G__27945 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27943,G__27944,G__27945) : cljs.core.create_inode_seq.call(null,G__27943,G__27944,G__27945));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__27949 = (j + (2));
j = G__27949;
continue;
}
} else {
var G__27950 = (j + (2));
j = G__27950;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27951 = null;
var G__27952 = self__.nodes;
var G__27953 = self__.i;
var G__27954 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27951,G__27952,G__27953,G__27954) : cljs.core.create_array_node_seq.call(null,G__27951,G__27952,G__27953,G__27954));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__27959 = (j + (1));
j = G__27959;
continue;
}
} else {
var G__27960 = (j + (1));
j = G__27960;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27962 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27962) : cljs.core.keys.call(null,G__27962));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27963 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27963) : cljs.core.vals.call(null,G__27963));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27964 = cljs.core.seq(coll);
var chunk__27965 = null;
var count__27966 = (0);
var i__27967 = (0);
while(true){
if((i__27967 < count__27966)){
var vec__27968 = chunk__27965.cljs$core$IIndexed$_nth$arity$2(null,i__27967);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27968,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27968,(1),null);
var G__27969_27980 = v;
var G__27970_27981 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27969_27980,G__27970_27981) : f.call(null,G__27969_27980,G__27970_27981));

var G__27982 = seq__27964;
var G__27983 = chunk__27965;
var G__27984 = count__27966;
var G__27985 = (i__27967 + (1));
seq__27964 = G__27982;
chunk__27965 = G__27983;
count__27966 = G__27984;
i__27967 = G__27985;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27964);
if(temp__4126__auto__){
var seq__27964__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27964__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__27964__$1);
var G__27986 = cljs.core.chunk_rest(seq__27964__$1);
var G__27987 = c__16932__auto__;
var G__27988 = cljs.core.count(c__16932__auto__);
var G__27989 = (0);
seq__27964 = G__27986;
chunk__27965 = G__27987;
count__27966 = G__27988;
i__27967 = G__27989;
continue;
} else {
var vec__27971 = cljs.core.first(seq__27964__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27971,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27971,(1),null);
var G__27972_27990 = v;
var G__27973_27991 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27972_27990,G__27973_27991) : f.call(null,G__27972_27990,G__27973_27991));

var G__27992 = cljs.core.next(seq__27964__$1);
var G__27993 = null;
var G__27994 = (0);
var G__27995 = (0);
seq__27964 = G__27992;
chunk__27965 = G__27993;
count__27966 = G__27994;
i__27967 = G__27995;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27974 = init;
var G__27975 = null;
var G__27976 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27974,G__27975,G__27976) : f.call(null,G__27974,G__27975,G__27976));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27977 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27977) : cljs.core.deref.call(null,G__27977));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27979 = {};
return obj27979;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27996 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27997 = cljs.core.next(es);
ret = G__27996;
es = G__27997;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27998 = null;
var G__27998__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27998__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27998 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27998__2.call(this,self__,k);
case 3:
return G__27998__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27998.cljs$core$IFn$_invoke$arity$2 = G__27998__2;
G__27998.cljs$core$IFn$_invoke$arity$3 = G__27998__3;
return G__27998;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args27961){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27961)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27999 = (i + (2));
var G__28000 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27999;
ret = G__28000;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28001 = (i + (1));
var G__28002 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__28001;
out = G__28002;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__28003 = o;
if(G__28003){
var bit__16826__auto__ = (G__28003.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__28003.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28003.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28003);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28003);
}
})()){
return tcoll.assoc_BANG_((function (){var G__28004 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28004) : cljs.core.key.call(null,G__28004));
})(),(function (){var G__28005 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28005) : cljs.core.val.call(null,G__28005));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__28008 = cljs.core.next(es);
var G__28009 = tcoll__$1.assoc_BANG_((function (){var G__28006 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28006) : cljs.core.key.call(null,G__28006));
})(),(function (){var G__28007 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28007) : cljs.core.val.call(null,G__28007));
})());
es = G__28008;
tcoll__$1 = G__28009;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__28010 = ((ascending_QMARK_)?t.left:t.right);
var G__28011 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__28010;
stack__$1 = G__28011;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28024 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28024) : cljs.core.deref.call(null,G__28024));
} else {
var init__$2 = (function (){var G__28025 = init__$1;
var G__28026 = node.key;
var G__28027 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28025,G__28026,G__28027) : f.call(null,G__28025,G__28026,G__28027));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28028 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28028) : cljs.core.deref.call(null,G__28028));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__28029 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28029) : cljs.core.deref.call(null,G__28029));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__28031 = null;
var G__28031__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28031__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28031 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28031__2.call(this,self__,k);
case 3:
return G__28031__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28031.cljs$core$IFn$_invoke$arity$2 = G__28031__2;
G__28031.cljs$core$IFn$_invoke$arity$3 = G__28031__3;
return G__28031;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args28030){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28030)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__28033 = null;
var G__28033__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28033__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28033 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28033__2.call(this,self__,k);
case 3:
return G__28033__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28033.cljs$core$IFn$_invoke$arity$2 = G__28033__2;
G__28033.cljs$core$IFn$_invoke$arity$3 = G__28033__3;
return G__28033;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args28032){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28032)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__28046 = k;
var G__28047 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28046,G__28047) : comp.call(null,G__28046,G__28047));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__28066 = k;
var G__28067 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28066,G__28067) : comp.call(null,G__28066,G__28067));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__28078 = k;
var G__28079 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28078,G__28079) : comp.call(null,G__28078,G__28079));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28081 = cljs.core.seq(coll);
var chunk__28082 = null;
var count__28083 = (0);
var i__28084 = (0);
while(true){
if((i__28084 < count__28083)){
var vec__28085 = chunk__28082.cljs$core$IIndexed$_nth$arity$2(null,i__28084);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28085,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28085,(1),null);
var G__28086_28098 = v;
var G__28087_28099 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28086_28098,G__28087_28099) : f.call(null,G__28086_28098,G__28087_28099));

var G__28100 = seq__28081;
var G__28101 = chunk__28082;
var G__28102 = count__28083;
var G__28103 = (i__28084 + (1));
seq__28081 = G__28100;
chunk__28082 = G__28101;
count__28083 = G__28102;
i__28084 = G__28103;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28081);
if(temp__4126__auto__){
var seq__28081__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28081__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__28081__$1);
var G__28104 = cljs.core.chunk_rest(seq__28081__$1);
var G__28105 = c__16932__auto__;
var G__28106 = cljs.core.count(c__16932__auto__);
var G__28107 = (0);
seq__28081 = G__28104;
chunk__28082 = G__28105;
count__28083 = G__28106;
i__28084 = G__28107;
continue;
} else {
var vec__28088 = cljs.core.first(seq__28081__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28088,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28088,(1),null);
var G__28089_28108 = v;
var G__28090_28109 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28089_28108,G__28090_28109) : f.call(null,G__28089_28108,G__28090_28109));

var G__28110 = cljs.core.next(seq__28081__$1);
var G__28111 = null;
var G__28112 = (0);
var G__28113 = (0);
seq__28081 = G__28110;
chunk__28082 = G__28111;
count__28083 = G__28112;
i__28084 = G__28113;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28091 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28091) : cljs.core.keys.call(null,G__28091));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28092 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28092) : cljs.core.vals.call(null,G__28092));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28093 = k;
var G__28094 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28093,G__28094) : self__.comp.call(null,G__28093,G__28094));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__28114 = t.left;
t = G__28114;
continue;
} else {
var G__28115 = t.right;
t = G__28115;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28116 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28117 = cljs.core.next(es);
ret = G__28116;
es = G__28117;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__28118 = null;
var G__28118__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28118__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28118 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28118__2.call(this,self__,k);
case 3:
return G__28118__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28118.cljs$core$IFn$_invoke$arity$2 = G__28118__2;
G__28118.cljs$core$IFn$_invoke$arity$3 = G__28118__3;
return G__28118;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args28080){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28080)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28095 = k;
var G__28096 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28095,G__28096) : self__.comp.call(null,G__28095,G__28096));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__28119 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28120 = t.left;
stack = G__28119;
t = G__28120;
continue;
} else {
var G__28121 = stack;
var G__28122 = t.right;
stack = G__28121;
t = G__28122;
continue;
}
} else {
if((c > (0))){
var G__28123 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28124 = t.right;
stack = G__28123;
t = G__28124;
continue;
} else {
var G__28125 = stack;
var G__28126 = t.left;
stack = G__28125;
t = G__28126;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__28097 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28097) : cljs.core.key.call(null,G__28097));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__28127 = cljs.core.nnext(in$);
var G__28128 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28127;
out = G__28128;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28129__i = 0, G__28129__a = new Array(arguments.length -  0);
while (G__28129__i < G__28129__a.length) {G__28129__a[G__28129__i] = arguments[G__28129__i + 0]; ++G__28129__i;}
  keyvals = new cljs.core.IndexedSeq(G__28129__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__28130){
var keyvals = cljs.core.seq(arglist__28130);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28131__i = 0, G__28131__a = new Array(arguments.length -  0);
while (G__28131__i < G__28131__a.length) {G__28131__a[G__28131__i] = arguments[G__28131__i + 0]; ++G__28131__i;}
  keyvals = new cljs.core.IndexedSeq(G__28131__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__28132){
var keyvals = cljs.core.seq(arglist__28132);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj28136 = {};
return obj28136;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__28137 = cljs.core.nnext(kvs);
kvs = G__28137;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28138__i = 0, G__28138__a = new Array(arguments.length -  0);
while (G__28138__i < G__28138__a.length) {G__28138__a[G__28138__i] = arguments[G__28138__i + 0]; ++G__28138__i;}
  keyvals = new cljs.core.IndexedSeq(G__28138__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__28139){
var keyvals = cljs.core.seq(arglist__28139);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__28140 = cljs.core.nnext(in$);
var G__28141 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28140;
out = G__28141;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28142__i = 0, G__28142__a = new Array(arguments.length -  0);
while (G__28142__i < G__28142__a.length) {G__28142__a[G__28142__i] = arguments[G__28142__i + 0]; ++G__28142__i;}
  keyvals = new cljs.core.IndexedSeq(G__28142__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__28143){
var keyvals = cljs.core.seq(arglist__28143);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__28144 = cljs.core.nnext(in$);
var G__28145 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28144;
out = G__28145;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__28146__i = 0, G__28146__a = new Array(arguments.length -  1);
while (G__28146__i < G__28146__a.length) {G__28146__a[G__28146__i] = arguments[G__28146__i + 1]; ++G__28146__i;}
  keyvals = new cljs.core.IndexedSeq(G__28146__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__28147){
var comparator = cljs.core.first(arglist__28147);
var keyvals = cljs.core.rest(arglist__28147);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28148 = self__.mseq;
if(G__28148){
var bit__16826__auto__ = (G__28148.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__28148.cljs$core$INext$)){
return true;
} else {
if((!G__28148.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28148);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28148);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28149 = self__.mseq;
if(G__28149){
var bit__16826__auto__ = (G__28149.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__28149.cljs$core$INext$)){
return true;
} else {
if((!G__28149.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28149);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28149);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28150 = self__.mseq;
if(G__28150){
var bit__16826__auto__ = (G__28150.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__28150.cljs$core$INext$)){
return true;
} else {
if((!G__28150.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28150);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28150);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28151 = self__.mseq;
if(G__28151){
var bit__16826__auto__ = (G__28151.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__28151.cljs$core$INext$)){
return true;
} else {
if((!G__28151.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28151);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28151);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__28152_SHARP_,p2__28153_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = p1__28152_SHARP_;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__28153_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__28154__i = 0, G__28154__a = new Array(arguments.length -  0);
while (G__28154__i < G__28154__a.length) {G__28154__a[G__28154__i] = arguments[G__28154__i + 0]; ++G__28154__i;}
  maps = new cljs.core.IndexedSeq(G__28154__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__28155){
var maps = cljs.core.seq(arglist__28155);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28158 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28159 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28158,G__28159) : f.call(null,G__28158,G__28159));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__16145__auto__ = m1;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__28160__i = 0, G__28160__a = new Array(arguments.length -  1);
while (G__28160__i < G__28160__a.length) {G__28160__a[G__28160__i] = arguments[G__28160__i + 1]; ++G__28160__i;}
  maps = new cljs.core.IndexedSeq(G__28160__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__28161){
var f = cljs.core.first(arglist__28161);
var maps = cljs.core.rest(arglist__28161);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__28162 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__28163 = cljs.core.next(keys);
ret = G__28162;
keys = G__28163;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28166 = cljs.core.seq(coll);
var chunk__28167 = null;
var count__28168 = (0);
var i__28169 = (0);
while(true){
if((i__28169 < count__28168)){
var vec__28170 = chunk__28167.cljs$core$IIndexed$_nth$arity$2(null,i__28169);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28170,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28170,(1),null);
var G__28171_28176 = v;
var G__28172_28177 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28171_28176,G__28172_28177) : f.call(null,G__28171_28176,G__28172_28177));

var G__28178 = seq__28166;
var G__28179 = chunk__28167;
var G__28180 = count__28168;
var G__28181 = (i__28169 + (1));
seq__28166 = G__28178;
chunk__28167 = G__28179;
count__28168 = G__28180;
i__28169 = G__28181;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28166);
if(temp__4126__auto__){
var seq__28166__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28166__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__28166__$1);
var G__28182 = cljs.core.chunk_rest(seq__28166__$1);
var G__28183 = c__16932__auto__;
var G__28184 = cljs.core.count(c__16932__auto__);
var G__28185 = (0);
seq__28166 = G__28182;
chunk__28167 = G__28183;
count__28168 = G__28184;
i__28169 = G__28185;
continue;
} else {
var vec__28173 = cljs.core.first(seq__28166__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28173,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28173,(1),null);
var G__28174_28186 = v;
var G__28175_28187 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28174_28186,G__28175_28187) : f.call(null,G__28174_28186,G__28175_28187));

var G__28188 = cljs.core.next(seq__28166__$1);
var G__28189 = null;
var G__28190 = (0);
var G__28191 = (0);
seq__28166 = G__28188;
chunk__28167 = G__28189;
count__28168 = G__28190;
i__28169 = G__28191;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28164_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28164_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__28192 = null;
var G__28192__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28192__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28192 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28192__2.call(this,self__,k);
case 3:
return G__28192__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28192.cljs$core$IFn$_invoke$arity$2 = G__28192__2;
G__28192.cljs$core$IFn$_invoke$arity$3 = G__28192__3;
return G__28192;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args28165){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28165)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28193 = (i + (1));
var G__28194 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__28193;
out = G__28194;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__28195 = (i + (1));
var G__28196 = cljs.core._conj_BANG_(out,(items[i]));
i = G__28195;
out = G__28196;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__28198 = null;
var G__28198__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__28198__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__28198 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28198__2.call(this,self__,k);
case 3:
return G__28198__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28198.cljs$core$IFn$_invoke$arity$2 = G__28198__2;
G__28198.cljs$core$IFn$_invoke$arity$3 = G__28198__3;
return G__28198;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args28197){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28197)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28201 = cljs.core.seq(coll);
var chunk__28202 = null;
var count__28203 = (0);
var i__28204 = (0);
while(true){
if((i__28204 < count__28203)){
var vec__28205 = chunk__28202.cljs$core$IIndexed$_nth$arity$2(null,i__28204);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28205,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28205,(1),null);
var G__28206_28211 = v;
var G__28207_28212 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28206_28211,G__28207_28212) : f.call(null,G__28206_28211,G__28207_28212));

var G__28213 = seq__28201;
var G__28214 = chunk__28202;
var G__28215 = count__28203;
var G__28216 = (i__28204 + (1));
seq__28201 = G__28213;
chunk__28202 = G__28214;
count__28203 = G__28215;
i__28204 = G__28216;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28201);
if(temp__4126__auto__){
var seq__28201__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28201__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__28201__$1);
var G__28217 = cljs.core.chunk_rest(seq__28201__$1);
var G__28218 = c__16932__auto__;
var G__28219 = cljs.core.count(c__16932__auto__);
var G__28220 = (0);
seq__28201 = G__28217;
chunk__28202 = G__28218;
count__28203 = G__28219;
i__28204 = G__28220;
continue;
} else {
var vec__28208 = cljs.core.first(seq__28201__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28208,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28208,(1),null);
var G__28209_28221 = v;
var G__28210_28222 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28209_28221,G__28210_28222) : f.call(null,G__28209_28221,G__28210_28222));

var G__28223 = cljs.core.next(seq__28201__$1);
var G__28224 = null;
var G__28225 = (0);
var G__28226 = (0);
seq__28201 = G__28223;
chunk__28202 = G__28224;
count__28203 = G__28225;
i__28204 = G__28226;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28199_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28199_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__28227 = null;
var G__28227__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28227__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28227 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28227__2.call(this,self__,k);
case 3:
return G__28227__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28227.cljs$core$IFn$_invoke$arity$2 = G__28227__2;
G__28227.cljs$core$IFn$_invoke$arity$3 = G__28227__3;
return G__28227;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args28200){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28200)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__17026__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__17026__auto__.length)){
var G__28228 = (i + (1));
var G__28229 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__28228;
res = G__28229;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__28230 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__28231 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__28230;
out = G__28231;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__28232__delegate = function (keys){
return cljs.core.set(keys);
};
var G__28232 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28233__i = 0, G__28233__a = new Array(arguments.length -  0);
while (G__28233__i < G__28233__a.length) {G__28233__a[G__28233__i] = arguments[G__28233__i + 0]; ++G__28233__i;}
  keys = new cljs.core.IndexedSeq(G__28233__a,0);
} 
return G__28232__delegate.call(this,keys);};
G__28232.cljs$lang$maxFixedArity = 0;
G__28232.cljs$lang$applyTo = (function (arglist__28234){
var keys = cljs.core.seq(arglist__28234);
return G__28232__delegate(keys);
});
G__28232.cljs$core$IFn$_invoke$arity$variadic = G__28232__delegate;
return G__28232;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__28235 = null;
if (arguments.length > 0) {
var G__28236__i = 0, G__28236__a = new Array(arguments.length -  0);
while (G__28236__i < G__28236__a.length) {G__28236__a[G__28236__i] = arguments[G__28236__i + 0]; ++G__28236__i;}
G__28235 = new cljs.core.IndexedSeq(G__28236__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__28235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28237__i = 0, G__28237__a = new Array(arguments.length -  0);
while (G__28237__i < G__28237__a.length) {G__28237__a[G__28237__i] = arguments[G__28237__i + 0]; ++G__28237__i;}
  keys = new cljs.core.IndexedSeq(G__28237__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__28238){
var keys = cljs.core.seq(arglist__28238);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__28239__i = 0, G__28239__a = new Array(arguments.length -  1);
while (G__28239__i < G__28239__a.length) {G__28239__a[G__28239__i] = arguments[G__28239__i + 1]; ++G__28239__i;}
  keys = new cljs.core.IndexedSeq(G__28239__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__28240){
var comparator = cljs.core.first(arglist__28240);
var keys = cljs.core.rest(arglist__28240);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__28241_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28241_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__28241_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28242_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28242_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__28242_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__28263 = null;
var G__28263__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28263__1 = (function (result){
var G__28253 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28253) : rf.call(null,G__28253));
});
var G__28263__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__28254 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28254) : cljs.core.deref.call(null,G__28254));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__28255 = result;
var G__28256 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28255,G__28256) : rf.call(null,G__28255,G__28256));
}
});
G__28263 = function(result,input){
switch(arguments.length){
case 0:
return G__28263__0.call(this);
case 1:
return G__28263__1.call(this,result);
case 2:
return G__28263__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28263.cljs$core$IFn$_invoke$arity$0 = G__28263__0;
G__28263.cljs$core$IFn$_invoke$arity$1 = G__28263__1;
G__28263.cljs$core$IFn$_invoke$arity$2 = G__28263__2;
return G__28263;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__28261,seen__$1){
while(true){
var vec__28262 = p__28261;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28262,(0),null);
var xs__$1 = vec__28262;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__28264 = cljs.core.rest(s);
var G__28265 = seen__$1;
p__28261 = G__28264;
seen__$1 = G__28265;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__28266 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__28267 = cljs.core.next(s__$1);
ret = G__28266;
s__$1 = G__28267;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__28269 = x;
if(G__28269){
var bit__16819__auto__ = (G__28269.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__28269.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__28270 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__28271 = cljs.core.next(ks);
var G__28272 = cljs.core.next(vs);
map = G__28270;
ks = G__28271;
vs = G__28272;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__28283 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28283) : k.call(null,G__28283));
})() > (function (){var G__28284 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28284) : k.call(null,G__28284));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__28285__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28273_SHARP_,p2__28274_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__28273_SHARP_,p2__28274_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28285 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28286__i = 0, G__28286__a = new Array(arguments.length -  3);
while (G__28286__i < G__28286__a.length) {G__28286__a[G__28286__i] = arguments[G__28286__i + 3]; ++G__28286__i;}
  more = new cljs.core.IndexedSeq(G__28286__a,0);
} 
return G__28285__delegate.call(this,k,x,y,more);};
G__28285.cljs$lang$maxFixedArity = 3;
G__28285.cljs$lang$applyTo = (function (arglist__28287){
var k = cljs.core.first(arglist__28287);
arglist__28287 = cljs.core.next(arglist__28287);
var x = cljs.core.first(arglist__28287);
arglist__28287 = cljs.core.next(arglist__28287);
var y = cljs.core.first(arglist__28287);
var more = cljs.core.rest(arglist__28287);
return G__28285__delegate(k,x,y,more);
});
G__28285.cljs$core$IFn$_invoke$arity$variadic = G__28285__delegate;
return G__28285;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__28288 = null;
if (arguments.length > 3) {
var G__28289__i = 0, G__28289__a = new Array(arguments.length -  3);
while (G__28289__i < G__28289__a.length) {G__28289__a[G__28289__i] = arguments[G__28289__i + 3]; ++G__28289__i;}
G__28288 = new cljs.core.IndexedSeq(G__28289__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__28300 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28300) : k.call(null,G__28300));
})() < (function (){var G__28301 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28301) : k.call(null,G__28301));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__28302__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28290_SHARP_,p2__28291_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__28290_SHARP_,p2__28291_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28302 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28303__i = 0, G__28303__a = new Array(arguments.length -  3);
while (G__28303__i < G__28303__a.length) {G__28303__a[G__28303__i] = arguments[G__28303__i + 3]; ++G__28303__i;}
  more = new cljs.core.IndexedSeq(G__28303__a,0);
} 
return G__28302__delegate.call(this,k,x,y,more);};
G__28302.cljs$lang$maxFixedArity = 3;
G__28302.cljs$lang$applyTo = (function (arglist__28304){
var k = cljs.core.first(arglist__28304);
arglist__28304 = cljs.core.next(arglist__28304);
var x = cljs.core.first(arglist__28304);
arglist__28304 = cljs.core.next(arglist__28304);
var y = cljs.core.first(arglist__28304);
var more = cljs.core.rest(arglist__28304);
return G__28302__delegate(k,x,y,more);
});
G__28302.cljs$core$IFn$_invoke$arity$variadic = G__28302__delegate;
return G__28302;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__28305 = null;
if (arguments.length > 3) {
var G__28306__i = 0, G__28306__a = new Array(arguments.length -  3);
while (G__28306__i < G__28306__a.length) {G__28306__a[G__28306__i] = arguments[G__28306__i + 3]; ++G__28306__i;}
G__28305 = new cljs.core.IndexedSeq(G__28306__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__28323 = null;
var G__28323__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28323__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28318 = result;
var G__28319 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28318,G__28319) : rf.call(null,G__28318,G__28319));
})());
})());
var G__28320 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28320) : rf.call(null,G__28320));
});
var G__28323__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__28321 = result;
var G__28322 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28321,G__28322) : rf.call(null,G__28321,G__28322));
} else {
return result;
}
});
G__28323 = function(result,input){
switch(arguments.length){
case 0:
return G__28323__0.call(this);
case 1:
return G__28323__1.call(this,result);
case 2:
return G__28323__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28323.cljs$core$IFn$_invoke$arity$0 = G__28323__0;
G__28323.cljs$core$IFn$_invoke$arity$1 = G__28323__1;
G__28323.cljs$core$IFn$_invoke$arity$2 = G__28323__2;
return G__28323;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__28336 = null;
var G__28336__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28336__1 = (function (result){
var G__28331 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28331) : rf.call(null,G__28331));
});
var G__28336__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__28332 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28332) : pred.call(null,G__28332));
})())){
var G__28333 = result;
var G__28334 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28333,G__28334) : rf.call(null,G__28333,G__28334));
} else {
return cljs.core.reduced(result);
}
});
G__28336 = function(result,input){
switch(arguments.length){
case 0:
return G__28336__0.call(this);
case 1:
return G__28336__1.call(this,result);
case 2:
return G__28336__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28336.cljs$core$IFn$_invoke$arity$0 = G__28336__0;
G__28336.cljs$core$IFn$_invoke$arity$1 = G__28336__1;
G__28336.cljs$core$IFn$_invoke$arity$2 = G__28336__2;
return G__28336;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__28335 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28335) : pred.call(null,G__28335));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__28341 = (function (){var G__28343 = cljs.core._entry_key(sc,e);
var G__28344 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28343,G__28344) : comp.call(null,G__28343,G__28344));
})();
var G__28342 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__28341,G__28342) : test.call(null,G__28341,G__28342));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28348 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28348,(0),null);
var s = vec__28348;
if(cljs.core.truth_((function (){var G__28349 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28349) : include.call(null,G__28349));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28350 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28350,(0),null);
var s = vec__28350;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28354 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28354,(0),null);
var s = vec__28354;
if(cljs.core.truth_((function (){var G__28355 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28355) : include.call(null,G__28355));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28356 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28356,(0),null);
var s = vec__28356;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__28357 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28357) : Math.ceil.call(null,G__28357));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__28358 = ret;
var G__28359 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28358,G__28359) : f.call(null,G__28358,G__28359));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__28360 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28360) : cljs.core.deref.call(null,G__28360));
} else {
var G__28361 = (i + self__.step);
var G__28362 = ret__$1;
i = G__28361;
ret = G__28362;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28380 = null;
var G__28380__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28380__1 = (function (result){
var G__28377 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28377) : rf.call(null,G__28377));
});
var G__28380__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__28378 = result;
var G__28379 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28378,G__28379) : rf.call(null,G__28378,G__28379));
} else {
return result;
}
});
G__28380 = function(result,input){
switch(arguments.length){
case 0:
return G__28380__0.call(this);
case 1:
return G__28380__1.call(this,result);
case 2:
return G__28380__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28380.cljs$core$IFn$_invoke$arity$0 = G__28380__0;
G__28380.cljs$core$IFn$_invoke$arity$1 = G__28380__1;
G__28380.cljs$core$IFn$_invoke$arity$2 = G__28380__2;
return G__28380;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__28402 = null;
var G__28402__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28402__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28393 = result;
var G__28394 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28393,G__28394) : rf.call(null,G__28393,G__28394));
})());
})());
var G__28395 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28395) : rf.call(null,G__28395));
});
var G__28402__2 = (function (result,input){
var pval = (function (){var G__28396 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28396) : cljs.core.deref.call(null,G__28396));
})();
var val = (function (){var G__28397 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28397) : f.call(null,G__28397));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__28398 = result;
var G__28399 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28398,G__28399) : rf.call(null,G__28398,G__28399));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__28402 = function(result,input){
switch(arguments.length){
case 0:
return G__28402__0.call(this);
case 1:
return G__28402__1.call(this,result);
case 2:
return G__28402__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28402.cljs$core$IFn$_invoke$arity$0 = G__28402__0;
G__28402.cljs$core$IFn$_invoke$arity$1 = G__28402__1;
G__28402.cljs$core$IFn$_invoke$arity$2 = G__28402__2;
return G__28402;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__28400 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28400) : f.call(null,G__28400));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__28381_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__28401 = p1__28381_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28401) : f.call(null,G__28401));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__28411 = init;
var G__28412 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28411,G__28412) : f.call(null,G__28411,G__28412));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__28507 = null;
var G__28507__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__28507__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28465 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28465) : f.call(null,G__28465));
})()],null));
});
var G__28507__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28466 = x;
var G__28467 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28466,G__28467) : f.call(null,G__28466,G__28467));
})()],null));
});
var G__28507__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28468 = x;
var G__28469 = y;
var G__28470 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28468,G__28469,G__28470) : f.call(null,G__28468,G__28469,G__28470));
})()],null));
});
var G__28507__4 = (function() { 
var G__28508__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__28508 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28509__i = 0, G__28509__a = new Array(arguments.length -  3);
while (G__28509__i < G__28509__a.length) {G__28509__a[G__28509__i] = arguments[G__28509__i + 3]; ++G__28509__i;}
  args = new cljs.core.IndexedSeq(G__28509__a,0);
} 
return G__28508__delegate.call(this,x,y,z,args);};
G__28508.cljs$lang$maxFixedArity = 3;
G__28508.cljs$lang$applyTo = (function (arglist__28510){
var x = cljs.core.first(arglist__28510);
arglist__28510 = cljs.core.next(arglist__28510);
var y = cljs.core.first(arglist__28510);
arglist__28510 = cljs.core.next(arglist__28510);
var z = cljs.core.first(arglist__28510);
var args = cljs.core.rest(arglist__28510);
return G__28508__delegate(x,y,z,args);
});
G__28508.cljs$core$IFn$_invoke$arity$variadic = G__28508__delegate;
return G__28508;
})()
;
G__28507 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28507__0.call(this);
case 1:
return G__28507__1.call(this,x);
case 2:
return G__28507__2.call(this,x,y);
case 3:
return G__28507__3.call(this,x,y,z);
default:
var G__28511 = null;
if (arguments.length > 3) {
var G__28512__i = 0, G__28512__a = new Array(arguments.length -  3);
while (G__28512__i < G__28512__a.length) {G__28512__a[G__28512__i] = arguments[G__28512__i + 3]; ++G__28512__i;}
G__28511 = new cljs.core.IndexedSeq(G__28512__a,0);
}
return G__28507__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28507.cljs$lang$maxFixedArity = 3;
G__28507.cljs$lang$applyTo = G__28507__4.cljs$lang$applyTo;
G__28507.cljs$core$IFn$_invoke$arity$0 = G__28507__0;
G__28507.cljs$core$IFn$_invoke$arity$1 = G__28507__1;
G__28507.cljs$core$IFn$_invoke$arity$2 = G__28507__2;
G__28507.cljs$core$IFn$_invoke$arity$3 = G__28507__3;
G__28507.cljs$core$IFn$_invoke$arity$variadic = G__28507__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28507;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__28513 = null;
var G__28513__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__28513__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28471 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28471) : f.call(null,G__28471));
})(),(function (){var G__28472 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28472) : g.call(null,G__28472));
})()],null));
});
var G__28513__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28473 = x;
var G__28474 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28473,G__28474) : f.call(null,G__28473,G__28474));
})(),(function (){var G__28475 = x;
var G__28476 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28475,G__28476) : g.call(null,G__28475,G__28476));
})()],null));
});
var G__28513__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28477 = x;
var G__28478 = y;
var G__28479 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28477,G__28478,G__28479) : f.call(null,G__28477,G__28478,G__28479));
})(),(function (){var G__28480 = x;
var G__28481 = y;
var G__28482 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28480,G__28481,G__28482) : g.call(null,G__28480,G__28481,G__28482));
})()],null));
});
var G__28513__4 = (function() { 
var G__28514__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__28514 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28515__i = 0, G__28515__a = new Array(arguments.length -  3);
while (G__28515__i < G__28515__a.length) {G__28515__a[G__28515__i] = arguments[G__28515__i + 3]; ++G__28515__i;}
  args = new cljs.core.IndexedSeq(G__28515__a,0);
} 
return G__28514__delegate.call(this,x,y,z,args);};
G__28514.cljs$lang$maxFixedArity = 3;
G__28514.cljs$lang$applyTo = (function (arglist__28516){
var x = cljs.core.first(arglist__28516);
arglist__28516 = cljs.core.next(arglist__28516);
var y = cljs.core.first(arglist__28516);
arglist__28516 = cljs.core.next(arglist__28516);
var z = cljs.core.first(arglist__28516);
var args = cljs.core.rest(arglist__28516);
return G__28514__delegate(x,y,z,args);
});
G__28514.cljs$core$IFn$_invoke$arity$variadic = G__28514__delegate;
return G__28514;
})()
;
G__28513 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28513__0.call(this);
case 1:
return G__28513__1.call(this,x);
case 2:
return G__28513__2.call(this,x,y);
case 3:
return G__28513__3.call(this,x,y,z);
default:
var G__28517 = null;
if (arguments.length > 3) {
var G__28518__i = 0, G__28518__a = new Array(arguments.length -  3);
while (G__28518__i < G__28518__a.length) {G__28518__a[G__28518__i] = arguments[G__28518__i + 3]; ++G__28518__i;}
G__28517 = new cljs.core.IndexedSeq(G__28518__a,0);
}
return G__28513__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28513.cljs$lang$maxFixedArity = 3;
G__28513.cljs$lang$applyTo = G__28513__4.cljs$lang$applyTo;
G__28513.cljs$core$IFn$_invoke$arity$0 = G__28513__0;
G__28513.cljs$core$IFn$_invoke$arity$1 = G__28513__1;
G__28513.cljs$core$IFn$_invoke$arity$2 = G__28513__2;
G__28513.cljs$core$IFn$_invoke$arity$3 = G__28513__3;
G__28513.cljs$core$IFn$_invoke$arity$variadic = G__28513__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28513;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__28519 = null;
var G__28519__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__28519__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28483 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28483) : f.call(null,G__28483));
})(),(function (){var G__28484 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28484) : g.call(null,G__28484));
})(),(function (){var G__28485 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28485) : h.call(null,G__28485));
})()],null));
});
var G__28519__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28486 = x;
var G__28487 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28486,G__28487) : f.call(null,G__28486,G__28487));
})(),(function (){var G__28488 = x;
var G__28489 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28488,G__28489) : g.call(null,G__28488,G__28489));
})(),(function (){var G__28490 = x;
var G__28491 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28490,G__28491) : h.call(null,G__28490,G__28491));
})()],null));
});
var G__28519__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28492 = x;
var G__28493 = y;
var G__28494 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28492,G__28493,G__28494) : f.call(null,G__28492,G__28493,G__28494));
})(),(function (){var G__28495 = x;
var G__28496 = y;
var G__28497 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28495,G__28496,G__28497) : g.call(null,G__28495,G__28496,G__28497));
})(),(function (){var G__28498 = x;
var G__28499 = y;
var G__28500 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28498,G__28499,G__28500) : h.call(null,G__28498,G__28499,G__28500));
})()],null));
});
var G__28519__4 = (function() { 
var G__28520__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__28520 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28521__i = 0, G__28521__a = new Array(arguments.length -  3);
while (G__28521__i < G__28521__a.length) {G__28521__a[G__28521__i] = arguments[G__28521__i + 3]; ++G__28521__i;}
  args = new cljs.core.IndexedSeq(G__28521__a,0);
} 
return G__28520__delegate.call(this,x,y,z,args);};
G__28520.cljs$lang$maxFixedArity = 3;
G__28520.cljs$lang$applyTo = (function (arglist__28522){
var x = cljs.core.first(arglist__28522);
arglist__28522 = cljs.core.next(arglist__28522);
var y = cljs.core.first(arglist__28522);
arglist__28522 = cljs.core.next(arglist__28522);
var z = cljs.core.first(arglist__28522);
var args = cljs.core.rest(arglist__28522);
return G__28520__delegate(x,y,z,args);
});
G__28520.cljs$core$IFn$_invoke$arity$variadic = G__28520__delegate;
return G__28520;
})()
;
G__28519 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28519__0.call(this);
case 1:
return G__28519__1.call(this,x);
case 2:
return G__28519__2.call(this,x,y);
case 3:
return G__28519__3.call(this,x,y,z);
default:
var G__28523 = null;
if (arguments.length > 3) {
var G__28524__i = 0, G__28524__a = new Array(arguments.length -  3);
while (G__28524__i < G__28524__a.length) {G__28524__a[G__28524__i] = arguments[G__28524__i + 3]; ++G__28524__i;}
G__28523 = new cljs.core.IndexedSeq(G__28524__a,0);
}
return G__28519__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28519.cljs$lang$maxFixedArity = 3;
G__28519.cljs$lang$applyTo = G__28519__4.cljs$lang$applyTo;
G__28519.cljs$core$IFn$_invoke$arity$0 = G__28519__0;
G__28519.cljs$core$IFn$_invoke$arity$1 = G__28519__1;
G__28519.cljs$core$IFn$_invoke$arity$2 = G__28519__2;
G__28519.cljs$core$IFn$_invoke$arity$3 = G__28519__3;
G__28519.cljs$core$IFn$_invoke$arity$variadic = G__28519__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28519;
})()
});
var juxt__4 = (function() { 
var G__28525__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__28526 = null;
var G__28526__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28413_SHARP_,p2__28414_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28413_SHARP_,(function (){return (p2__28414_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__28414_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__28414_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28526__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28415_SHARP_,p2__28416_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28415_SHARP_,(function (){var G__28501 = x;
return (p2__28416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28416_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28501) : p2__28416_SHARP_.call(null,G__28501));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28526__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28417_SHARP_,p2__28418_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28417_SHARP_,(function (){var G__28502 = x;
var G__28503 = y;
return (p2__28418_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28418_SHARP_.cljs$core$IFn$_invoke$arity$2(G__28502,G__28503) : p2__28418_SHARP_.call(null,G__28502,G__28503));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28526__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28419_SHARP_,p2__28420_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28419_SHARP_,(function (){var G__28504 = x;
var G__28505 = y;
var G__28506 = z;
return (p2__28420_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__28420_SHARP_.cljs$core$IFn$_invoke$arity$3(G__28504,G__28505,G__28506) : p2__28420_SHARP_.call(null,G__28504,G__28505,G__28506));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28526__4 = (function() { 
var G__28527__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28421_SHARP_,p2__28422_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28421_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__28422_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__28527 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28528__i = 0, G__28528__a = new Array(arguments.length -  3);
while (G__28528__i < G__28528__a.length) {G__28528__a[G__28528__i] = arguments[G__28528__i + 3]; ++G__28528__i;}
  args = new cljs.core.IndexedSeq(G__28528__a,0);
} 
return G__28527__delegate.call(this,x,y,z,args);};
G__28527.cljs$lang$maxFixedArity = 3;
G__28527.cljs$lang$applyTo = (function (arglist__28529){
var x = cljs.core.first(arglist__28529);
arglist__28529 = cljs.core.next(arglist__28529);
var y = cljs.core.first(arglist__28529);
arglist__28529 = cljs.core.next(arglist__28529);
var z = cljs.core.first(arglist__28529);
var args = cljs.core.rest(arglist__28529);
return G__28527__delegate(x,y,z,args);
});
G__28527.cljs$core$IFn$_invoke$arity$variadic = G__28527__delegate;
return G__28527;
})()
;
G__28526 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28526__0.call(this);
case 1:
return G__28526__1.call(this,x);
case 2:
return G__28526__2.call(this,x,y);
case 3:
return G__28526__3.call(this,x,y,z);
default:
var G__28530 = null;
if (arguments.length > 3) {
var G__28531__i = 0, G__28531__a = new Array(arguments.length -  3);
while (G__28531__i < G__28531__a.length) {G__28531__a[G__28531__i] = arguments[G__28531__i + 3]; ++G__28531__i;}
G__28530 = new cljs.core.IndexedSeq(G__28531__a,0);
}
return G__28526__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28526.cljs$lang$maxFixedArity = 3;
G__28526.cljs$lang$applyTo = G__28526__4.cljs$lang$applyTo;
G__28526.cljs$core$IFn$_invoke$arity$0 = G__28526__0;
G__28526.cljs$core$IFn$_invoke$arity$1 = G__28526__1;
G__28526.cljs$core$IFn$_invoke$arity$2 = G__28526__2;
G__28526.cljs$core$IFn$_invoke$arity$3 = G__28526__3;
G__28526.cljs$core$IFn$_invoke$arity$variadic = G__28526__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28526;
})()
;})(fs__$1))
};
var G__28525 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28532__i = 0, G__28532__a = new Array(arguments.length -  3);
while (G__28532__i < G__28532__a.length) {G__28532__a[G__28532__i] = arguments[G__28532__i + 3]; ++G__28532__i;}
  fs = new cljs.core.IndexedSeq(G__28532__a,0);
} 
return G__28525__delegate.call(this,f,g,h,fs);};
G__28525.cljs$lang$maxFixedArity = 3;
G__28525.cljs$lang$applyTo = (function (arglist__28533){
var f = cljs.core.first(arglist__28533);
arglist__28533 = cljs.core.next(arglist__28533);
var g = cljs.core.first(arglist__28533);
arglist__28533 = cljs.core.next(arglist__28533);
var h = cljs.core.first(arglist__28533);
var fs = cljs.core.rest(arglist__28533);
return G__28525__delegate(f,g,h,fs);
});
G__28525.cljs$core$IFn$_invoke$arity$variadic = G__28525__delegate;
return G__28525;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__28534 = null;
if (arguments.length > 3) {
var G__28535__i = 0, G__28535__a = new Array(arguments.length -  3);
while (G__28535__i < G__28535__a.length) {G__28535__a[G__28535__i] = arguments[G__28535__i + 3]; ++G__28535__i;}
G__28534 = new cljs.core.IndexedSeq(G__28535__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__28534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__28536 = cljs.core.next(coll);
coll = G__28536;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__28537 = (n - (1));
var G__28538 = cljs.core.next(coll);
n = G__28537;
coll = G__28538;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__28542 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28542,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28542,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28542,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_28550 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__28551_28557 = cljs.core.first(coll);
var G__28552_28558 = writer;
var G__28553_28559 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28551_28557,G__28552_28558,G__28553_28559) : print_one.call(null,G__28551_28557,G__28552_28558,G__28553_28559));
} else {
}

var coll_28560__$1 = cljs.core.next(coll);
var n_28561 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_28560__$1) && (((n_28561 == null)) || (!((n_28561 === (0)))))){
cljs.core._write(writer,sep);

var G__28554_28562 = cljs.core.first(coll_28560__$1);
var G__28555_28563 = writer;
var G__28556_28564 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28554_28562,G__28555_28563,G__28556_28564) : print_one.call(null,G__28554_28562,G__28555_28563,G__28556_28564));

var G__28565 = cljs.core.next(coll_28560__$1);
var G__28566 = (n_28561 - (1));
coll_28560__$1 = G__28565;
n_28561 = G__28566;
continue;
} else {
if((cljs.core.seq(coll_28560__$1)) && ((n_28561 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28550;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__28571 = cljs.core.seq(ss);
var chunk__28572 = null;
var count__28573 = (0);
var i__28574 = (0);
while(true){
if((i__28574 < count__28573)){
var s = chunk__28572.cljs$core$IIndexed$_nth$arity$2(null,i__28574);
cljs.core._write(writer,s);

var G__28575 = seq__28571;
var G__28576 = chunk__28572;
var G__28577 = count__28573;
var G__28578 = (i__28574 + (1));
seq__28571 = G__28575;
chunk__28572 = G__28576;
count__28573 = G__28577;
i__28574 = G__28578;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28571);
if(temp__4126__auto__){
var seq__28571__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28571__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__28571__$1);
var G__28579 = cljs.core.chunk_rest(seq__28571__$1);
var G__28580 = c__16932__auto__;
var G__28581 = cljs.core.count(c__16932__auto__);
var G__28582 = (0);
seq__28571 = G__28579;
chunk__28572 = G__28580;
count__28573 = G__28581;
i__28574 = G__28582;
continue;
} else {
var s = cljs.core.first(seq__28571__$1);
cljs.core._write(writer,s);

var G__28583 = cljs.core.next(seq__28571__$1);
var G__28584 = null;
var G__28585 = (0);
var G__28586 = (0);
seq__28571 = G__28583;
chunk__28572 = G__28584;
count__28573 = G__28585;
i__28574 = G__28586;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__28587__i = 0, G__28587__a = new Array(arguments.length -  1);
while (G__28587__i < G__28587__a.length) {G__28587__a[G__28587__i] = arguments[G__28587__i + 1]; ++G__28587__i;}
  ss = new cljs.core.IndexedSeq(G__28587__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__28588){
var writer = cljs.core.first(arglist__28588);
var ss = cljs.core.rest(arglist__28588);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj28590 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj28590;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__28593 = "[\\\\\"\b\f\n\r\t]";
var G__28594 = "g";
return RegExp(G__28593,G__28594);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__28608 = obj;
if(G__28608){
var bit__16826__auto__ = (G__28608.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__28608.cljs$core$IMeta$)){
return true;
} else {
if((!G__28608.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28608);
}
})();
if(and__16133__auto____$1){
return cljs.core.meta(obj);
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__28609_28619 = cljs.core.meta(obj);
var G__28610_28620 = writer;
var G__28611_28621 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__28609_28619,G__28610_28620,G__28611_28621) : cljs.core.pr_writer.call(null,G__28609_28619,G__28610_28620,G__28611_28621));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__28612 = obj;
if(G__28612){
var bit__16819__auto__ = (G__28612.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16819__auto__) || (G__28612.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__28613 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__28614 = cljs.core.pr_writer;
var G__28615 = writer;
var G__28616 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__28613,G__28614,G__28615,G__28616) : cljs.core.print_map.call(null,G__28613,G__28614,G__28615,G__28616));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__28617 = obj;
return goog.isString(G__28617);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__28622 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__28622;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__28618 = obj;
if(G__28618){
var bit__16826__auto__ = (G__28618.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16826__auto__) || (G__28618.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__28618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28618);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__28626 = obj;
var G__28627 = writer;
var G__28628 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__28626,G__28627,G__28628) : alt_impl.call(null,G__28626,G__28627,G__28628));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__28633 = cljs.core.seq(cljs.core.next(objs));
var chunk__28634 = null;
var count__28635 = (0);
var i__28636 = (0);
while(true){
if((i__28636 < count__28635)){
var obj = chunk__28634.cljs$core$IIndexed$_nth$arity$2(null,i__28636);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28637 = seq__28633;
var G__28638 = chunk__28634;
var G__28639 = count__28635;
var G__28640 = (i__28636 + (1));
seq__28633 = G__28637;
chunk__28634 = G__28638;
count__28635 = G__28639;
i__28636 = G__28640;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28633);
if(temp__4126__auto__){
var seq__28633__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28633__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__28633__$1);
var G__28641 = cljs.core.chunk_rest(seq__28633__$1);
var G__28642 = c__16932__auto__;
var G__28643 = cljs.core.count(c__16932__auto__);
var G__28644 = (0);
seq__28633 = G__28641;
chunk__28634 = G__28642;
count__28635 = G__28643;
i__28636 = G__28644;
continue;
} else {
var obj = cljs.core.first(seq__28633__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28645 = cljs.core.next(seq__28633__$1);
var G__28646 = null;
var G__28647 = (0);
var G__28648 = (0);
seq__28633 = G__28645;
chunk__28634 = G__28646;
count__28635 = G__28647;
i__28636 = G__28648;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28649__i = 0, G__28649__a = new Array(arguments.length -  0);
while (G__28649__i < G__28649__a.length) {G__28649__a[G__28649__i] = arguments[G__28649__i + 0]; ++G__28649__i;}
  objs = new cljs.core.IndexedSeq(G__28649__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__28650){
var objs = cljs.core.seq(arglist__28650);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28651__i = 0, G__28651__a = new Array(arguments.length -  0);
while (G__28651__i < G__28651__a.length) {G__28651__a[G__28651__i] = arguments[G__28651__i + 0]; ++G__28651__i;}
  objs = new cljs.core.IndexedSeq(G__28651__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__28652){
var objs = cljs.core.seq(arglist__28652);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28653__i = 0, G__28653__a = new Array(arguments.length -  0);
while (G__28653__i < G__28653__a.length) {G__28653__a[G__28653__i] = arguments[G__28653__i + 0]; ++G__28653__i;}
  objs = new cljs.core.IndexedSeq(G__28653__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__28654){
var objs = cljs.core.seq(arglist__28654);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28655__i = 0, G__28655__a = new Array(arguments.length -  0);
while (G__28655__i < G__28655__a.length) {G__28655__a[G__28655__i] = arguments[G__28655__i + 0]; ++G__28655__i;}
  objs = new cljs.core.IndexedSeq(G__28655__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__28656){
var objs = cljs.core.seq(arglist__28656);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28657__i = 0, G__28657__a = new Array(arguments.length -  0);
while (G__28657__i < G__28657__a.length) {G__28657__a[G__28657__i] = arguments[G__28657__i + 0]; ++G__28657__i;}
  objs = new cljs.core.IndexedSeq(G__28657__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__28658){
var objs = cljs.core.seq(arglist__28658);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28659__i = 0, G__28659__a = new Array(arguments.length -  0);
while (G__28659__i < G__28659__a.length) {G__28659__a[G__28659__i] = arguments[G__28659__i + 0]; ++G__28659__i;}
  objs = new cljs.core.IndexedSeq(G__28659__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__28660){
var objs = cljs.core.seq(arglist__28660);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28661__i = 0, G__28661__a = new Array(arguments.length -  0);
while (G__28661__i < G__28661__a.length) {G__28661__a[G__28661__i] = arguments[G__28661__i + 0]; ++G__28661__i;}
  objs = new cljs.core.IndexedSeq(G__28661__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__28662){
var objs = cljs.core.seq(arglist__28662);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28663__i = 0, G__28663__a = new Array(arguments.length -  0);
while (G__28663__i < G__28663__a.length) {G__28663__a[G__28663__i] = arguments[G__28663__i + 0]; ++G__28663__i;}
  objs = new cljs.core.IndexedSeq(G__28663__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__28664){
var objs = cljs.core.seq(arglist__28664);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__28671_28677 = cljs.core.key(e);
var G__28672_28678 = w;
var G__28673_28679 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28671_28677,G__28672_28678,G__28673_28679) : print_one.call(null,G__28671_28677,G__28672_28678,G__28673_28679));

cljs.core._write(w," ");

var G__28674 = cljs.core.val(e);
var G__28675 = w;
var G__28676 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28674,G__28675,G__28676) : print_one.call(null,G__28674,G__28675,G__28676));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__28680__i = 0, G__28680__a = new Array(arguments.length -  2);
while (G__28680__i < G__28680__a.length) {G__28680__a[G__28680__i] = arguments[G__28680__i + 2]; ++G__28680__i;}
  args = new cljs.core.IndexedSeq(G__28680__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__28681){
var iref = cljs.core.first(arglist__28681);
arglist__28681 = cljs.core.next(arglist__28681);
var f = cljs.core.first(arglist__28681);
var args = cljs.core.rest(arglist__28681);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__28684 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28684) : cljs.core.atom.call(null,G__28684));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__28686 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28686) : cljs.core.deref.call(null,G__28686));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__28687_SHARP_,p2__28688_SHARP_){
var ret = (function (){var G__28691 = p1__28687_SHARP_;
var G__28692 = p2__28688_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28691,G__28692) : rf.call(null,G__28691,G__28692));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__28695 = null;
var G__28695__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28695__1 = (function (result){
var G__28694 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28694) : rf.call(null,G__28694));
});
var G__28695__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__28695 = function(result,input){
switch(arguments.length){
case 0:
return G__28695__0.call(this);
case 1:
return G__28695__1.call(this,result);
case 2:
return G__28695__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28695.cljs$core$IFn$_invoke$arity$0 = G__28695__0;
G__28695.cljs$core$IFn$_invoke$arity$1 = G__28695__1;
G__28695.cljs$core$IFn$_invoke$arity$2 = G__28695__2;
return G__28695;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__28704 = null;
var G__28704__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28704__1 = (function (result){
var G__28700 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28700) : rf.call(null,G__28700));
});
var G__28704__2 = (function (result,input){
var prior = (function (){var G__28701 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28701) : cljs.core.deref.call(null,G__28701));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__28702 = result;
var G__28703 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28702,G__28703) : rf.call(null,G__28702,G__28703));
}
});
G__28704 = function(result,input){
switch(arguments.length){
case 0:
return G__28704__0.call(this);
case 1:
return G__28704__1.call(this,result);
case 2:
return G__28704__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28704.cljs$core$IFn$_invoke$arity$0 = G__28704__0;
G__28704.cljs$core$IFn$_invoke$arity$1 = G__28704__1;
G__28704.cljs$core$IFn$_invoke$arity$2 = G__28704__2;
return G__28704;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28706_SHARP_,p2__28705_SHARP_){
var G__28708 = p2__28705_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__28708) : proc.call(null,G__28708));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj28710 = {};
return obj28710;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._clj__GT_js[(function (){var G__28714 = x__16789__auto__;
return goog.typeOf(G__28714);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._key__GT_js[(function (){var G__28718 = x__16789__auto__;
return goog.typeOf(G__28718);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__28721 = k;
if(G__28721){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__28721.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28721.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28721);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28721);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__28722 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__28722) : cljs.core.clj__GT_js.call(null,G__28722));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__28738 = x;
if(G__28738){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__28738.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28738.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28738);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28738);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj28740 = {};
return obj28740;
})();
var seq__28741_28751 = cljs.core.seq(x);
var chunk__28742_28752 = null;
var count__28743_28753 = (0);
var i__28744_28754 = (0);
while(true){
if((i__28744_28754 < count__28743_28753)){
var vec__28745_28755 = chunk__28742_28752.cljs$core$IIndexed$_nth$arity$2(null,i__28744_28754);
var k_28756 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28745_28755,(0),null);
var v_28757 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28745_28755,(1),null);
(m[cljs.core.key__GT_js(k_28756)] = clj__GT_js(v_28757));

var G__28758 = seq__28741_28751;
var G__28759 = chunk__28742_28752;
var G__28760 = count__28743_28753;
var G__28761 = (i__28744_28754 + (1));
seq__28741_28751 = G__28758;
chunk__28742_28752 = G__28759;
count__28743_28753 = G__28760;
i__28744_28754 = G__28761;
continue;
} else {
var temp__4126__auto___28762 = cljs.core.seq(seq__28741_28751);
if(temp__4126__auto___28762){
var seq__28741_28763__$1 = temp__4126__auto___28762;
if(cljs.core.chunked_seq_QMARK_(seq__28741_28763__$1)){
var c__16932__auto___28764 = cljs.core.chunk_first(seq__28741_28763__$1);
var G__28765 = cljs.core.chunk_rest(seq__28741_28763__$1);
var G__28766 = c__16932__auto___28764;
var G__28767 = cljs.core.count(c__16932__auto___28764);
var G__28768 = (0);
seq__28741_28751 = G__28765;
chunk__28742_28752 = G__28766;
count__28743_28753 = G__28767;
i__28744_28754 = G__28768;
continue;
} else {
var vec__28746_28769 = cljs.core.first(seq__28741_28763__$1);
var k_28770 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28746_28769,(0),null);
var v_28771 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28746_28769,(1),null);
(m[cljs.core.key__GT_js(k_28770)] = clj__GT_js(v_28771));

var G__28772 = cljs.core.next(seq__28741_28763__$1);
var G__28773 = null;
var G__28774 = (0);
var G__28775 = (0);
seq__28741_28751 = G__28772;
chunk__28742_28752 = G__28773;
count__28743_28753 = G__28774;
i__28744_28754 = G__28775;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__28747_28776 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__28748_28777 = null;
var count__28749_28778 = (0);
var i__28750_28779 = (0);
while(true){
if((i__28750_28779 < count__28749_28778)){
var x_28780__$1 = chunk__28748_28777.cljs$core$IIndexed$_nth$arity$2(null,i__28750_28779);
arr.push(x_28780__$1);

var G__28781 = seq__28747_28776;
var G__28782 = chunk__28748_28777;
var G__28783 = count__28749_28778;
var G__28784 = (i__28750_28779 + (1));
seq__28747_28776 = G__28781;
chunk__28748_28777 = G__28782;
count__28749_28778 = G__28783;
i__28750_28779 = G__28784;
continue;
} else {
var temp__4126__auto___28785 = cljs.core.seq(seq__28747_28776);
if(temp__4126__auto___28785){
var seq__28747_28786__$1 = temp__4126__auto___28785;
if(cljs.core.chunked_seq_QMARK_(seq__28747_28786__$1)){
var c__16932__auto___28787 = cljs.core.chunk_first(seq__28747_28786__$1);
var G__28788 = cljs.core.chunk_rest(seq__28747_28786__$1);
var G__28789 = c__16932__auto___28787;
var G__28790 = cljs.core.count(c__16932__auto___28787);
var G__28791 = (0);
seq__28747_28776 = G__28788;
chunk__28748_28777 = G__28789;
count__28749_28778 = G__28790;
i__28750_28779 = G__28791;
continue;
} else {
var x_28792__$1 = cljs.core.first(seq__28747_28786__$1);
arr.push(x_28792__$1);

var G__28793 = cljs.core.next(seq__28747_28786__$1);
var G__28794 = null;
var G__28795 = (0);
var G__28796 = (0);
seq__28747_28776 = G__28793;
chunk__28748_28777 = G__28794;
count__28749_28778 = G__28795;
i__28750_28779 = G__28796;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj28798 = {};
return obj28798;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._js__GT_clj[(function (){var G__28802 = x__16789__auto__;
return goog.typeOf(G__28802);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__28859__delegate = function (x,opts){
var map__28832 = opts;
var map__28832__$1 = ((cljs.core.seq_QMARK_(map__28832))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28832):map__28832);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28832__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__28832,map__28832__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__28848 = x__$1;
if(G__28848){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__28848.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__28848.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28848);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28848);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16901__auto__ = ((function (map__28832,map__28832__$1,keywordize_keys,keyfn){
return (function iter__28849(s__28850){
return (new cljs.core.LazySeq(null,((function (map__28832,map__28832__$1,keywordize_keys,keyfn){
return (function (){
var s__28850__$1 = s__28850;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__28850__$1);
if(temp__4126__auto__){
var s__28850__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__28850__$2)){
var c__16899__auto__ = cljs.core.chunk_first(s__28850__$2);
var size__16900__auto__ = cljs.core.count(c__16899__auto__);
var b__28852 = cljs.core.chunk_buffer(size__16900__auto__);
if((function (){var i__28851 = (0);
while(true){
if((i__28851 < size__16900__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16899__auto__,i__28851);
cljs.core.chunk_append(b__28852,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28857 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28857) : keyfn.call(null,G__28857));
})(),thisfn((x__$1[k]))], null));

var G__28860 = (i__28851 + (1));
i__28851 = G__28860;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__28852),iter__28849(cljs.core.chunk_rest(s__28850__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__28852),null);
}
} else {
var k = cljs.core.first(s__28850__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28858 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28858) : keyfn.call(null,G__28858));
})(),thisfn((x__$1[k]))], null),iter__28849(cljs.core.rest(s__28850__$2)));
}
} else {
return null;
}
break;
}
});})(map__28832,map__28832__$1,keywordize_keys,keyfn))
,null,null));
});})(map__28832,map__28832__$1,keywordize_keys,keyfn))
;
return iter__16901__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__28832,map__28832__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__28859 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__28861__i = 0, G__28861__a = new Array(arguments.length -  1);
while (G__28861__i < G__28861__a.length) {G__28861__a[G__28861__i] = arguments[G__28861__i + 1]; ++G__28861__i;}
  opts = new cljs.core.IndexedSeq(G__28861__a,0);
} 
return G__28859__delegate.call(this,x,opts);};
G__28859.cljs$lang$maxFixedArity = 1;
G__28859.cljs$lang$applyTo = (function (arglist__28862){
var x = cljs.core.first(arglist__28862);
var opts = cljs.core.rest(arglist__28862);
return G__28859__delegate(x,opts);
});
G__28859.cljs$core$IFn$_invoke$arity$variadic = G__28859__delegate;
return G__28859;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__28863 = null;
if (arguments.length > 1) {
var G__28864__i = 0, G__28864__a = new Array(arguments.length -  1);
while (G__28864__i < G__28864__a.length) {G__28864__a[G__28864__i] = arguments[G__28864__i + 1]; ++G__28864__i;}
G__28863 = new cljs.core.IndexedSeq(G__28864__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__28867 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28867) : cljs.core.atom.call(null,G__28867));
})();
return ((function (mem){
return (function() { 
var G__28869__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__28868 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28868) : cljs.core.deref.call(null,G__28868));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__28869 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28870__i = 0, G__28870__a = new Array(arguments.length -  0);
while (G__28870__i < G__28870__a.length) {G__28870__a[G__28870__i] = arguments[G__28870__i + 0]; ++G__28870__i;}
  args = new cljs.core.IndexedSeq(G__28870__a,0);
} 
return G__28869__delegate.call(this,args);};
G__28869.cljs$lang$maxFixedArity = 0;
G__28869.cljs$lang$applyTo = (function (arglist__28871){
var args = cljs.core.seq(arglist__28871);
return G__28869__delegate(args);
});
G__28869.cljs$core$IFn$_invoke$arity$variadic = G__28869__delegate;
return G__28869;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__28873 = ret;
f = G__28873;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__28874__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__28874 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28875__i = 0, G__28875__a = new Array(arguments.length -  1);
while (G__28875__i < G__28875__a.length) {G__28875__a[G__28875__i] = arguments[G__28875__i + 1]; ++G__28875__i;}
  args = new cljs.core.IndexedSeq(G__28875__a,0);
} 
return G__28874__delegate.call(this,f,args);};
G__28874.cljs$lang$maxFixedArity = 1;
G__28874.cljs$lang$applyTo = (function (arglist__28876){
var f = cljs.core.first(arglist__28876);
var args = cljs.core.rest(arglist__28876);
return G__28874__delegate(f,args);
});
G__28874.cljs$core$IFn$_invoke$arity$variadic = G__28874__delegate;
return G__28874;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__28877 = null;
if (arguments.length > 1) {
var G__28878__i = 0, G__28878__a = new Array(arguments.length -  1);
while (G__28878__i < G__28878__a.length) {G__28878__a[G__28878__i] = arguments[G__28878__i + 1]; ++G__28878__i;}
G__28877 = new cljs.core.IndexedSeq(G__28878__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__28881 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28881) : Math.floor.call(null,G__28881));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__28883 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28883) : f.call(null,G__28883));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__28885 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28885) : cljs.core.atom.call(null,G__28885));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28886__i = 0, G__28886__a = new Array(arguments.length -  1);
while (G__28886__i < G__28886__a.length) {G__28886__a[G__28886__i] = arguments[G__28886__i + 1]; ++G__28886__i;}
  args = new cljs.core.IndexedSeq(G__28886__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__28887){
var f = cljs.core.first(arglist__28887);
var args = cljs.core.rest(arglist__28887);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28952 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28952) : cljs.core.deref.call(null,G__28952));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__16145__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
var and__16133__auto__ = cljs.core.vector_QMARK_(parent);
if(and__16133__auto__){
var and__16133__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__16133__auto____$1){
var and__16133__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__16133__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28977 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28975 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28975) : child.call(null,G__28975));
})(),(function (){var G__28976 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28976) : parent.call(null,G__28976));
})());
var G__28978 = (i + (1));
ret = G__28977;
i = G__28978;
continue;
}
break;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28982 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28982) : cljs.core.deref.call(null,G__28982));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28986 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28986) : cljs.core.deref.call(null,G__28986));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28990 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28990) : cljs.core.deref.call(null,G__28990));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28999 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28999) : targets.call(null,G__28999));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__29000 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__29000) : sources.call(null,G__29000));
})()));
});})(tp,td,ta))
;
var or__16145__auto__ = ((cljs.core.contains_QMARK_((function (){var G__29004 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__29004) : tp.call(null,G__29004));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__29005 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29005) : ta.call(null,G__29005));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__29006 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29006) : ta.call(null,G__29006));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__29013 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29013) : parentMap.call(null,G__29013));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__29014 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29014) : parentMap.call(null,G__29014));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__29007_SHARP_){
return cljs.core.cons(cljs.core.first(p1__29007_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__29007_SHARP_),cljs.core.second(p1__29007_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__29015 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29015) : parentMap.call(null,G__29015));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__29008_SHARP_,p2__29009_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__29008_SHARP_,p2__29009_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__29018 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29018) : cljs.core.deref.call(null,G__29018));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__29019 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29019) : cljs.core.deref.call(null,G__29019));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__29035 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29035) : cljs.core.deref.call(null,G__29035));
})().call(null,x);
var or__16145__auto__ = (cljs.core.truth_((function (){var and__16133__auto__ = xprefs;
if(cljs.core.truth_(and__16133__auto__)){
var G__29037 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__29037) : xprefs.call(null,G__29037));
} else {
return and__16133__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__29038 = cljs.core.rest(ps);
ps = G__29038;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__29039 = cljs.core.rest(ps);
ps = G__29039;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__16145__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__29053){
var vec__29054 = p__29053;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29054,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29054,(1),null);
var e = vec__29054;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29055 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29055) : cljs.core.deref.call(null,G__29055));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__16145__auto__ = (be == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__29056 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29056) : cljs.core.deref.call(null,G__29056));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29057 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29057) : cljs.core.deref.call(null,G__29057));
})(),(function (){var G__29058 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29058) : cljs.core.deref.call(null,G__29058));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj29060 = {};
return obj29060;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._reset[(function (){var G__29064 = x__16789__auto__;
return goog.typeOf(G__29064);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._add_method[(function (){var G__29068 = x__16789__auto__;
return goog.typeOf(G__29068);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._remove_method[(function (){var G__29072 = x__16789__auto__;
return goog.typeOf(G__29072);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefer_method[(function (){var G__29076 = x__16789__auto__;
return goog.typeOf(G__29076);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._get_method[(function (){var G__29080 = x__16789__auto__;
return goog.typeOf(G__29080);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._get_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._methods[(function (){var G__29084 = x__16789__auto__;
return goog.typeOf(G__29084);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._methods["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefers[(function (){var G__29088 = x__16789__auto__;
return goog.typeOf(G__29088);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefers["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29090 = this$__$1;
return goog.getUid(G__29090);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29091 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29091) : cljs.core.deref.call(null,G__29091));
})(),(function (){var G__29092 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29092) : cljs.core.deref.call(null,G__29092));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__29093 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29093) : cljs.core.deref.call(null,G__29093));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__29094 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29094) : cljs.core.deref.call(null,G__29094));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29095 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29095) : cljs.core.deref.call(null,G__29095));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29096 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29096) : cljs.core.deref.call(null,G__29096));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__29937 = null;
var G__29937__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__29937__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29097 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29097) : self__.dispatch_fn.call(null,G__29097));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29098 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29098) : target_fn.call(null,G__29098));
});
var G__29937__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29099 = a;
var G__29100 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29099,G__29100) : self__.dispatch_fn.call(null,G__29099,G__29100));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29101 = a;
var G__29102 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29101,G__29102) : target_fn.call(null,G__29101,G__29102));
});
var G__29937__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29103 = a;
var G__29104 = b;
var G__29105 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29103,G__29104,G__29105) : self__.dispatch_fn.call(null,G__29103,G__29104,G__29105));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29106 = a;
var G__29107 = b;
var G__29108 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29106,G__29107,G__29108) : target_fn.call(null,G__29106,G__29107,G__29108));
});
var G__29937__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29109 = a;
var G__29110 = b;
var G__29111 = c;
var G__29112 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29109,G__29110,G__29111,G__29112) : self__.dispatch_fn.call(null,G__29109,G__29110,G__29111,G__29112));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29113 = a;
var G__29114 = b;
var G__29115 = c;
var G__29116 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29113,G__29114,G__29115,G__29116) : target_fn.call(null,G__29113,G__29114,G__29115,G__29116));
});
var G__29937__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29117 = a;
var G__29118 = b;
var G__29119 = c;
var G__29120 = d;
var G__29121 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29117,G__29118,G__29119,G__29120,G__29121) : self__.dispatch_fn.call(null,G__29117,G__29118,G__29119,G__29120,G__29121));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29122 = a;
var G__29123 = b;
var G__29124 = c;
var G__29125 = d;
var G__29126 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29122,G__29123,G__29124,G__29125,G__29126) : target_fn.call(null,G__29122,G__29123,G__29124,G__29125,G__29126));
});
var G__29937__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29127 = a;
var G__29128 = b;
var G__29129 = c;
var G__29130 = d;
var G__29131 = e;
var G__29132 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29127,G__29128,G__29129,G__29130,G__29131,G__29132) : self__.dispatch_fn.call(null,G__29127,G__29128,G__29129,G__29130,G__29131,G__29132));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29133 = a;
var G__29134 = b;
var G__29135 = c;
var G__29136 = d;
var G__29137 = e;
var G__29138 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29133,G__29134,G__29135,G__29136,G__29137,G__29138) : target_fn.call(null,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138));
});
var G__29937__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29139 = a;
var G__29140 = b;
var G__29141 = c;
var G__29142 = d;
var G__29143 = e;
var G__29144 = f;
var G__29145 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29139,G__29140,G__29141,G__29142,G__29143,G__29144,G__29145) : self__.dispatch_fn.call(null,G__29139,G__29140,G__29141,G__29142,G__29143,G__29144,G__29145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29146 = a;
var G__29147 = b;
var G__29148 = c;
var G__29149 = d;
var G__29150 = e;
var G__29151 = f;
var G__29152 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29146,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152) : target_fn.call(null,G__29146,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152));
});
var G__29937__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29153 = a;
var G__29154 = b;
var G__29155 = c;
var G__29156 = d;
var G__29157 = e;
var G__29158 = f;
var G__29159 = g;
var G__29160 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29153,G__29154,G__29155,G__29156,G__29157,G__29158,G__29159,G__29160) : self__.dispatch_fn.call(null,G__29153,G__29154,G__29155,G__29156,G__29157,G__29158,G__29159,G__29160));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29161 = a;
var G__29162 = b;
var G__29163 = c;
var G__29164 = d;
var G__29165 = e;
var G__29166 = f;
var G__29167 = g;
var G__29168 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29161,G__29162,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168) : target_fn.call(null,G__29161,G__29162,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168));
});
var G__29937__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29169 = a;
var G__29170 = b;
var G__29171 = c;
var G__29172 = d;
var G__29173 = e;
var G__29174 = f;
var G__29175 = g;
var G__29176 = h;
var G__29177 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29169,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177) : self__.dispatch_fn.call(null,G__29169,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29178 = a;
var G__29179 = b;
var G__29180 = c;
var G__29181 = d;
var G__29182 = e;
var G__29183 = f;
var G__29184 = g;
var G__29185 = h;
var G__29186 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29178,G__29179,G__29180,G__29181,G__29182,G__29183,G__29184,G__29185,G__29186) : target_fn.call(null,G__29178,G__29179,G__29180,G__29181,G__29182,G__29183,G__29184,G__29185,G__29186));
});
var G__29937__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29187 = a;
var G__29188 = b;
var G__29189 = c;
var G__29190 = d;
var G__29191 = e;
var G__29192 = f;
var G__29193 = g;
var G__29194 = h;
var G__29195 = i;
var G__29196 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29187,G__29188,G__29189,G__29190,G__29191,G__29192,G__29193,G__29194,G__29195,G__29196) : self__.dispatch_fn.call(null,G__29187,G__29188,G__29189,G__29190,G__29191,G__29192,G__29193,G__29194,G__29195,G__29196));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29197 = a;
var G__29198 = b;
var G__29199 = c;
var G__29200 = d;
var G__29201 = e;
var G__29202 = f;
var G__29203 = g;
var G__29204 = h;
var G__29205 = i;
var G__29206 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29197,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206) : target_fn.call(null,G__29197,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206));
});
var G__29937__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29207 = a;
var G__29208 = b;
var G__29209 = c;
var G__29210 = d;
var G__29211 = e;
var G__29212 = f;
var G__29213 = g;
var G__29214 = h;
var G__29215 = i;
var G__29216 = j;
var G__29217 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29207,G__29208,G__29209,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217) : self__.dispatch_fn.call(null,G__29207,G__29208,G__29209,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29218 = a;
var G__29219 = b;
var G__29220 = c;
var G__29221 = d;
var G__29222 = e;
var G__29223 = f;
var G__29224 = g;
var G__29225 = h;
var G__29226 = i;
var G__29227 = j;
var G__29228 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29218,G__29219,G__29220,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228) : target_fn.call(null,G__29218,G__29219,G__29220,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228));
});
var G__29937__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29229 = a;
var G__29230 = b;
var G__29231 = c;
var G__29232 = d;
var G__29233 = e;
var G__29234 = f;
var G__29235 = g;
var G__29236 = h;
var G__29237 = i;
var G__29238 = j;
var G__29239 = k;
var G__29240 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29229,G__29230,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240) : self__.dispatch_fn.call(null,G__29229,G__29230,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29241 = a;
var G__29242 = b;
var G__29243 = c;
var G__29244 = d;
var G__29245 = e;
var G__29246 = f;
var G__29247 = g;
var G__29248 = h;
var G__29249 = i;
var G__29250 = j;
var G__29251 = k;
var G__29252 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29241,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251,G__29252) : target_fn.call(null,G__29241,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251,G__29252));
});
var G__29937__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29253 = a;
var G__29254 = b;
var G__29255 = c;
var G__29256 = d;
var G__29257 = e;
var G__29258 = f;
var G__29259 = g;
var G__29260 = h;
var G__29261 = i;
var G__29262 = j;
var G__29263 = k;
var G__29264 = l;
var G__29265 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262,G__29263,G__29264,G__29265) : self__.dispatch_fn.call(null,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262,G__29263,G__29264,G__29265));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29266 = a;
var G__29267 = b;
var G__29268 = c;
var G__29269 = d;
var G__29270 = e;
var G__29271 = f;
var G__29272 = g;
var G__29273 = h;
var G__29274 = i;
var G__29275 = j;
var G__29276 = k;
var G__29277 = l;
var G__29278 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277,G__29278) : target_fn.call(null,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277,G__29278));
});
var G__29937__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29279 = a;
var G__29280 = b;
var G__29281 = c;
var G__29282 = d;
var G__29283 = e;
var G__29284 = f;
var G__29285 = g;
var G__29286 = h;
var G__29287 = i;
var G__29288 = j;
var G__29289 = k;
var G__29290 = l;
var G__29291 = m;
var G__29292 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292) : self__.dispatch_fn.call(null,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29293 = a;
var G__29294 = b;
var G__29295 = c;
var G__29296 = d;
var G__29297 = e;
var G__29298 = f;
var G__29299 = g;
var G__29300 = h;
var G__29301 = i;
var G__29302 = j;
var G__29303 = k;
var G__29304 = l;
var G__29305 = m;
var G__29306 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306) : target_fn.call(null,G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306));
});
var G__29937__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29307 = a;
var G__29308 = b;
var G__29309 = c;
var G__29310 = d;
var G__29311 = e;
var G__29312 = f;
var G__29313 = g;
var G__29314 = h;
var G__29315 = i;
var G__29316 = j;
var G__29317 = k;
var G__29318 = l;
var G__29319 = m;
var G__29320 = n;
var G__29321 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29307,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321) : self__.dispatch_fn.call(null,G__29307,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29322 = a;
var G__29323 = b;
var G__29324 = c;
var G__29325 = d;
var G__29326 = e;
var G__29327 = f;
var G__29328 = g;
var G__29329 = h;
var G__29330 = i;
var G__29331 = j;
var G__29332 = k;
var G__29333 = l;
var G__29334 = m;
var G__29335 = n;
var G__29336 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29322,G__29323,G__29324,G__29325,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336) : target_fn.call(null,G__29322,G__29323,G__29324,G__29325,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336));
});
var G__29937__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29337 = a;
var G__29338 = b;
var G__29339 = c;
var G__29340 = d;
var G__29341 = e;
var G__29342 = f;
var G__29343 = g;
var G__29344 = h;
var G__29345 = i;
var G__29346 = j;
var G__29347 = k;
var G__29348 = l;
var G__29349 = m;
var G__29350 = n;
var G__29351 = o;
var G__29352 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29337,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343,G__29344,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351,G__29352) : self__.dispatch_fn.call(null,G__29337,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343,G__29344,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351,G__29352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29353 = a;
var G__29354 = b;
var G__29355 = c;
var G__29356 = d;
var G__29357 = e;
var G__29358 = f;
var G__29359 = g;
var G__29360 = h;
var G__29361 = i;
var G__29362 = j;
var G__29363 = k;
var G__29364 = l;
var G__29365 = m;
var G__29366 = n;
var G__29367 = o;
var G__29368 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362,G__29363,G__29364,G__29365,G__29366,G__29367,G__29368) : target_fn.call(null,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362,G__29363,G__29364,G__29365,G__29366,G__29367,G__29368));
});
var G__29937__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29369 = a;
var G__29370 = b;
var G__29371 = c;
var G__29372 = d;
var G__29373 = e;
var G__29374 = f;
var G__29375 = g;
var G__29376 = h;
var G__29377 = i;
var G__29378 = j;
var G__29379 = k;
var G__29380 = l;
var G__29381 = m;
var G__29382 = n;
var G__29383 = o;
var G__29384 = p;
var G__29385 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29369,G__29370,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379,G__29380,G__29381,G__29382,G__29383,G__29384,G__29385) : self__.dispatch_fn.call(null,G__29369,G__29370,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379,G__29380,G__29381,G__29382,G__29383,G__29384,G__29385));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29386 = a;
var G__29387 = b;
var G__29388 = c;
var G__29389 = d;
var G__29390 = e;
var G__29391 = f;
var G__29392 = g;
var G__29393 = h;
var G__29394 = i;
var G__29395 = j;
var G__29396 = k;
var G__29397 = l;
var G__29398 = m;
var G__29399 = n;
var G__29400 = o;
var G__29401 = p;
var G__29402 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29386,G__29387,G__29388,G__29389,G__29390,G__29391,G__29392,G__29393,G__29394,G__29395,G__29396,G__29397,G__29398,G__29399,G__29400,G__29401,G__29402) : target_fn.call(null,G__29386,G__29387,G__29388,G__29389,G__29390,G__29391,G__29392,G__29393,G__29394,G__29395,G__29396,G__29397,G__29398,G__29399,G__29400,G__29401,G__29402));
});
var G__29937__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29403 = a;
var G__29404 = b;
var G__29405 = c;
var G__29406 = d;
var G__29407 = e;
var G__29408 = f;
var G__29409 = g;
var G__29410 = h;
var G__29411 = i;
var G__29412 = j;
var G__29413 = k;
var G__29414 = l;
var G__29415 = m;
var G__29416 = n;
var G__29417 = o;
var G__29418 = p;
var G__29419 = q;
var G__29420 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29403,G__29404,G__29405,G__29406,G__29407,G__29408,G__29409,G__29410,G__29411,G__29412,G__29413,G__29414,G__29415,G__29416,G__29417,G__29418,G__29419,G__29420) : self__.dispatch_fn.call(null,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408,G__29409,G__29410,G__29411,G__29412,G__29413,G__29414,G__29415,G__29416,G__29417,G__29418,G__29419,G__29420));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29421 = a;
var G__29422 = b;
var G__29423 = c;
var G__29424 = d;
var G__29425 = e;
var G__29426 = f;
var G__29427 = g;
var G__29428 = h;
var G__29429 = i;
var G__29430 = j;
var G__29431 = k;
var G__29432 = l;
var G__29433 = m;
var G__29434 = n;
var G__29435 = o;
var G__29436 = p;
var G__29437 = q;
var G__29438 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427,G__29428,G__29429,G__29430,G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437,G__29438) : target_fn.call(null,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427,G__29428,G__29429,G__29430,G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437,G__29438));
});
var G__29937__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29439 = a;
var G__29440 = b;
var G__29441 = c;
var G__29442 = d;
var G__29443 = e;
var G__29444 = f;
var G__29445 = g;
var G__29446 = h;
var G__29447 = i;
var G__29448 = j;
var G__29449 = k;
var G__29450 = l;
var G__29451 = m;
var G__29452 = n;
var G__29453 = o;
var G__29454 = p;
var G__29455 = q;
var G__29456 = r;
var G__29457 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29439,G__29440,G__29441,G__29442,G__29443,G__29444,G__29445,G__29446,G__29447,G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454,G__29455,G__29456,G__29457) : self__.dispatch_fn.call(null,G__29439,G__29440,G__29441,G__29442,G__29443,G__29444,G__29445,G__29446,G__29447,G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454,G__29455,G__29456,G__29457));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29458 = a;
var G__29459 = b;
var G__29460 = c;
var G__29461 = d;
var G__29462 = e;
var G__29463 = f;
var G__29464 = g;
var G__29465 = h;
var G__29466 = i;
var G__29467 = j;
var G__29468 = k;
var G__29469 = l;
var G__29470 = m;
var G__29471 = n;
var G__29472 = o;
var G__29473 = p;
var G__29474 = q;
var G__29475 = r;
var G__29476 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29458,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465,G__29466,G__29467,G__29468,G__29469,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476) : target_fn.call(null,G__29458,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465,G__29466,G__29467,G__29468,G__29469,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476));
});
var G__29937__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29477 = a;
var G__29478 = b;
var G__29479 = c;
var G__29480 = d;
var G__29481 = e;
var G__29482 = f;
var G__29483 = g;
var G__29484 = h;
var G__29485 = i;
var G__29486 = j;
var G__29487 = k;
var G__29488 = l;
var G__29489 = m;
var G__29490 = n;
var G__29491 = o;
var G__29492 = p;
var G__29493 = q;
var G__29494 = r;
var G__29495 = s;
var G__29496 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29477,G__29478,G__29479,G__29480,G__29481,G__29482,G__29483,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493,G__29494,G__29495,G__29496) : self__.dispatch_fn.call(null,G__29477,G__29478,G__29479,G__29480,G__29481,G__29482,G__29483,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493,G__29494,G__29495,G__29496));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29497 = a;
var G__29498 = b;
var G__29499 = c;
var G__29500 = d;
var G__29501 = e;
var G__29502 = f;
var G__29503 = g;
var G__29504 = h;
var G__29505 = i;
var G__29506 = j;
var G__29507 = k;
var G__29508 = l;
var G__29509 = m;
var G__29510 = n;
var G__29511 = o;
var G__29512 = p;
var G__29513 = q;
var G__29514 = r;
var G__29515 = s;
var G__29516 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29497,G__29498,G__29499,G__29500,G__29501,G__29502,G__29503,G__29504,G__29505,G__29506,G__29507,G__29508,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516) : target_fn.call(null,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502,G__29503,G__29504,G__29505,G__29506,G__29507,G__29508,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516));
});
var G__29937__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__29937 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29937__1.call(this,self__);
case 2:
return G__29937__2.call(this,self__,a);
case 3:
return G__29937__3.call(this,self__,a,b);
case 4:
return G__29937__4.call(this,self__,a,b,c);
case 5:
return G__29937__5.call(this,self__,a,b,c,d);
case 6:
return G__29937__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29937__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29937__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29937__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29937__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29937__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29937__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29937__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29937__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29937__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29937__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29937__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29937__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29937__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29937__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29937__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29937__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29937.cljs$core$IFn$_invoke$arity$1 = G__29937__1;
G__29937.cljs$core$IFn$_invoke$arity$2 = G__29937__2;
G__29937.cljs$core$IFn$_invoke$arity$3 = G__29937__3;
G__29937.cljs$core$IFn$_invoke$arity$4 = G__29937__4;
G__29937.cljs$core$IFn$_invoke$arity$5 = G__29937__5;
G__29937.cljs$core$IFn$_invoke$arity$6 = G__29937__6;
G__29937.cljs$core$IFn$_invoke$arity$7 = G__29937__7;
G__29937.cljs$core$IFn$_invoke$arity$8 = G__29937__8;
G__29937.cljs$core$IFn$_invoke$arity$9 = G__29937__9;
G__29937.cljs$core$IFn$_invoke$arity$10 = G__29937__10;
G__29937.cljs$core$IFn$_invoke$arity$11 = G__29937__11;
G__29937.cljs$core$IFn$_invoke$arity$12 = G__29937__12;
G__29937.cljs$core$IFn$_invoke$arity$13 = G__29937__13;
G__29937.cljs$core$IFn$_invoke$arity$14 = G__29937__14;
G__29937.cljs$core$IFn$_invoke$arity$15 = G__29937__15;
G__29937.cljs$core$IFn$_invoke$arity$16 = G__29937__16;
G__29937.cljs$core$IFn$_invoke$arity$17 = G__29937__17;
G__29937.cljs$core$IFn$_invoke$arity$18 = G__29937__18;
G__29937.cljs$core$IFn$_invoke$arity$19 = G__29937__19;
G__29937.cljs$core$IFn$_invoke$arity$20 = G__29937__20;
G__29937.cljs$core$IFn$_invoke$arity$21 = G__29937__21;
G__29937.cljs$core$IFn$_invoke$arity$22 = G__29937__22;
return G__29937;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args29089){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29089)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29517 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29517) : self__.dispatch_fn.call(null,G__29517));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29518 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29518) : target_fn.call(null,G__29518));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29519 = a;
var G__29520 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29519,G__29520) : self__.dispatch_fn.call(null,G__29519,G__29520));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29521 = a;
var G__29522 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29521,G__29522) : target_fn.call(null,G__29521,G__29522));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29523 = a;
var G__29524 = b;
var G__29525 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29523,G__29524,G__29525) : self__.dispatch_fn.call(null,G__29523,G__29524,G__29525));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29526 = a;
var G__29527 = b;
var G__29528 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29526,G__29527,G__29528) : target_fn.call(null,G__29526,G__29527,G__29528));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29529 = a;
var G__29530 = b;
var G__29531 = c;
var G__29532 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29529,G__29530,G__29531,G__29532) : self__.dispatch_fn.call(null,G__29529,G__29530,G__29531,G__29532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29533 = a;
var G__29534 = b;
var G__29535 = c;
var G__29536 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29533,G__29534,G__29535,G__29536) : target_fn.call(null,G__29533,G__29534,G__29535,G__29536));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29537 = a;
var G__29538 = b;
var G__29539 = c;
var G__29540 = d;
var G__29541 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29537,G__29538,G__29539,G__29540,G__29541) : self__.dispatch_fn.call(null,G__29537,G__29538,G__29539,G__29540,G__29541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29542 = a;
var G__29543 = b;
var G__29544 = c;
var G__29545 = d;
var G__29546 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29542,G__29543,G__29544,G__29545,G__29546) : target_fn.call(null,G__29542,G__29543,G__29544,G__29545,G__29546));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29547 = a;
var G__29548 = b;
var G__29549 = c;
var G__29550 = d;
var G__29551 = e;
var G__29552 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29547,G__29548,G__29549,G__29550,G__29551,G__29552) : self__.dispatch_fn.call(null,G__29547,G__29548,G__29549,G__29550,G__29551,G__29552));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29553 = a;
var G__29554 = b;
var G__29555 = c;
var G__29556 = d;
var G__29557 = e;
var G__29558 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29553,G__29554,G__29555,G__29556,G__29557,G__29558) : target_fn.call(null,G__29553,G__29554,G__29555,G__29556,G__29557,G__29558));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29559 = a;
var G__29560 = b;
var G__29561 = c;
var G__29562 = d;
var G__29563 = e;
var G__29564 = f;
var G__29565 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29559,G__29560,G__29561,G__29562,G__29563,G__29564,G__29565) : self__.dispatch_fn.call(null,G__29559,G__29560,G__29561,G__29562,G__29563,G__29564,G__29565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29566 = a;
var G__29567 = b;
var G__29568 = c;
var G__29569 = d;
var G__29570 = e;
var G__29571 = f;
var G__29572 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29566,G__29567,G__29568,G__29569,G__29570,G__29571,G__29572) : target_fn.call(null,G__29566,G__29567,G__29568,G__29569,G__29570,G__29571,G__29572));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29573 = a;
var G__29574 = b;
var G__29575 = c;
var G__29576 = d;
var G__29577 = e;
var G__29578 = f;
var G__29579 = g;
var G__29580 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29573,G__29574,G__29575,G__29576,G__29577,G__29578,G__29579,G__29580) : self__.dispatch_fn.call(null,G__29573,G__29574,G__29575,G__29576,G__29577,G__29578,G__29579,G__29580));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29581 = a;
var G__29582 = b;
var G__29583 = c;
var G__29584 = d;
var G__29585 = e;
var G__29586 = f;
var G__29587 = g;
var G__29588 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587,G__29588) : target_fn.call(null,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587,G__29588));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29589 = a;
var G__29590 = b;
var G__29591 = c;
var G__29592 = d;
var G__29593 = e;
var G__29594 = f;
var G__29595 = g;
var G__29596 = h;
var G__29597 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597) : self__.dispatch_fn.call(null,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29598 = a;
var G__29599 = b;
var G__29600 = c;
var G__29601 = d;
var G__29602 = e;
var G__29603 = f;
var G__29604 = g;
var G__29605 = h;
var G__29606 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606) : target_fn.call(null,G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29607 = a;
var G__29608 = b;
var G__29609 = c;
var G__29610 = d;
var G__29611 = e;
var G__29612 = f;
var G__29613 = g;
var G__29614 = h;
var G__29615 = i;
var G__29616 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29607,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616) : self__.dispatch_fn.call(null,G__29607,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29617 = a;
var G__29618 = b;
var G__29619 = c;
var G__29620 = d;
var G__29621 = e;
var G__29622 = f;
var G__29623 = g;
var G__29624 = h;
var G__29625 = i;
var G__29626 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29617,G__29618,G__29619,G__29620,G__29621,G__29622,G__29623,G__29624,G__29625,G__29626) : target_fn.call(null,G__29617,G__29618,G__29619,G__29620,G__29621,G__29622,G__29623,G__29624,G__29625,G__29626));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29627 = a;
var G__29628 = b;
var G__29629 = c;
var G__29630 = d;
var G__29631 = e;
var G__29632 = f;
var G__29633 = g;
var G__29634 = h;
var G__29635 = i;
var G__29636 = j;
var G__29637 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29627,G__29628,G__29629,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637) : self__.dispatch_fn.call(null,G__29627,G__29628,G__29629,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29638 = a;
var G__29639 = b;
var G__29640 = c;
var G__29641 = d;
var G__29642 = e;
var G__29643 = f;
var G__29644 = g;
var G__29645 = h;
var G__29646 = i;
var G__29647 = j;
var G__29648 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29638,G__29639,G__29640,G__29641,G__29642,G__29643,G__29644,G__29645,G__29646,G__29647,G__29648) : target_fn.call(null,G__29638,G__29639,G__29640,G__29641,G__29642,G__29643,G__29644,G__29645,G__29646,G__29647,G__29648));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29649 = a;
var G__29650 = b;
var G__29651 = c;
var G__29652 = d;
var G__29653 = e;
var G__29654 = f;
var G__29655 = g;
var G__29656 = h;
var G__29657 = i;
var G__29658 = j;
var G__29659 = k;
var G__29660 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29649,G__29650,G__29651,G__29652,G__29653,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659,G__29660) : self__.dispatch_fn.call(null,G__29649,G__29650,G__29651,G__29652,G__29653,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659,G__29660));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29661 = a;
var G__29662 = b;
var G__29663 = c;
var G__29664 = d;
var G__29665 = e;
var G__29666 = f;
var G__29667 = g;
var G__29668 = h;
var G__29669 = i;
var G__29670 = j;
var G__29671 = k;
var G__29672 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29661,G__29662,G__29663,G__29664,G__29665,G__29666,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672) : target_fn.call(null,G__29661,G__29662,G__29663,G__29664,G__29665,G__29666,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29673 = a;
var G__29674 = b;
var G__29675 = c;
var G__29676 = d;
var G__29677 = e;
var G__29678 = f;
var G__29679 = g;
var G__29680 = h;
var G__29681 = i;
var G__29682 = j;
var G__29683 = k;
var G__29684 = l;
var G__29685 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29673,G__29674,G__29675,G__29676,G__29677,G__29678,G__29679,G__29680,G__29681,G__29682,G__29683,G__29684,G__29685) : self__.dispatch_fn.call(null,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678,G__29679,G__29680,G__29681,G__29682,G__29683,G__29684,G__29685));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29686 = a;
var G__29687 = b;
var G__29688 = c;
var G__29689 = d;
var G__29690 = e;
var G__29691 = f;
var G__29692 = g;
var G__29693 = h;
var G__29694 = i;
var G__29695 = j;
var G__29696 = k;
var G__29697 = l;
var G__29698 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693,G__29694,G__29695,G__29696,G__29697,G__29698) : target_fn.call(null,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693,G__29694,G__29695,G__29696,G__29697,G__29698));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29699 = a;
var G__29700 = b;
var G__29701 = c;
var G__29702 = d;
var G__29703 = e;
var G__29704 = f;
var G__29705 = g;
var G__29706 = h;
var G__29707 = i;
var G__29708 = j;
var G__29709 = k;
var G__29710 = l;
var G__29711 = m;
var G__29712 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707,G__29708,G__29709,G__29710,G__29711,G__29712) : self__.dispatch_fn.call(null,G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707,G__29708,G__29709,G__29710,G__29711,G__29712));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29713 = a;
var G__29714 = b;
var G__29715 = c;
var G__29716 = d;
var G__29717 = e;
var G__29718 = f;
var G__29719 = g;
var G__29720 = h;
var G__29721 = i;
var G__29722 = j;
var G__29723 = k;
var G__29724 = l;
var G__29725 = m;
var G__29726 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29713,G__29714,G__29715,G__29716,G__29717,G__29718,G__29719,G__29720,G__29721,G__29722,G__29723,G__29724,G__29725,G__29726) : target_fn.call(null,G__29713,G__29714,G__29715,G__29716,G__29717,G__29718,G__29719,G__29720,G__29721,G__29722,G__29723,G__29724,G__29725,G__29726));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29727 = a;
var G__29728 = b;
var G__29729 = c;
var G__29730 = d;
var G__29731 = e;
var G__29732 = f;
var G__29733 = g;
var G__29734 = h;
var G__29735 = i;
var G__29736 = j;
var G__29737 = k;
var G__29738 = l;
var G__29739 = m;
var G__29740 = n;
var G__29741 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29727,G__29728,G__29729,G__29730,G__29731,G__29732,G__29733,G__29734,G__29735,G__29736,G__29737,G__29738,G__29739,G__29740,G__29741) : self__.dispatch_fn.call(null,G__29727,G__29728,G__29729,G__29730,G__29731,G__29732,G__29733,G__29734,G__29735,G__29736,G__29737,G__29738,G__29739,G__29740,G__29741));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29742 = a;
var G__29743 = b;
var G__29744 = c;
var G__29745 = d;
var G__29746 = e;
var G__29747 = f;
var G__29748 = g;
var G__29749 = h;
var G__29750 = i;
var G__29751 = j;
var G__29752 = k;
var G__29753 = l;
var G__29754 = m;
var G__29755 = n;
var G__29756 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29742,G__29743,G__29744,G__29745,G__29746,G__29747,G__29748,G__29749,G__29750,G__29751,G__29752,G__29753,G__29754,G__29755,G__29756) : target_fn.call(null,G__29742,G__29743,G__29744,G__29745,G__29746,G__29747,G__29748,G__29749,G__29750,G__29751,G__29752,G__29753,G__29754,G__29755,G__29756));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29757 = a;
var G__29758 = b;
var G__29759 = c;
var G__29760 = d;
var G__29761 = e;
var G__29762 = f;
var G__29763 = g;
var G__29764 = h;
var G__29765 = i;
var G__29766 = j;
var G__29767 = k;
var G__29768 = l;
var G__29769 = m;
var G__29770 = n;
var G__29771 = o;
var G__29772 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29757,G__29758,G__29759,G__29760,G__29761,G__29762,G__29763,G__29764,G__29765,G__29766,G__29767,G__29768,G__29769,G__29770,G__29771,G__29772) : self__.dispatch_fn.call(null,G__29757,G__29758,G__29759,G__29760,G__29761,G__29762,G__29763,G__29764,G__29765,G__29766,G__29767,G__29768,G__29769,G__29770,G__29771,G__29772));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29773 = a;
var G__29774 = b;
var G__29775 = c;
var G__29776 = d;
var G__29777 = e;
var G__29778 = f;
var G__29779 = g;
var G__29780 = h;
var G__29781 = i;
var G__29782 = j;
var G__29783 = k;
var G__29784 = l;
var G__29785 = m;
var G__29786 = n;
var G__29787 = o;
var G__29788 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29773,G__29774,G__29775,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782,G__29783,G__29784,G__29785,G__29786,G__29787,G__29788) : target_fn.call(null,G__29773,G__29774,G__29775,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782,G__29783,G__29784,G__29785,G__29786,G__29787,G__29788));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29789 = a;
var G__29790 = b;
var G__29791 = c;
var G__29792 = d;
var G__29793 = e;
var G__29794 = f;
var G__29795 = g;
var G__29796 = h;
var G__29797 = i;
var G__29798 = j;
var G__29799 = k;
var G__29800 = l;
var G__29801 = m;
var G__29802 = n;
var G__29803 = o;
var G__29804 = p;
var G__29805 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29789,G__29790,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799,G__29800,G__29801,G__29802,G__29803,G__29804,G__29805) : self__.dispatch_fn.call(null,G__29789,G__29790,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799,G__29800,G__29801,G__29802,G__29803,G__29804,G__29805));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29806 = a;
var G__29807 = b;
var G__29808 = c;
var G__29809 = d;
var G__29810 = e;
var G__29811 = f;
var G__29812 = g;
var G__29813 = h;
var G__29814 = i;
var G__29815 = j;
var G__29816 = k;
var G__29817 = l;
var G__29818 = m;
var G__29819 = n;
var G__29820 = o;
var G__29821 = p;
var G__29822 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29806,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821,G__29822) : target_fn.call(null,G__29806,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821,G__29822));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29823 = a;
var G__29824 = b;
var G__29825 = c;
var G__29826 = d;
var G__29827 = e;
var G__29828 = f;
var G__29829 = g;
var G__29830 = h;
var G__29831 = i;
var G__29832 = j;
var G__29833 = k;
var G__29834 = l;
var G__29835 = m;
var G__29836 = n;
var G__29837 = o;
var G__29838 = p;
var G__29839 = q;
var G__29840 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29823,G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839,G__29840) : self__.dispatch_fn.call(null,G__29823,G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839,G__29840));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29841 = a;
var G__29842 = b;
var G__29843 = c;
var G__29844 = d;
var G__29845 = e;
var G__29846 = f;
var G__29847 = g;
var G__29848 = h;
var G__29849 = i;
var G__29850 = j;
var G__29851 = k;
var G__29852 = l;
var G__29853 = m;
var G__29854 = n;
var G__29855 = o;
var G__29856 = p;
var G__29857 = q;
var G__29858 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29841,G__29842,G__29843,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856,G__29857,G__29858) : target_fn.call(null,G__29841,G__29842,G__29843,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856,G__29857,G__29858));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29859 = a;
var G__29860 = b;
var G__29861 = c;
var G__29862 = d;
var G__29863 = e;
var G__29864 = f;
var G__29865 = g;
var G__29866 = h;
var G__29867 = i;
var G__29868 = j;
var G__29869 = k;
var G__29870 = l;
var G__29871 = m;
var G__29872 = n;
var G__29873 = o;
var G__29874 = p;
var G__29875 = q;
var G__29876 = r;
var G__29877 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877) : self__.dispatch_fn.call(null,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29878 = a;
var G__29879 = b;
var G__29880 = c;
var G__29881 = d;
var G__29882 = e;
var G__29883 = f;
var G__29884 = g;
var G__29885 = h;
var G__29886 = i;
var G__29887 = j;
var G__29888 = k;
var G__29889 = l;
var G__29890 = m;
var G__29891 = n;
var G__29892 = o;
var G__29893 = p;
var G__29894 = q;
var G__29895 = r;
var G__29896 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896) : target_fn.call(null,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29897 = a;
var G__29898 = b;
var G__29899 = c;
var G__29900 = d;
var G__29901 = e;
var G__29902 = f;
var G__29903 = g;
var G__29904 = h;
var G__29905 = i;
var G__29906 = j;
var G__29907 = k;
var G__29908 = l;
var G__29909 = m;
var G__29910 = n;
var G__29911 = o;
var G__29912 = p;
var G__29913 = q;
var G__29914 = r;
var G__29915 = s;
var G__29916 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29897,G__29898,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915,G__29916) : self__.dispatch_fn.call(null,G__29897,G__29898,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915,G__29916));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29917 = a;
var G__29918 = b;
var G__29919 = c;
var G__29920 = d;
var G__29921 = e;
var G__29922 = f;
var G__29923 = g;
var G__29924 = h;
var G__29925 = i;
var G__29926 = j;
var G__29927 = k;
var G__29928 = l;
var G__29929 = m;
var G__29930 = n;
var G__29931 = o;
var G__29932 = p;
var G__29933 = q;
var G__29934 = r;
var G__29935 = s;
var G__29936 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935,G__29936) : target_fn.call(null,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935,G__29936));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29938 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__29938);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__29943 = msg;
return Error(G__29943);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__29948 = x;
var G__29949 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29948,G__29949) : pred.call(null,G__29948,G__29949));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29950 = y;
var G__29951 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29950,G__29951) : pred.call(null,G__29950,G__29951));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1428568914444