// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__45202__delegate = function (args){
return console.log.apply(console,(function (){var G__45201 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__45201) : cljs.core.into_array.call(null,G__45201));
})());
};
var G__45202 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__45203__i = 0, G__45203__a = new Array(arguments.length -  0);
while (G__45203__i < G__45203__a.length) {G__45203__a[G__45203__i] = arguments[G__45203__i + 0]; ++G__45203__i;}
  args = new cljs.core.IndexedSeq(G__45203__a,0);
} 
return G__45202__delegate.call(this,args);};
G__45202.cljs$lang$maxFixedArity = 0;
G__45202.cljs$lang$applyTo = (function (arglist__45204){
var args = cljs.core.seq(arglist__45204);
return G__45202__delegate(args);
});
G__45202.cljs$core$IFn$_invoke$arity$variadic = G__45202__delegate;
return G__45202;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__45206 = x;
return goog.isString(G__45206);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__45208 = x__$1;
return goog.typeOf(G__45208);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__16133__auto__ = ty;
if(cljs.core.truth_(and__16133__auto__)){
return ty.cljs$lang$type;
} else {
return and__16133__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__45210 = obj;
return goog.typeOf(G__45210);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__45212 = Symbol;
return goog.typeOf(G__45212);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__17032__auto___45214 = len;
var i_45215 = (0);
while(true){
if((i_45215 < n__17032__auto___45214)){
(new_arr[i_45215] = (arr[i_45215]));

var G__45216 = (i_45215 + (1));
i_45215 = G__45216;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__45217 = (i + (1));
i = G__45217;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__45226__delegate = function (array,i,idxs){
var G__45223 = aget;
var G__45224 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__45225 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__45223,G__45224,G__45225) : cljs.core.apply.call(null,G__45223,G__45224,G__45225));
};
var G__45226 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__45227__i = 0, G__45227__a = new Array(arguments.length -  2);
while (G__45227__i < G__45227__a.length) {G__45227__a[G__45227__i] = arguments[G__45227__i + 2]; ++G__45227__i;}
  idxs = new cljs.core.IndexedSeq(G__45227__a,0);
} 
return G__45226__delegate.call(this,array,i,idxs);};
G__45226.cljs$lang$maxFixedArity = 2;
G__45226.cljs$lang$applyTo = (function (arglist__45228){
var array = cljs.core.first(arglist__45228);
arglist__45228 = cljs.core.next(arglist__45228);
var i = cljs.core.first(arglist__45228);
var idxs = cljs.core.rest(arglist__45228);
return G__45226__delegate(array,i,idxs);
});
G__45226.cljs$core$IFn$_invoke$arity$variadic = G__45226__delegate;
return G__45226;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__45229 = null;
if (arguments.length > 2) {
var G__45230__i = 0, G__45230__a = new Array(arguments.length -  2);
while (G__45230__i < G__45230__a.length) {G__45230__a[G__45230__i] = arguments[G__45230__i + 2]; ++G__45230__i;}
G__45229 = new cljs.core.IndexedSeq(G__45230__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__45229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__45239__delegate = function (array,idx,idx2,idxv){
var G__45235 = aset;
var G__45236 = (array[idx]);
var G__45237 = idx2;
var G__45238 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__45235,G__45236,G__45237,G__45238) : cljs.core.apply.call(null,G__45235,G__45236,G__45237,G__45238));
};
var G__45239 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__45240__i = 0, G__45240__a = new Array(arguments.length -  3);
while (G__45240__i < G__45240__a.length) {G__45240__a[G__45240__i] = arguments[G__45240__i + 3]; ++G__45240__i;}
  idxv = new cljs.core.IndexedSeq(G__45240__a,0);
} 
return G__45239__delegate.call(this,array,idx,idx2,idxv);};
G__45239.cljs$lang$maxFixedArity = 3;
G__45239.cljs$lang$applyTo = (function (arglist__45241){
var array = cljs.core.first(arglist__45241);
arglist__45241 = cljs.core.next(arglist__45241);
var idx = cljs.core.first(arglist__45241);
arglist__45241 = cljs.core.next(arglist__45241);
var idx2 = cljs.core.first(arglist__45241);
var idxv = cljs.core.rest(arglist__45241);
return G__45239__delegate(array,idx,idx2,idxv);
});
G__45239.cljs$core$IFn$_invoke$arity$variadic = G__45239__delegate;
return G__45239;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__45242 = null;
if (arguments.length > 3) {
var G__45243__i = 0, G__45243__a = new Array(arguments.length -  3);
while (G__45243__i < G__45243__a.length) {G__45243__a[G__45243__i] = arguments[G__45243__i + 3]; ++G__45243__i;}
G__45242 = new cljs.core.IndexedSeq(G__45243__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__45242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__45249 = (function (a,x){
a.push(x);

return a;
});
var G__45250 = [];
var G__45251 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__45249,G__45250,G__45251) : cljs.core.reduce.call(null,G__45249,G__45250,G__45251));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__45252__i = 0, G__45252__a = new Array(arguments.length -  2);
while (G__45252__i < G__45252__a.length) {G__45252__a[G__45252__i] = arguments[G__45252__i + 2]; ++G__45252__i;}
  args = new cljs.core.IndexedSeq(G__45252__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__45253){
var obj = cljs.core.first(arglist__45253);
arglist__45253 = cljs.core.next(arglist__45253);
var s = cljs.core.first(arglist__45253);
var args = cljs.core.rest(arglist__45253);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj45255 = {};
return obj45255;
})();


cljs.core.IFn = (function (){var obj45257 = {};
return obj45257;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45303 = x__16789__auto__;
return goog.typeOf(G__45303);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45305 = x__16789__auto__;
return goog.typeOf(G__45305);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45307 = x__16789__auto__;
return goog.typeOf(G__45307);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45309 = x__16789__auto__;
return goog.typeOf(G__45309);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45311 = x__16789__auto__;
return goog.typeOf(G__45311);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45313 = x__16789__auto__;
return goog.typeOf(G__45313);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45315 = x__16789__auto__;
return goog.typeOf(G__45315);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45317 = x__16789__auto__;
return goog.typeOf(G__45317);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45319 = x__16789__auto__;
return goog.typeOf(G__45319);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45321 = x__16789__auto__;
return goog.typeOf(G__45321);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45323 = x__16789__auto__;
return goog.typeOf(G__45323);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45325 = x__16789__auto__;
return goog.typeOf(G__45325);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45327 = x__16789__auto__;
return goog.typeOf(G__45327);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45329 = x__16789__auto__;
return goog.typeOf(G__45329);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45331 = x__16789__auto__;
return goog.typeOf(G__45331);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45333 = x__16789__auto__;
return goog.typeOf(G__45333);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45335 = x__16789__auto__;
return goog.typeOf(G__45335);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45337 = x__16789__auto__;
return goog.typeOf(G__45337);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45339 = x__16789__auto__;
return goog.typeOf(G__45339);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45341 = x__16789__auto__;
return goog.typeOf(G__45341);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45343 = x__16789__auto__;
return goog.typeOf(G__45343);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._invoke[(function (){var G__45345 = x__16789__auto__;
return goog.typeOf(G__45345);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._invoke["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj45347 = {};
return obj45347;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__16133__auto__ = value;
if(and__16133__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__16133__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16789__auto__ = (((value == null))?null:value);
return (function (){var or__16145__auto__ = (cljs.core._clone[(function (){var G__45351 = x__16789__auto__;
return goog.typeOf(G__45351);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clone["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj45353 = {};
return obj45353;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._count[(function (){var G__45357 = x__16789__auto__;
return goog.typeOf(G__45357);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._count["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj45359 = {};
return obj45359;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._empty[(function (){var G__45363 = x__16789__auto__;
return goog.typeOf(G__45363);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._empty["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj45365 = {};
return obj45365;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._conj[(function (){var G__45369 = x__16789__auto__;
return goog.typeOf(G__45369);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj45371 = {};
return obj45371;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__45377 = x__16789__auto__;
return goog.typeOf(G__45377);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._nth[(function (){var G__45379 = x__16789__auto__;
return goog.typeOf(G__45379);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._nth["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj45381 = {};
return obj45381;
})();


cljs.core.ISeq = (function (){var obj45383 = {};
return obj45383;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._first[(function (){var G__45387 = x__16789__auto__;
return goog.typeOf(G__45387);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rest[(function (){var G__45391 = x__16789__auto__;
return goog.typeOf(G__45391);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj45393 = {};
return obj45393;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._next[(function (){var G__45397 = x__16789__auto__;
return goog.typeOf(G__45397);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj45399 = {};
return obj45399;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__45405 = x__16789__auto__;
return goog.typeOf(G__45405);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._lookup[(function (){var G__45407 = x__16789__auto__;
return goog.typeOf(G__45407);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._lookup["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj45409 = {};
return obj45409;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__45413 = x__16789__auto__;
return goog.typeOf(G__45413);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc[(function (){var G__45417 = x__16789__auto__;
return goog.typeOf(G__45417);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj45419 = {};
return obj45419;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc[(function (){var G__45423 = x__16789__auto__;
return goog.typeOf(G__45423);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj45425 = {};
return obj45425;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._key[(function (){var G__45429 = x__16789__auto__;
return goog.typeOf(G__45429);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._val[(function (){var G__45433 = x__16789__auto__;
return goog.typeOf(G__45433);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._val["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj45435 = {};
return obj45435;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin[(function (){var G__45439 = x__16789__auto__;
return goog.typeOf(G__45439);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj45441 = {};
return obj45441;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._peek[(function (){var G__45445 = x__16789__auto__;
return goog.typeOf(G__45445);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._peek["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._pop[(function (){var G__45449 = x__16789__auto__;
return goog.typeOf(G__45449);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj45451 = {};
return obj45451;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n[(function (){var G__45455 = x__16789__auto__;
return goog.typeOf(G__45455);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj45457 = {};
return obj45457;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref[(function (){var G__45461 = x__16789__auto__;
return goog.typeOf(G__45461);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj45463 = {};
return obj45463;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._deref_with_timeout[(function (){var G__45467 = x__16789__auto__;
return goog.typeOf(G__45467);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj45469 = {};
return obj45469;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._meta[(function (){var G__45473 = x__16789__auto__;
return goog.typeOf(G__45473);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj45475 = {};
return obj45475;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._with_meta[(function (){var G__45479 = x__16789__auto__;
return goog.typeOf(G__45479);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._with_meta["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj45481 = {};
return obj45481;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__45487 = x__16789__auto__;
return goog.typeOf(G__45487);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._reduce[(function (){var G__45489 = x__16789__auto__;
return goog.typeOf(G__45489);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj45491 = {};
return obj45491;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._kv_reduce[(function (){var G__45495 = x__16789__auto__;
return goog.typeOf(G__45495);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj45497 = {};
return obj45497;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._equiv[(function (){var G__45501 = x__16789__auto__;
return goog.typeOf(G__45501);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._equiv["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj45503 = {};
return obj45503;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._hash[(function (){var G__45507 = x__16789__auto__;
return goog.typeOf(G__45507);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._hash["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj45509 = {};
return obj45509;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._seq[(function (){var G__45513 = x__16789__auto__;
return goog.typeOf(G__45513);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj45515 = {};
return obj45515;
})();


cljs.core.IList = (function (){var obj45517 = {};
return obj45517;
})();


cljs.core.IRecord = (function (){var obj45519 = {};
return obj45519;
})();


cljs.core.IReversible = (function (){var obj45521 = {};
return obj45521;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._rseq[(function (){var G__45525 = x__16789__auto__;
return goog.typeOf(G__45525);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._rseq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj45527 = {};
return obj45527;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq[(function (){var G__45531 = x__16789__auto__;
return goog.typeOf(G__45531);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._sorted_seq_from[(function (){var G__45535 = x__16789__auto__;
return goog.typeOf(G__45535);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._entry_key[(function (){var G__45539 = x__16789__auto__;
return goog.typeOf(G__45539);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._entry_key["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._comparator[(function (){var G__45543 = x__16789__auto__;
return goog.typeOf(G__45543);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._comparator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj45545 = {};
return obj45545;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._write[(function (){var G__45549 = x__16789__auto__;
return goog.typeOf(G__45549);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._write["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__16133__auto__ = writer;
if(and__16133__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__16133__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16789__auto__ = (((writer == null))?null:writer);
return (function (){var or__16145__auto__ = (cljs.core._flush[(function (){var G__45553 = x__16789__auto__;
return goog.typeOf(G__45553);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._flush["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj45555 = {};
return obj45555;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._pr_writer[(function (){var G__45559 = x__16789__auto__;
return goog.typeOf(G__45559);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj45561 = {};
return obj45561;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__16133__auto__ = d;
if(and__16133__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16789__auto__ = (((d == null))?null:d);
return (function (){var or__16145__auto__ = (cljs.core._realized_QMARK_[(function (){var G__45565 = x__16789__auto__;
return goog.typeOf(G__45565);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj45567 = {};
return obj45567;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._notify_watches[(function (){var G__45571 = x__16789__auto__;
return goog.typeOf(G__45571);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._add_watch[(function (){var G__45575 = x__16789__auto__;
return goog.typeOf(G__45575);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__16133__auto__ = this$;
if(and__16133__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__16133__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16789__auto__ = (((this$ == null))?null:this$);
return (function (){var or__16145__auto__ = (cljs.core._remove_watch[(function (){var G__45579 = x__16789__auto__;
return goog.typeOf(G__45579);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj45581 = {};
return obj45581;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._as_transient[(function (){var G__45585 = x__16789__auto__;
return goog.typeOf(G__45585);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._as_transient["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj45587 = {};
return obj45587;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._conj_BANG_[(function (){var G__45591 = x__16789__auto__;
return goog.typeOf(G__45591);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._persistent_BANG_[(function (){var G__45595 = x__16789__auto__;
return goog.typeOf(G__45595);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj45597 = {};
return obj45597;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_BANG_[(function (){var G__45601 = x__16789__auto__;
return goog.typeOf(G__45601);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj45603 = {};
return obj45603;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__45607 = x__16789__auto__;
return goog.typeOf(G__45607);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj45609 = {};
return obj45609;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__45613 = x__16789__auto__;
return goog.typeOf(G__45613);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._pop_BANG_[(function (){var G__45617 = x__16789__auto__;
return goog.typeOf(G__45617);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj45619 = {};
return obj45619;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__16133__auto__ = tcoll;
if(and__16133__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16789__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__16145__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__45623 = x__16789__auto__;
return goog.typeOf(G__45623);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj45625 = {};
return obj45625;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._compare[(function (){var G__45629 = x__16789__auto__;
return goog.typeOf(G__45629);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._compare["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj45631 = {};
return obj45631;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._drop_first[(function (){var G__45635 = x__16789__auto__;
return goog.typeOf(G__45635);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._drop_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj45637 = {};
return obj45637;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_first[(function (){var G__45641 = x__16789__auto__;
return goog.typeOf(G__45641);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_rest[(function (){var G__45645 = x__16789__auto__;
return goog.typeOf(G__45645);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj45647 = {};
return obj45647;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._chunked_next[(function (){var G__45651 = x__16789__auto__;
return goog.typeOf(G__45651);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj45653 = {};
return obj45653;
})();

cljs.core._name = (function _name(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._name[(function (){var G__45657 = x__16789__auto__;
return goog.typeOf(G__45657);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._name["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._namespace[(function (){var G__45661 = x__16789__auto__;
return goog.typeOf(G__45661);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._namespace["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj45663 = {};
return obj45663;
})();


cljs.core.IReset = (function (){var obj45665 = {};
return obj45665;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._reset_BANG_[(function (){var G__45669 = x__16789__auto__;
return goog.typeOf(G__45669);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj45671 = {};
return obj45671;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__45681 = x__16789__auto__;
return goog.typeOf(G__45681);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__45683 = x__16789__auto__;
return goog.typeOf(G__45683);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__45685 = x__16789__auto__;
return goog.typeOf(G__45685);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._swap_BANG_[(function (){var G__45687 = x__16789__auto__;
return goog.typeOf(G__45687);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj45689 = {};
return obj45689;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__16133__auto__ = o;
if(and__16133__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__16133__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16789__auto__ = (((o == null))?null:o);
return (function (){var or__16145__auto__ = (cljs.core._vreset_BANG_[(function (){var G__45693 = x__16789__auto__;
return goog.typeOf(G__45693);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj45695 = {};
return obj45695;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__16133__auto__ = coll;
if(and__16133__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__16133__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16789__auto__ = (((coll == null))?null:coll);
return (function (){var or__16145__auto__ = (cljs.core._iterator[(function (){var G__45699 = x__16789__auto__;
return goog.typeOf(G__45699);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._iterator["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__45702 = (4294967295);
var G__45703 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__45702,G__45703) : Math.imul.call(null,G__45702,G__45703));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__45706 = a;
var G__45707 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__45706,G__45707) : Math.imul.call(null,G__45706,G__45707));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__45708 = (i + (2));
var G__45709 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__45708;
h1 = G__45709;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj45711 = {};
return obj45711;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__45712 = (i + (1));
var G__45713 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__45712;
hash = G__45713;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj45717 = {};
return obj45717;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__45720 = o;
if(G__45720){
var bit__16819__auto__ = (G__45720.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16819__auto__) || (G__45720.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__45721 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__45721) : Math.floor.call(null,G__45721));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__45728 = a.ns;
var G__45729 = b.ns;
return goog.array.defaultCompare(G__45728,G__45729);
})();
if(((0) === nsc)){
var G__45730 = a.name;
var G__45731 = b.name;
return goog.array.defaultCompare(G__45730,G__45731);
} else {
return nsc;
}
}
} else {
var G__45732 = a.name;
var G__45733 = b.name;
return goog.array.defaultCompare(G__45732,G__45733);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__45735 = null;
var G__45735__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__45735__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__45735 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__45735__2.call(this,self__,coll);
case 3:
return G__45735__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45735.cljs$core$IFn$_invoke$arity$2 = G__45735__2;
G__45735.cljs$core$IFn$_invoke$arity$3 = G__45735__3;
return G__45735;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args45734){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args45734)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__45783 = null;
var G__45783__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__45783__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__45783__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__45783__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__45783__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__45783__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__45783__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__45783__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__45783__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__45783__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__45783__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__45783__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__45783__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__45783__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__45783__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__45783__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__45783__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__45783__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__45783__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__45783__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__45783__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__45783__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45739 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__45740 = a;
var G__45741 = b;
var G__45742 = c;
var G__45743 = d;
var G__45744 = e;
var G__45745 = f;
var G__45746 = g;
var G__45747 = h;
var G__45748 = i;
var G__45749 = j;
var G__45750 = k;
var G__45751 = l;
var G__45752 = m;
var G__45753 = n;
var G__45754 = o;
var G__45755 = p;
var G__45756 = q;
var G__45757 = r;
var G__45758 = s;
var G__45759 = t;
var G__45760 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__45739,G__45740,G__45741,G__45742,G__45743,G__45744,G__45745,G__45746,G__45747,G__45748,G__45749,G__45750,G__45751,G__45752,G__45753,G__45754,G__45755,G__45756,G__45757,G__45758,G__45759,G__45760) : cljs.core.apply.call(null,G__45739,G__45740,G__45741,G__45742,G__45743,G__45744,G__45745,G__45746,G__45747,G__45748,G__45749,G__45750,G__45751,G__45752,G__45753,G__45754,G__45755,G__45756,G__45757,G__45758,G__45759,G__45760));
});
G__45783 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__45783__1.call(this,self__);
case 2:
return G__45783__2.call(this,self__,a);
case 3:
return G__45783__3.call(this,self__,a,b);
case 4:
return G__45783__4.call(this,self__,a,b,c);
case 5:
return G__45783__5.call(this,self__,a,b,c,d);
case 6:
return G__45783__6.call(this,self__,a,b,c,d,e);
case 7:
return G__45783__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__45783__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__45783__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__45783__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__45783__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__45783__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__45783__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__45783__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__45783__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__45783__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__45783__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__45783__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__45783__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__45783__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__45783__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__45783__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__45783.cljs$core$IFn$_invoke$arity$1 = G__45783__1;
G__45783.cljs$core$IFn$_invoke$arity$2 = G__45783__2;
G__45783.cljs$core$IFn$_invoke$arity$3 = G__45783__3;
G__45783.cljs$core$IFn$_invoke$arity$4 = G__45783__4;
G__45783.cljs$core$IFn$_invoke$arity$5 = G__45783__5;
G__45783.cljs$core$IFn$_invoke$arity$6 = G__45783__6;
G__45783.cljs$core$IFn$_invoke$arity$7 = G__45783__7;
G__45783.cljs$core$IFn$_invoke$arity$8 = G__45783__8;
G__45783.cljs$core$IFn$_invoke$arity$9 = G__45783__9;
G__45783.cljs$core$IFn$_invoke$arity$10 = G__45783__10;
G__45783.cljs$core$IFn$_invoke$arity$11 = G__45783__11;
G__45783.cljs$core$IFn$_invoke$arity$12 = G__45783__12;
G__45783.cljs$core$IFn$_invoke$arity$13 = G__45783__13;
G__45783.cljs$core$IFn$_invoke$arity$14 = G__45783__14;
G__45783.cljs$core$IFn$_invoke$arity$15 = G__45783__15;
G__45783.cljs$core$IFn$_invoke$arity$16 = G__45783__16;
G__45783.cljs$core$IFn$_invoke$arity$17 = G__45783__17;
G__45783.cljs$core$IFn$_invoke$arity$18 = G__45783__18;
G__45783.cljs$core$IFn$_invoke$arity$19 = G__45783__19;
G__45783.cljs$core$IFn$_invoke$arity$20 = G__45783__20;
G__45783.cljs$core$IFn$_invoke$arity$21 = G__45783__21;
G__45783.cljs$core$IFn$_invoke$arity$22 = G__45783__22;
return G__45783;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args45738){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args45738)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__45761 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__45762 = a;
var G__45763 = b;
var G__45764 = c;
var G__45765 = d;
var G__45766 = e;
var G__45767 = f;
var G__45768 = g;
var G__45769 = h;
var G__45770 = i;
var G__45771 = j;
var G__45772 = k;
var G__45773 = l;
var G__45774 = m;
var G__45775 = n;
var G__45776 = o;
var G__45777 = p;
var G__45778 = q;
var G__45779 = r;
var G__45780 = s;
var G__45781 = t;
var G__45782 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__45761,G__45762,G__45763,G__45764,G__45765,G__45766,G__45767,G__45768,G__45769,G__45770,G__45771,G__45772,G__45773,G__45774,G__45775,G__45776,G__45777,G__45778,G__45779,G__45780,G__45781,G__45782) : cljs.core.apply.call(null,G__45761,G__45762,G__45763,G__45764,G__45765,G__45766,G__45767,G__45768,G__45769,G__45770,G__45771,G__45772,G__45773,G__45774,G__45775,G__45776,G__45777,G__45778,G__45779,G__45780,G__45781,G__45782));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__45785 = x;
if(G__45785){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__45785.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__45785.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__45785);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__45785);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__45787 = value;
if(G__45787){
var bit__16826__auto__ = (G__45787.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16826__auto__) || (G__45787.cljs$core$ICloneable$)){
return true;
} else {
if((!G__45787.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__45787);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__45787);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__45789 = coll;
if(G__45789){
var bit__16819__auto__ = (G__45789.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16819__auto__) || (G__45789.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__45791 = coll;
if(G__45791){
var bit__16819__auto__ = (G__45791.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__45791.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__45793 = coll;
if(G__45793){
var bit__16819__auto__ = (G__45793.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__45793.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__45795 = coll;
if(G__45795){
var bit__16819__auto__ = (G__45795.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16819__auto__) || (G__45795.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__45800__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__45801 = y;
var G__45802 = cljs.core.first(more);
var G__45803 = cljs.core.next(more);
x = G__45801;
y = G__45802;
more = G__45803;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__45800 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__45804__i = 0, G__45804__a = new Array(arguments.length -  2);
while (G__45804__i < G__45804__a.length) {G__45804__a[G__45804__i] = arguments[G__45804__i + 2]; ++G__45804__i;}
  more = new cljs.core.IndexedSeq(G__45804__a,0);
} 
return G__45800__delegate.call(this,x,y,more);};
G__45800.cljs$lang$maxFixedArity = 2;
G__45800.cljs$lang$applyTo = (function (arglist__45805){
var x = cljs.core.first(arglist__45805);
arglist__45805 = cljs.core.next(arglist__45805);
var y = cljs.core.first(arglist__45805);
var more = cljs.core.rest(arglist__45805);
return G__45800__delegate(x,y,more);
});
G__45800.cljs$core$IFn$_invoke$arity$variadic = G__45800__delegate;
return G__45800;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__45806 = null;
if (arguments.length > 2) {
var G__45807__i = 0, G__45807__a = new Array(arguments.length -  2);
while (G__45807__i < G__45807__a.length) {G__45807__a[G__45807__i] = arguments[G__45807__i + 2]; ++G__45807__i;}
G__45806 = new cljs.core.IndexedSeq(G__45807__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__45806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__45808 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__45808) : cljs.core.es6_iterator_seq.call(null,G__45808));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__45809 = (n + (1));
var G__45810 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__45811 = cljs.core.next(coll__$1);
n = G__45809;
hash_code = G__45810;
coll__$1 = G__45811;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__45812 = (n + (1));
var G__45813 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__45814 = cljs.core.next(coll__$1);
n = G__45812;
hash_code = G__45813;
coll__$1 = G__45814;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__45815 = o;
return goog.getUid(G__45815);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__45817 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__45817) : cljs.core.deref.call(null,G__45817));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__45824 = val;
var G__45825 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45824,G__45825) : f.call(null,G__45824,G__45825));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__45830 = nval;
var G__45831 = (n + (1));
val = G__45830;
n = G__45831;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__45826 = val__$1;
var G__45827 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45826,G__45827) : f.call(null,G__45826,G__45827));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__45832 = nval;
var G__45833 = (n + (1));
val__$1 = G__45832;
n = G__45833;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__45828 = val__$1;
var G__45829 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45828,G__45829) : f.call(null,G__45828,G__45829));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__45834 = nval;
var G__45835 = (n + (1));
val__$1 = G__45834;
n = G__45835;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__45842 = val;
var G__45843 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45842,G__45843) : f.call(null,G__45842,G__45843));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__45848 = nval;
var G__45849 = (n + (1));
val = G__45848;
n = G__45849;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__45844 = val__$1;
var G__45845 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45844,G__45845) : f.call(null,G__45844,G__45845));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__45850 = nval;
var G__45851 = (n + (1));
val__$1 = G__45850;
n = G__45851;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__45846 = val__$1;
var G__45847 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__45846,G__45847) : f.call(null,G__45846,G__45847));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__45852 = nval;
var G__45853 = (n + (1));
val__$1 = G__45852;
n = G__45853;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__45855 = x;
if(G__45855){
var bit__16826__auto__ = (G__45855.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16826__auto__) || (G__45855.cljs$core$ICounted$)){
return true;
} else {
if((!G__45855.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__45855);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__45855);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__45857 = x;
if(G__45857){
var bit__16826__auto__ = (G__45857.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16826__auto__) || (G__45857.cljs$core$IIndexed$)){
return true;
} else {
if((!G__45857.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__45857);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__45857);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__45858 = coll__$1;
var G__45859 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__45858,G__45859) : cljs.core.equiv_sequential.call(null,G__45858,G__45859));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__45860 = o;
var G__45861 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__45860,G__45861) : cljs.core.cons.call(null,G__45860,G__45861));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__45864 = coll__$1;
var G__45865 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__45864,G__45865) : cljs.core.equiv_sequential.call(null,G__45864,G__45865));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__45866 = cljs.core.List.EMPTY;
var G__45867 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__45866,G__45867) : cljs.core.with_meta.call(null,G__45866,G__45867));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__45868 = f;
var G__45869 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__45868,G__45869) : cljs.core.seq_reduce.call(null,G__45868,G__45869));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__45870 = f;
var G__45871 = start;
var G__45872 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__45870,G__45871,G__45872) : cljs.core.seq_reduce.call(null,G__45870,G__45871,G__45872));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__45873 = o;
var G__45874 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__45873,G__45874) : cljs.core.cons.call(null,G__45873,G__45874));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__45875 = sn;
s = G__45875;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__45880__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__45881 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__45882 = cljs.core.first(xs);
var G__45883 = cljs.core.next(xs);
coll = G__45881;
x = G__45882;
xs = G__45883;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__45880 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__45884__i = 0, G__45884__a = new Array(arguments.length -  2);
while (G__45884__i < G__45884__a.length) {G__45884__a[G__45884__i] = arguments[G__45884__i + 2]; ++G__45884__i;}
  xs = new cljs.core.IndexedSeq(G__45884__a,0);
} 
return G__45880__delegate.call(this,coll,x,xs);};
G__45880.cljs$lang$maxFixedArity = 2;
G__45880.cljs$lang$applyTo = (function (arglist__45885){
var coll = cljs.core.first(arglist__45885);
arglist__45885 = cljs.core.next(arglist__45885);
var x = cljs.core.first(arglist__45885);
var xs = cljs.core.rest(arglist__45885);
return G__45880__delegate(coll,x,xs);
});
G__45880.cljs$core$IFn$_invoke$arity$variadic = G__45880__delegate;
return G__45880;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__45886 = null;
if (arguments.length > 2) {
var G__45887__i = 0, G__45887__a = new Array(arguments.length -  2);
while (G__45887__i < G__45887__a.length) {G__45887__a[G__45887__i] = arguments[G__45887__i + 2]; ++G__45887__i;}
G__45886 = new cljs.core.IndexedSeq(G__45887__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__45886);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__45888 = cljs.core.next(s);
var G__45889 = (acc + (1));
s = G__45888;
acc = G__45889;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__45891 = coll;
if(G__45891){
var bit__16819__auto__ = (G__45891.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16819__auto__) || (G__45891.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__45892 = cljs.core.next(coll);
var G__45893 = (n - (1));
coll = G__45892;
n = G__45893;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__45894 = cljs.core.next(coll);
var G__45895 = (n - (1));
var G__45896 = not_found;
coll = G__45894;
n = G__45895;
not_found = G__45896;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__45901 = coll;
if(G__45901){
var bit__16819__auto__ = (G__45901.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__45901.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__45902 = coll;
if(G__45902){
var bit__16826__auto__ = (G__45902.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__45902.cljs$core$ISeq$)){
return true;
} else {
if((!G__45902.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__45902);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__45902);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__45903 = coll;
if(G__45903){
var bit__16819__auto__ = (G__45903.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16819__auto__) || (G__45903.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__45904 = coll;
if(G__45904){
var bit__16826__auto__ = (G__45904.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__45904.cljs$core$ISeq$)){
return true;
} else {
if((!G__45904.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__45904);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__45904);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__45905 = (n__$1 - (1));
var G__45906 = cljs.core.rest(xs);
n__$1 = G__45905;
xs = G__45906;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__45909 = o;
if(G__45909){
var bit__16819__auto__ = (G__45909.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__45909.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__45910 = o;
if(G__45910){
var bit__16819__auto__ = (G__45910.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16819__auto__) || (G__45910.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__45914__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__45915 = ret;
var G__45916 = cljs.core.first(kvs);
var G__45917 = cljs.core.second(kvs);
var G__45918 = cljs.core.nnext(kvs);
coll = G__45915;
k = G__45916;
v = G__45917;
kvs = G__45918;
continue;
} else {
return ret;
}
break;
}
};
var G__45914 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__45919__i = 0, G__45919__a = new Array(arguments.length -  3);
while (G__45919__i < G__45919__a.length) {G__45919__a[G__45919__i] = arguments[G__45919__i + 3]; ++G__45919__i;}
  kvs = new cljs.core.IndexedSeq(G__45919__a,0);
} 
return G__45914__delegate.call(this,coll,k,v,kvs);};
G__45914.cljs$lang$maxFixedArity = 3;
G__45914.cljs$lang$applyTo = (function (arglist__45920){
var coll = cljs.core.first(arglist__45920);
arglist__45920 = cljs.core.next(arglist__45920);
var k = cljs.core.first(arglist__45920);
arglist__45920 = cljs.core.next(arglist__45920);
var v = cljs.core.first(arglist__45920);
var kvs = cljs.core.rest(arglist__45920);
return G__45914__delegate(coll,k,v,kvs);
});
G__45914.cljs$core$IFn$_invoke$arity$variadic = G__45914__delegate;
return G__45914;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__45921 = null;
if (arguments.length > 3) {
var G__45922__i = 0, G__45922__a = new Array(arguments.length -  3);
while (G__45922__i < G__45922__a.length) {G__45922__a[G__45922__i] = arguments[G__45922__i + 3]; ++G__45922__i;}
G__45921 = new cljs.core.IndexedSeq(G__45922__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__45921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__45925__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__45926 = ret;
var G__45927 = cljs.core.first(ks);
var G__45928 = cljs.core.next(ks);
coll = G__45926;
k = G__45927;
ks = G__45928;
continue;
} else {
return ret;
}
}
break;
}
};
var G__45925 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__45929__i = 0, G__45929__a = new Array(arguments.length -  2);
while (G__45929__i < G__45929__a.length) {G__45929__a[G__45929__i] = arguments[G__45929__i + 2]; ++G__45929__i;}
  ks = new cljs.core.IndexedSeq(G__45929__a,0);
} 
return G__45925__delegate.call(this,coll,k,ks);};
G__45925.cljs$lang$maxFixedArity = 2;
G__45925.cljs$lang$applyTo = (function (arglist__45930){
var coll = cljs.core.first(arglist__45930);
arglist__45930 = cljs.core.next(arglist__45930);
var k = cljs.core.first(arglist__45930);
var ks = cljs.core.rest(arglist__45930);
return G__45925__delegate(coll,k,ks);
});
G__45925.cljs$core$IFn$_invoke$arity$variadic = G__45925__delegate;
return G__45925;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__45931 = null;
if (arguments.length > 2) {
var G__45932__i = 0, G__45932__a = new Array(arguments.length -  2);
while (G__45932__i < G__45932__a.length) {G__45932__a[G__45932__i] = arguments[G__45932__i + 2]; ++G__45932__i;}
G__45931 = new cljs.core.IndexedSeq(G__45932__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__45931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__16145__auto__ = (function (){var G__45937 = f;
return goog.isFunction(G__45937);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__45938 = f;
if(G__45938){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto____$1 = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
return G__45938.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__45938.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__45938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__45938);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__46404 = null;
var G__46404__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__46404__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45940 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__45940) : self__.afn.call(null,G__45940));
});
var G__46404__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45941 = a;
var G__45942 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__45941,G__45942) : self__.afn.call(null,G__45941,G__45942));
});
var G__46404__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45943 = a;
var G__45944 = b;
var G__45945 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__45943,G__45944,G__45945) : self__.afn.call(null,G__45943,G__45944,G__45945));
});
var G__46404__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45946 = a;
var G__45947 = b;
var G__45948 = c;
var G__45949 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__45946,G__45947,G__45948,G__45949) : self__.afn.call(null,G__45946,G__45947,G__45948,G__45949));
});
var G__46404__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45950 = a;
var G__45951 = b;
var G__45952 = c;
var G__45953 = d;
var G__45954 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__45950,G__45951,G__45952,G__45953,G__45954) : self__.afn.call(null,G__45950,G__45951,G__45952,G__45953,G__45954));
});
var G__46404__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45955 = a;
var G__45956 = b;
var G__45957 = c;
var G__45958 = d;
var G__45959 = e;
var G__45960 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__45955,G__45956,G__45957,G__45958,G__45959,G__45960) : self__.afn.call(null,G__45955,G__45956,G__45957,G__45958,G__45959,G__45960));
});
var G__46404__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45961 = a;
var G__45962 = b;
var G__45963 = c;
var G__45964 = d;
var G__45965 = e;
var G__45966 = f;
var G__45967 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__45961,G__45962,G__45963,G__45964,G__45965,G__45966,G__45967) : self__.afn.call(null,G__45961,G__45962,G__45963,G__45964,G__45965,G__45966,G__45967));
});
var G__46404__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45968 = a;
var G__45969 = b;
var G__45970 = c;
var G__45971 = d;
var G__45972 = e;
var G__45973 = f;
var G__45974 = g;
var G__45975 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__45968,G__45969,G__45970,G__45971,G__45972,G__45973,G__45974,G__45975) : self__.afn.call(null,G__45968,G__45969,G__45970,G__45971,G__45972,G__45973,G__45974,G__45975));
});
var G__46404__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45976 = a;
var G__45977 = b;
var G__45978 = c;
var G__45979 = d;
var G__45980 = e;
var G__45981 = f;
var G__45982 = g;
var G__45983 = h;
var G__45984 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__45976,G__45977,G__45978,G__45979,G__45980,G__45981,G__45982,G__45983,G__45984) : self__.afn.call(null,G__45976,G__45977,G__45978,G__45979,G__45980,G__45981,G__45982,G__45983,G__45984));
});
var G__46404__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45985 = a;
var G__45986 = b;
var G__45987 = c;
var G__45988 = d;
var G__45989 = e;
var G__45990 = f;
var G__45991 = g;
var G__45992 = h;
var G__45993 = i;
var G__45994 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__45985,G__45986,G__45987,G__45988,G__45989,G__45990,G__45991,G__45992,G__45993,G__45994) : self__.afn.call(null,G__45985,G__45986,G__45987,G__45988,G__45989,G__45990,G__45991,G__45992,G__45993,G__45994));
});
var G__46404__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__45995 = a;
var G__45996 = b;
var G__45997 = c;
var G__45998 = d;
var G__45999 = e;
var G__46000 = f;
var G__46001 = g;
var G__46002 = h;
var G__46003 = i;
var G__46004 = j;
var G__46005 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__45995,G__45996,G__45997,G__45998,G__45999,G__46000,G__46001,G__46002,G__46003,G__46004,G__46005) : self__.afn.call(null,G__45995,G__45996,G__45997,G__45998,G__45999,G__46000,G__46001,G__46002,G__46003,G__46004,G__46005));
});
var G__46404__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46006 = a;
var G__46007 = b;
var G__46008 = c;
var G__46009 = d;
var G__46010 = e;
var G__46011 = f;
var G__46012 = g;
var G__46013 = h;
var G__46014 = i;
var G__46015 = j;
var G__46016 = k;
var G__46017 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__46006,G__46007,G__46008,G__46009,G__46010,G__46011,G__46012,G__46013,G__46014,G__46015,G__46016,G__46017) : self__.afn.call(null,G__46006,G__46007,G__46008,G__46009,G__46010,G__46011,G__46012,G__46013,G__46014,G__46015,G__46016,G__46017));
});
var G__46404__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46018 = a;
var G__46019 = b;
var G__46020 = c;
var G__46021 = d;
var G__46022 = e;
var G__46023 = f;
var G__46024 = g;
var G__46025 = h;
var G__46026 = i;
var G__46027 = j;
var G__46028 = k;
var G__46029 = l;
var G__46030 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__46018,G__46019,G__46020,G__46021,G__46022,G__46023,G__46024,G__46025,G__46026,G__46027,G__46028,G__46029,G__46030) : self__.afn.call(null,G__46018,G__46019,G__46020,G__46021,G__46022,G__46023,G__46024,G__46025,G__46026,G__46027,G__46028,G__46029,G__46030));
});
var G__46404__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46031 = a;
var G__46032 = b;
var G__46033 = c;
var G__46034 = d;
var G__46035 = e;
var G__46036 = f;
var G__46037 = g;
var G__46038 = h;
var G__46039 = i;
var G__46040 = j;
var G__46041 = k;
var G__46042 = l;
var G__46043 = m;
var G__46044 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__46031,G__46032,G__46033,G__46034,G__46035,G__46036,G__46037,G__46038,G__46039,G__46040,G__46041,G__46042,G__46043,G__46044) : self__.afn.call(null,G__46031,G__46032,G__46033,G__46034,G__46035,G__46036,G__46037,G__46038,G__46039,G__46040,G__46041,G__46042,G__46043,G__46044));
});
var G__46404__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46045 = a;
var G__46046 = b;
var G__46047 = c;
var G__46048 = d;
var G__46049 = e;
var G__46050 = f;
var G__46051 = g;
var G__46052 = h;
var G__46053 = i;
var G__46054 = j;
var G__46055 = k;
var G__46056 = l;
var G__46057 = m;
var G__46058 = n;
var G__46059 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__46045,G__46046,G__46047,G__46048,G__46049,G__46050,G__46051,G__46052,G__46053,G__46054,G__46055,G__46056,G__46057,G__46058,G__46059) : self__.afn.call(null,G__46045,G__46046,G__46047,G__46048,G__46049,G__46050,G__46051,G__46052,G__46053,G__46054,G__46055,G__46056,G__46057,G__46058,G__46059));
});
var G__46404__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46060 = a;
var G__46061 = b;
var G__46062 = c;
var G__46063 = d;
var G__46064 = e;
var G__46065 = f;
var G__46066 = g;
var G__46067 = h;
var G__46068 = i;
var G__46069 = j;
var G__46070 = k;
var G__46071 = l;
var G__46072 = m;
var G__46073 = n;
var G__46074 = o;
var G__46075 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__46060,G__46061,G__46062,G__46063,G__46064,G__46065,G__46066,G__46067,G__46068,G__46069,G__46070,G__46071,G__46072,G__46073,G__46074,G__46075) : self__.afn.call(null,G__46060,G__46061,G__46062,G__46063,G__46064,G__46065,G__46066,G__46067,G__46068,G__46069,G__46070,G__46071,G__46072,G__46073,G__46074,G__46075));
});
var G__46404__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46076 = a;
var G__46077 = b;
var G__46078 = c;
var G__46079 = d;
var G__46080 = e;
var G__46081 = f;
var G__46082 = g;
var G__46083 = h;
var G__46084 = i;
var G__46085 = j;
var G__46086 = k;
var G__46087 = l;
var G__46088 = m;
var G__46089 = n;
var G__46090 = o;
var G__46091 = p;
var G__46092 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__46076,G__46077,G__46078,G__46079,G__46080,G__46081,G__46082,G__46083,G__46084,G__46085,G__46086,G__46087,G__46088,G__46089,G__46090,G__46091,G__46092) : self__.afn.call(null,G__46076,G__46077,G__46078,G__46079,G__46080,G__46081,G__46082,G__46083,G__46084,G__46085,G__46086,G__46087,G__46088,G__46089,G__46090,G__46091,G__46092));
});
var G__46404__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46093 = a;
var G__46094 = b;
var G__46095 = c;
var G__46096 = d;
var G__46097 = e;
var G__46098 = f;
var G__46099 = g;
var G__46100 = h;
var G__46101 = i;
var G__46102 = j;
var G__46103 = k;
var G__46104 = l;
var G__46105 = m;
var G__46106 = n;
var G__46107 = o;
var G__46108 = p;
var G__46109 = q;
var G__46110 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__46093,G__46094,G__46095,G__46096,G__46097,G__46098,G__46099,G__46100,G__46101,G__46102,G__46103,G__46104,G__46105,G__46106,G__46107,G__46108,G__46109,G__46110) : self__.afn.call(null,G__46093,G__46094,G__46095,G__46096,G__46097,G__46098,G__46099,G__46100,G__46101,G__46102,G__46103,G__46104,G__46105,G__46106,G__46107,G__46108,G__46109,G__46110));
});
var G__46404__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46111 = a;
var G__46112 = b;
var G__46113 = c;
var G__46114 = d;
var G__46115 = e;
var G__46116 = f;
var G__46117 = g;
var G__46118 = h;
var G__46119 = i;
var G__46120 = j;
var G__46121 = k;
var G__46122 = l;
var G__46123 = m;
var G__46124 = n;
var G__46125 = o;
var G__46126 = p;
var G__46127 = q;
var G__46128 = r;
var G__46129 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__46111,G__46112,G__46113,G__46114,G__46115,G__46116,G__46117,G__46118,G__46119,G__46120,G__46121,G__46122,G__46123,G__46124,G__46125,G__46126,G__46127,G__46128,G__46129) : self__.afn.call(null,G__46111,G__46112,G__46113,G__46114,G__46115,G__46116,G__46117,G__46118,G__46119,G__46120,G__46121,G__46122,G__46123,G__46124,G__46125,G__46126,G__46127,G__46128,G__46129));
});
var G__46404__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46130 = a;
var G__46131 = b;
var G__46132 = c;
var G__46133 = d;
var G__46134 = e;
var G__46135 = f;
var G__46136 = g;
var G__46137 = h;
var G__46138 = i;
var G__46139 = j;
var G__46140 = k;
var G__46141 = l;
var G__46142 = m;
var G__46143 = n;
var G__46144 = o;
var G__46145 = p;
var G__46146 = q;
var G__46147 = r;
var G__46148 = s;
var G__46149 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__46130,G__46131,G__46132,G__46133,G__46134,G__46135,G__46136,G__46137,G__46138,G__46139,G__46140,G__46141,G__46142,G__46143,G__46144,G__46145,G__46146,G__46147,G__46148,G__46149) : self__.afn.call(null,G__46130,G__46131,G__46132,G__46133,G__46134,G__46135,G__46136,G__46137,G__46138,G__46139,G__46140,G__46141,G__46142,G__46143,G__46144,G__46145,G__46146,G__46147,G__46148,G__46149));
});
var G__46404__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__46150 = self__.afn;
var G__46151 = a;
var G__46152 = b;
var G__46153 = c;
var G__46154 = d;
var G__46155 = e;
var G__46156 = f;
var G__46157 = g;
var G__46158 = h;
var G__46159 = i;
var G__46160 = j;
var G__46161 = k;
var G__46162 = l;
var G__46163 = m;
var G__46164 = n;
var G__46165 = o;
var G__46166 = p;
var G__46167 = q;
var G__46168 = r;
var G__46169 = s;
var G__46170 = t;
var G__46171 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__46150,G__46151,G__46152,G__46153,G__46154,G__46155,G__46156,G__46157,G__46158,G__46159,G__46160,G__46161,G__46162,G__46163,G__46164,G__46165,G__46166,G__46167,G__46168,G__46169,G__46170,G__46171) : cljs.core.apply.call(null,G__46150,G__46151,G__46152,G__46153,G__46154,G__46155,G__46156,G__46157,G__46158,G__46159,G__46160,G__46161,G__46162,G__46163,G__46164,G__46165,G__46166,G__46167,G__46168,G__46169,G__46170,G__46171));
});
G__46404 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__46404__1.call(this,self__);
case 2:
return G__46404__2.call(this,self__,a);
case 3:
return G__46404__3.call(this,self__,a,b);
case 4:
return G__46404__4.call(this,self__,a,b,c);
case 5:
return G__46404__5.call(this,self__,a,b,c,d);
case 6:
return G__46404__6.call(this,self__,a,b,c,d,e);
case 7:
return G__46404__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__46404__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__46404__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__46404__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__46404__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__46404__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__46404__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__46404__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__46404__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__46404__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__46404__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__46404__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__46404__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__46404__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__46404__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__46404__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46404.cljs$core$IFn$_invoke$arity$1 = G__46404__1;
G__46404.cljs$core$IFn$_invoke$arity$2 = G__46404__2;
G__46404.cljs$core$IFn$_invoke$arity$3 = G__46404__3;
G__46404.cljs$core$IFn$_invoke$arity$4 = G__46404__4;
G__46404.cljs$core$IFn$_invoke$arity$5 = G__46404__5;
G__46404.cljs$core$IFn$_invoke$arity$6 = G__46404__6;
G__46404.cljs$core$IFn$_invoke$arity$7 = G__46404__7;
G__46404.cljs$core$IFn$_invoke$arity$8 = G__46404__8;
G__46404.cljs$core$IFn$_invoke$arity$9 = G__46404__9;
G__46404.cljs$core$IFn$_invoke$arity$10 = G__46404__10;
G__46404.cljs$core$IFn$_invoke$arity$11 = G__46404__11;
G__46404.cljs$core$IFn$_invoke$arity$12 = G__46404__12;
G__46404.cljs$core$IFn$_invoke$arity$13 = G__46404__13;
G__46404.cljs$core$IFn$_invoke$arity$14 = G__46404__14;
G__46404.cljs$core$IFn$_invoke$arity$15 = G__46404__15;
G__46404.cljs$core$IFn$_invoke$arity$16 = G__46404__16;
G__46404.cljs$core$IFn$_invoke$arity$17 = G__46404__17;
G__46404.cljs$core$IFn$_invoke$arity$18 = G__46404__18;
G__46404.cljs$core$IFn$_invoke$arity$19 = G__46404__19;
G__46404.cljs$core$IFn$_invoke$arity$20 = G__46404__20;
G__46404.cljs$core$IFn$_invoke$arity$21 = G__46404__21;
G__46404.cljs$core$IFn$_invoke$arity$22 = G__46404__22;
return G__46404;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args45939){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args45939)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__46172 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__46172) : self__.afn.call(null,G__46172));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__46173 = a;
var G__46174 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__46173,G__46174) : self__.afn.call(null,G__46173,G__46174));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__46175 = a;
var G__46176 = b;
var G__46177 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__46175,G__46176,G__46177) : self__.afn.call(null,G__46175,G__46176,G__46177));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__46178 = a;
var G__46179 = b;
var G__46180 = c;
var G__46181 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__46178,G__46179,G__46180,G__46181) : self__.afn.call(null,G__46178,G__46179,G__46180,G__46181));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__46182 = a;
var G__46183 = b;
var G__46184 = c;
var G__46185 = d;
var G__46186 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__46182,G__46183,G__46184,G__46185,G__46186) : self__.afn.call(null,G__46182,G__46183,G__46184,G__46185,G__46186));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__46187 = a;
var G__46188 = b;
var G__46189 = c;
var G__46190 = d;
var G__46191 = e;
var G__46192 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__46187,G__46188,G__46189,G__46190,G__46191,G__46192) : self__.afn.call(null,G__46187,G__46188,G__46189,G__46190,G__46191,G__46192));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__46193 = a;
var G__46194 = b;
var G__46195 = c;
var G__46196 = d;
var G__46197 = e;
var G__46198 = f;
var G__46199 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__46193,G__46194,G__46195,G__46196,G__46197,G__46198,G__46199) : self__.afn.call(null,G__46193,G__46194,G__46195,G__46196,G__46197,G__46198,G__46199));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__46200 = a;
var G__46201 = b;
var G__46202 = c;
var G__46203 = d;
var G__46204 = e;
var G__46205 = f;
var G__46206 = g;
var G__46207 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__46200,G__46201,G__46202,G__46203,G__46204,G__46205,G__46206,G__46207) : self__.afn.call(null,G__46200,G__46201,G__46202,G__46203,G__46204,G__46205,G__46206,G__46207));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__46208 = a;
var G__46209 = b;
var G__46210 = c;
var G__46211 = d;
var G__46212 = e;
var G__46213 = f;
var G__46214 = g;
var G__46215 = h;
var G__46216 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__46208,G__46209,G__46210,G__46211,G__46212,G__46213,G__46214,G__46215,G__46216) : self__.afn.call(null,G__46208,G__46209,G__46210,G__46211,G__46212,G__46213,G__46214,G__46215,G__46216));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__46217 = a;
var G__46218 = b;
var G__46219 = c;
var G__46220 = d;
var G__46221 = e;
var G__46222 = f;
var G__46223 = g;
var G__46224 = h;
var G__46225 = i;
var G__46226 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__46217,G__46218,G__46219,G__46220,G__46221,G__46222,G__46223,G__46224,G__46225,G__46226) : self__.afn.call(null,G__46217,G__46218,G__46219,G__46220,G__46221,G__46222,G__46223,G__46224,G__46225,G__46226));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__46227 = a;
var G__46228 = b;
var G__46229 = c;
var G__46230 = d;
var G__46231 = e;
var G__46232 = f;
var G__46233 = g;
var G__46234 = h;
var G__46235 = i;
var G__46236 = j;
var G__46237 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__46227,G__46228,G__46229,G__46230,G__46231,G__46232,G__46233,G__46234,G__46235,G__46236,G__46237) : self__.afn.call(null,G__46227,G__46228,G__46229,G__46230,G__46231,G__46232,G__46233,G__46234,G__46235,G__46236,G__46237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__46238 = a;
var G__46239 = b;
var G__46240 = c;
var G__46241 = d;
var G__46242 = e;
var G__46243 = f;
var G__46244 = g;
var G__46245 = h;
var G__46246 = i;
var G__46247 = j;
var G__46248 = k;
var G__46249 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__46238,G__46239,G__46240,G__46241,G__46242,G__46243,G__46244,G__46245,G__46246,G__46247,G__46248,G__46249) : self__.afn.call(null,G__46238,G__46239,G__46240,G__46241,G__46242,G__46243,G__46244,G__46245,G__46246,G__46247,G__46248,G__46249));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__46250 = a;
var G__46251 = b;
var G__46252 = c;
var G__46253 = d;
var G__46254 = e;
var G__46255 = f;
var G__46256 = g;
var G__46257 = h;
var G__46258 = i;
var G__46259 = j;
var G__46260 = k;
var G__46261 = l;
var G__46262 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__46250,G__46251,G__46252,G__46253,G__46254,G__46255,G__46256,G__46257,G__46258,G__46259,G__46260,G__46261,G__46262) : self__.afn.call(null,G__46250,G__46251,G__46252,G__46253,G__46254,G__46255,G__46256,G__46257,G__46258,G__46259,G__46260,G__46261,G__46262));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__46263 = a;
var G__46264 = b;
var G__46265 = c;
var G__46266 = d;
var G__46267 = e;
var G__46268 = f;
var G__46269 = g;
var G__46270 = h;
var G__46271 = i;
var G__46272 = j;
var G__46273 = k;
var G__46274 = l;
var G__46275 = m;
var G__46276 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__46263,G__46264,G__46265,G__46266,G__46267,G__46268,G__46269,G__46270,G__46271,G__46272,G__46273,G__46274,G__46275,G__46276) : self__.afn.call(null,G__46263,G__46264,G__46265,G__46266,G__46267,G__46268,G__46269,G__46270,G__46271,G__46272,G__46273,G__46274,G__46275,G__46276));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__46277 = a;
var G__46278 = b;
var G__46279 = c;
var G__46280 = d;
var G__46281 = e;
var G__46282 = f;
var G__46283 = g;
var G__46284 = h;
var G__46285 = i;
var G__46286 = j;
var G__46287 = k;
var G__46288 = l;
var G__46289 = m;
var G__46290 = n;
var G__46291 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__46277,G__46278,G__46279,G__46280,G__46281,G__46282,G__46283,G__46284,G__46285,G__46286,G__46287,G__46288,G__46289,G__46290,G__46291) : self__.afn.call(null,G__46277,G__46278,G__46279,G__46280,G__46281,G__46282,G__46283,G__46284,G__46285,G__46286,G__46287,G__46288,G__46289,G__46290,G__46291));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__46292 = a;
var G__46293 = b;
var G__46294 = c;
var G__46295 = d;
var G__46296 = e;
var G__46297 = f;
var G__46298 = g;
var G__46299 = h;
var G__46300 = i;
var G__46301 = j;
var G__46302 = k;
var G__46303 = l;
var G__46304 = m;
var G__46305 = n;
var G__46306 = o;
var G__46307 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__46292,G__46293,G__46294,G__46295,G__46296,G__46297,G__46298,G__46299,G__46300,G__46301,G__46302,G__46303,G__46304,G__46305,G__46306,G__46307) : self__.afn.call(null,G__46292,G__46293,G__46294,G__46295,G__46296,G__46297,G__46298,G__46299,G__46300,G__46301,G__46302,G__46303,G__46304,G__46305,G__46306,G__46307));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__46308 = a;
var G__46309 = b;
var G__46310 = c;
var G__46311 = d;
var G__46312 = e;
var G__46313 = f;
var G__46314 = g;
var G__46315 = h;
var G__46316 = i;
var G__46317 = j;
var G__46318 = k;
var G__46319 = l;
var G__46320 = m;
var G__46321 = n;
var G__46322 = o;
var G__46323 = p;
var G__46324 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__46308,G__46309,G__46310,G__46311,G__46312,G__46313,G__46314,G__46315,G__46316,G__46317,G__46318,G__46319,G__46320,G__46321,G__46322,G__46323,G__46324) : self__.afn.call(null,G__46308,G__46309,G__46310,G__46311,G__46312,G__46313,G__46314,G__46315,G__46316,G__46317,G__46318,G__46319,G__46320,G__46321,G__46322,G__46323,G__46324));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__46325 = a;
var G__46326 = b;
var G__46327 = c;
var G__46328 = d;
var G__46329 = e;
var G__46330 = f;
var G__46331 = g;
var G__46332 = h;
var G__46333 = i;
var G__46334 = j;
var G__46335 = k;
var G__46336 = l;
var G__46337 = m;
var G__46338 = n;
var G__46339 = o;
var G__46340 = p;
var G__46341 = q;
var G__46342 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__46325,G__46326,G__46327,G__46328,G__46329,G__46330,G__46331,G__46332,G__46333,G__46334,G__46335,G__46336,G__46337,G__46338,G__46339,G__46340,G__46341,G__46342) : self__.afn.call(null,G__46325,G__46326,G__46327,G__46328,G__46329,G__46330,G__46331,G__46332,G__46333,G__46334,G__46335,G__46336,G__46337,G__46338,G__46339,G__46340,G__46341,G__46342));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__46343 = a;
var G__46344 = b;
var G__46345 = c;
var G__46346 = d;
var G__46347 = e;
var G__46348 = f;
var G__46349 = g;
var G__46350 = h;
var G__46351 = i;
var G__46352 = j;
var G__46353 = k;
var G__46354 = l;
var G__46355 = m;
var G__46356 = n;
var G__46357 = o;
var G__46358 = p;
var G__46359 = q;
var G__46360 = r;
var G__46361 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__46343,G__46344,G__46345,G__46346,G__46347,G__46348,G__46349,G__46350,G__46351,G__46352,G__46353,G__46354,G__46355,G__46356,G__46357,G__46358,G__46359,G__46360,G__46361) : self__.afn.call(null,G__46343,G__46344,G__46345,G__46346,G__46347,G__46348,G__46349,G__46350,G__46351,G__46352,G__46353,G__46354,G__46355,G__46356,G__46357,G__46358,G__46359,G__46360,G__46361));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__46362 = a;
var G__46363 = b;
var G__46364 = c;
var G__46365 = d;
var G__46366 = e;
var G__46367 = f;
var G__46368 = g;
var G__46369 = h;
var G__46370 = i;
var G__46371 = j;
var G__46372 = k;
var G__46373 = l;
var G__46374 = m;
var G__46375 = n;
var G__46376 = o;
var G__46377 = p;
var G__46378 = q;
var G__46379 = r;
var G__46380 = s;
var G__46381 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__46362,G__46363,G__46364,G__46365,G__46366,G__46367,G__46368,G__46369,G__46370,G__46371,G__46372,G__46373,G__46374,G__46375,G__46376,G__46377,G__46378,G__46379,G__46380,G__46381) : self__.afn.call(null,G__46362,G__46363,G__46364,G__46365,G__46366,G__46367,G__46368,G__46369,G__46370,G__46371,G__46372,G__46373,G__46374,G__46375,G__46376,G__46377,G__46378,G__46379,G__46380,G__46381));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__46382 = self__.afn;
var G__46383 = a;
var G__46384 = b;
var G__46385 = c;
var G__46386 = d;
var G__46387 = e;
var G__46388 = f;
var G__46389 = g;
var G__46390 = h;
var G__46391 = i;
var G__46392 = j;
var G__46393 = k;
var G__46394 = l;
var G__46395 = m;
var G__46396 = n;
var G__46397 = o;
var G__46398 = p;
var G__46399 = q;
var G__46400 = r;
var G__46401 = s;
var G__46402 = t;
var G__46403 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__46382,G__46383,G__46384,G__46385,G__46386,G__46387,G__46388,G__46389,G__46390,G__46391,G__46392,G__46393,G__46394,G__46395,G__46396,G__46397,G__46398,G__46399,G__46400,G__46401,G__46402,G__46403) : cljs.core.apply.call(null,G__46382,G__46383,G__46384,G__46385,G__46386,G__46387,G__46388,G__46389,G__46390,G__46391,G__46392,G__46393,G__46394,G__46395,G__46396,G__46397,G__46398,G__46399,G__46400,G__46401,G__46402,G__46403));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__46408 = o;
if(G__46408){
var bit__16826__auto__ = (G__46408.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16826__auto__) || (G__46408.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__46408.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__46408);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__46408);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__16133__auto__ = !((o == null));
if(and__16133__auto__){
var G__46412 = o;
if(G__46412){
var bit__16826__auto__ = (G__46412.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__46412.cljs$core$IMeta$)){
return true;
} else {
if((!G__46412.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__46412);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__46412);
}
} else {
return and__16133__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__46415__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__46416 = ret;
var G__46417 = cljs.core.first(ks);
var G__46418 = cljs.core.next(ks);
coll = G__46416;
k = G__46417;
ks = G__46418;
continue;
} else {
return ret;
}
}
break;
}
};
var G__46415 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__46419__i = 0, G__46419__a = new Array(arguments.length -  2);
while (G__46419__i < G__46419__a.length) {G__46419__a[G__46419__i] = arguments[G__46419__i + 2]; ++G__46419__i;}
  ks = new cljs.core.IndexedSeq(G__46419__a,0);
} 
return G__46415__delegate.call(this,coll,k,ks);};
G__46415.cljs$lang$maxFixedArity = 2;
G__46415.cljs$lang$applyTo = (function (arglist__46420){
var coll = cljs.core.first(arglist__46420);
arglist__46420 = cljs.core.next(arglist__46420);
var k = cljs.core.first(arglist__46420);
var ks = cljs.core.rest(arglist__46420);
return G__46415__delegate(coll,k,ks);
});
G__46415.cljs$core$IFn$_invoke$arity$variadic = G__46415__delegate;
return G__46415;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__46421 = null;
if (arguments.length > 2) {
var G__46422__i = 0, G__46422__a = new Array(arguments.length -  2);
while (G__46422__i < G__46422__a.length) {G__46422__a[G__46422__i] = arguments[G__46422__i + 2]; ++G__46422__i;}
G__46421 = new cljs.core.IndexedSeq(G__46422__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__46421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__46424 = x;
if(G__46424){
var bit__16826__auto__ = (G__46424.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16826__auto__) || (G__46424.cljs$core$ICollection$)){
return true;
} else {
if((!G__46424.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__46424);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__46424);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__46426 = x;
if(G__46426){
var bit__16826__auto__ = (G__46426.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16826__auto__) || (G__46426.cljs$core$ISet$)){
return true;
} else {
if((!G__46426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__46426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__46426);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__46428 = x;
if(G__46428){
var bit__16826__auto__ = (G__46428.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16826__auto__) || (G__46428.cljs$core$IAssociative$)){
return true;
} else {
if((!G__46428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__46428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__46428);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__46430 = x;
if(G__46430){
var bit__16826__auto__ = (G__46430.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16826__auto__) || (G__46430.cljs$core$ISequential$)){
return true;
} else {
if((!G__46430.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__46430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__46430);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__46432 = x;
if(G__46432){
var bit__16826__auto__ = (G__46432.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16826__auto__) || (G__46432.cljs$core$ISorted$)){
return true;
} else {
if((!G__46432.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__46432);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__46432);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__46434 = x;
if(G__46434){
var bit__16826__auto__ = (G__46434.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16826__auto__) || (G__46434.cljs$core$IReduce$)){
return true;
} else {
if((!G__46434.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__46434);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__46434);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__46436 = x;
if(G__46436){
var bit__16826__auto__ = (G__46436.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16826__auto__) || (G__46436.cljs$core$IMap$)){
return true;
} else {
if((!G__46436.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__46436);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__46436);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__46438 = x;
if(G__46438){
var bit__16826__auto__ = (G__46438.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16826__auto__) || (G__46438.cljs$core$IVector$)){
return true;
} else {
if((!G__46438.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__46438);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__46438);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__46440 = x;
if(G__46440){
var bit__16819__auto__ = (G__46440.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16819__auto__) || (G__46440.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj46446 = {};
return obj46446;
});
var js_obj__1 = (function() { 
var G__46449__delegate = function (keyvals){
var G__46447 = goog.object.create;
var G__46448 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__46447,G__46448) : cljs.core.apply.call(null,G__46447,G__46448));
};
var G__46449 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__46450__i = 0, G__46450__a = new Array(arguments.length -  0);
while (G__46450__i < G__46450__a.length) {G__46450__a[G__46450__i] = arguments[G__46450__i + 0]; ++G__46450__i;}
  keyvals = new cljs.core.IndexedSeq(G__46450__a,0);
} 
return G__46449__delegate.call(this,keyvals);};
G__46449.cljs$lang$maxFixedArity = 0;
G__46449.cljs$lang$applyTo = (function (arglist__46451){
var keyvals = cljs.core.seq(arglist__46451);
return G__46449__delegate(keyvals);
});
G__46449.cljs$core$IFn$_invoke$arity$variadic = G__46449__delegate;
return G__46449;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__46452 = null;
if (arguments.length > 0) {
var G__46453__i = 0, G__46453__a = new Array(arguments.length -  0);
while (G__46453__i < G__46453__a.length) {G__46453__a[G__46453__i] = arguments[G__46453__i + 0]; ++G__46453__i;}
G__46452 = new cljs.core.IndexedSeq(G__46453__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__46452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__46456_46458 = obj;
var G__46457_46459 = ((function (G__46456_46458,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__46456_46458,keys))
;
goog.object.forEach(G__46456_46458,G__46457_46459);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__46460 = (i__$1 + (1));
var G__46461 = (j__$1 + (1));
var G__46462 = (len__$1 - (1));
i__$1 = G__46460;
j__$1 = G__46461;
len__$1 = G__46462;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__46463 = (i__$1 - (1));
var G__46464 = (j__$1 - (1));
var G__46465 = (len__$1 - (1));
i__$1 = G__46463;
j__$1 = G__46464;
len__$1 = G__46465;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj46467 = {};
return obj46467;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__46469 = s;
if(G__46469){
var bit__16826__auto__ = (G__46469.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16826__auto__) || (G__46469.cljs$core$ISeq$)){
return true;
} else {
if((!G__46469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__46469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__46469);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__46471 = s;
if(G__46471){
var bit__16826__auto__ = (G__46471.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16826__auto__) || (G__46471.cljs$core$ISeqable$)){
return true;
} else {
if((!G__46471.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__46471);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__46471);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__16145__auto__ = cljs.core.fn_QMARK_(f);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__46475 = f;
if(G__46475){
var bit__16826__auto__ = (G__46475.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16826__auto__) || (G__46475.cljs$core$IFn$)){
return true;
} else {
if((!G__46475.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__46475);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__46475);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__46488 = n;
return isNaN(G__46488);
})())) && (!((n === Infinity))) && (((function (){var G__46489 = n;
return parseFloat(G__46489);
})() === (function (){var G__46490 = n;
var G__46491 = (10);
return parseInt(G__46490,G__46491);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__46492__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__46493 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__46494 = etc;
s = G__46493;
xs = G__46494;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__46492 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46495__i = 0, G__46495__a = new Array(arguments.length -  2);
while (G__46495__i < G__46495__a.length) {G__46495__a[G__46495__i] = arguments[G__46495__i + 2]; ++G__46495__i;}
  more = new cljs.core.IndexedSeq(G__46495__a,0);
} 
return G__46492__delegate.call(this,x,y,more);};
G__46492.cljs$lang$maxFixedArity = 2;
G__46492.cljs$lang$applyTo = (function (arglist__46496){
var x = cljs.core.first(arglist__46496);
arglist__46496 = cljs.core.next(arglist__46496);
var y = cljs.core.first(arglist__46496);
var more = cljs.core.rest(arglist__46496);
return G__46492__delegate(x,y,more);
});
G__46492.cljs$core$IFn$_invoke$arity$variadic = G__46492__delegate;
return G__46492;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__46497 = null;
if (arguments.length > 2) {
var G__46498__i = 0, G__46498__a = new Array(arguments.length -  2);
while (G__46498__i < G__46498__a.length) {G__46498__a[G__46498__i] = arguments[G__46498__i + 2]; ++G__46498__i;}
G__46497 = new cljs.core.IndexedSeq(G__46498__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__46502 = x;
if(G__46502){
var bit__16819__auto__ = (G__46502.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16819__auto__) || (G__46502.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__46503 = x;
var G__46504 = y;
return goog.array.defaultCompare(G__46503,G__46504);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__46509 = xs;
var G__46510 = ys;
var G__46511 = len;
var G__46512 = (n + (1));
xs = G__46509;
ys = G__46510;
len = G__46511;
n = G__46512;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__46517 = x;
var G__46518 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46517,G__46518) : f.call(null,G__46517,G__46518));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__46519 = y;
var G__46520 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46519,G__46520) : f.call(null,G__46519,G__46520));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__46526 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__46526) : cljs.core.to_array.call(null,G__46526));
})();
var G__46527_46529 = a;
var G__46528_46530 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__46527_46529,G__46528_46530);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__46536 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__46536) : keyfn.call(null,G__46536));
})(),(function (){var G__46537 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__46537) : keyfn.call(null,G__46537));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__46543 = f;
var G__46544 = cljs.core.first(s);
var G__46545 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__46543,G__46544,G__46545) : cljs.core.reduce.call(null,G__46543,G__46544,G__46545));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__46546 = val__$1;
var G__46547 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46546,G__46547) : f.call(null,G__46546,G__46547));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__46548 = nval;
var G__46549 = cljs.core.next(coll__$1);
val__$1 = G__46548;
coll__$1 = G__46549;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__46553 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__46553) : cljs.core.to_array.call(null,G__46553));
})();
var G__46554_46556 = a;
goog.array.shuffle(G__46554_46556);

var G__46555 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__46555) : cljs.core.vec.call(null,G__46555));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__46559 = coll;
if(G__46559){
var bit__16819__auto__ = (G__46559.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__46559.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__46560 = coll;
if(G__46560){
var bit__16819__auto__ = (G__46560.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16819__auto__) || (G__46560.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__46569 = null;
var G__46569__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__46569__1 = (function (x){
var G__46566 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__46566) : cf.call(null,G__46566));
});
var G__46569__2 = (function (x,y){
var G__46567 = x;
var G__46568 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__46567,G__46568) : f.call(null,G__46567,G__46568));
});
G__46569 = function(x,y){
switch(arguments.length){
case 0:
return G__46569__0.call(this);
case 1:
return G__46569__1.call(this,x);
case 2:
return G__46569__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46569.cljs$core$IFn$_invoke$arity$0 = G__46569__0;
G__46569.cljs$core$IFn$_invoke$arity$1 = G__46569__1;
G__46569.cljs$core$IFn$_invoke$arity$2 = G__46569__2;
return G__46569;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__46576 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__46576) : xform.call(null,G__46576));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__46577 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__46577) : f__$1.call(null,G__46577));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__46578__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__46578 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46579__i = 0, G__46579__a = new Array(arguments.length -  2);
while (G__46579__i < G__46579__a.length) {G__46579__a[G__46579__i] = arguments[G__46579__i + 2]; ++G__46579__i;}
  more = new cljs.core.IndexedSeq(G__46579__a,0);
} 
return G__46578__delegate.call(this,x,y,more);};
G__46578.cljs$lang$maxFixedArity = 2;
G__46578.cljs$lang$applyTo = (function (arglist__46580){
var x = cljs.core.first(arglist__46580);
arglist__46580 = cljs.core.next(arglist__46580);
var y = cljs.core.first(arglist__46580);
var more = cljs.core.rest(arglist__46580);
return G__46578__delegate(x,y,more);
});
G__46578.cljs$core$IFn$_invoke$arity$variadic = G__46578__delegate;
return G__46578;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__46581 = null;
if (arguments.length > 2) {
var G__46582__i = 0, G__46582__a = new Array(arguments.length -  2);
while (G__46582__i < G__46582__a.length) {G__46582__a[G__46582__i] = arguments[G__46582__i + 2]; ++G__46582__i;}
G__46581 = new cljs.core.IndexedSeq(G__46582__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__46583__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__46583 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46584__i = 0, G__46584__a = new Array(arguments.length -  2);
while (G__46584__i < G__46584__a.length) {G__46584__a[G__46584__i] = arguments[G__46584__i + 2]; ++G__46584__i;}
  more = new cljs.core.IndexedSeq(G__46584__a,0);
} 
return G__46583__delegate.call(this,x,y,more);};
G__46583.cljs$lang$maxFixedArity = 2;
G__46583.cljs$lang$applyTo = (function (arglist__46585){
var x = cljs.core.first(arglist__46585);
arglist__46585 = cljs.core.next(arglist__46585);
var y = cljs.core.first(arglist__46585);
var more = cljs.core.rest(arglist__46585);
return G__46583__delegate(x,y,more);
});
G__46583.cljs$core$IFn$_invoke$arity$variadic = G__46583__delegate;
return G__46583;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__46586 = null;
if (arguments.length > 2) {
var G__46587__i = 0, G__46587__a = new Array(arguments.length -  2);
while (G__46587__i < G__46587__a.length) {G__46587__a[G__46587__i] = arguments[G__46587__i + 2]; ++G__46587__i;}
G__46586 = new cljs.core.IndexedSeq(G__46587__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46586);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__46588__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__46588 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46589__i = 0, G__46589__a = new Array(arguments.length -  2);
while (G__46589__i < G__46589__a.length) {G__46589__a[G__46589__i] = arguments[G__46589__i + 2]; ++G__46589__i;}
  more = new cljs.core.IndexedSeq(G__46589__a,0);
} 
return G__46588__delegate.call(this,x,y,more);};
G__46588.cljs$lang$maxFixedArity = 2;
G__46588.cljs$lang$applyTo = (function (arglist__46590){
var x = cljs.core.first(arglist__46590);
arglist__46590 = cljs.core.next(arglist__46590);
var y = cljs.core.first(arglist__46590);
var more = cljs.core.rest(arglist__46590);
return G__46588__delegate(x,y,more);
});
G__46588.cljs$core$IFn$_invoke$arity$variadic = G__46588__delegate;
return G__46588;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__46591 = null;
if (arguments.length > 2) {
var G__46592__i = 0, G__46592__a = new Array(arguments.length -  2);
while (G__46592__i < G__46592__a.length) {G__46592__a[G__46592__i] = arguments[G__46592__i + 2]; ++G__46592__i;}
G__46591 = new cljs.core.IndexedSeq(G__46592__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__46597__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__46597 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46598__i = 0, G__46598__a = new Array(arguments.length -  2);
while (G__46598__i < G__46598__a.length) {G__46598__a[G__46598__i] = arguments[G__46598__i + 2]; ++G__46598__i;}
  more = new cljs.core.IndexedSeq(G__46598__a,0);
} 
return G__46597__delegate.call(this,x,y,more);};
G__46597.cljs$lang$maxFixedArity = 2;
G__46597.cljs$lang$applyTo = (function (arglist__46599){
var x = cljs.core.first(arglist__46599);
arglist__46599 = cljs.core.next(arglist__46599);
var y = cljs.core.first(arglist__46599);
var more = cljs.core.rest(arglist__46599);
return G__46597__delegate(x,y,more);
});
G__46597.cljs$core$IFn$_invoke$arity$variadic = G__46597__delegate;
return G__46597;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__46600 = null;
if (arguments.length > 2) {
var G__46601__i = 0, G__46601__a = new Array(arguments.length -  2);
while (G__46601__i < G__46601__a.length) {G__46601__a[G__46601__i] = arguments[G__46601__i + 2]; ++G__46601__i;}
G__46600 = new cljs.core.IndexedSeq(G__46601__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__46602__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__46603 = y;
var G__46604 = cljs.core.first(more);
var G__46605 = cljs.core.next(more);
x = G__46603;
y = G__46604;
more = G__46605;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__46602 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46606__i = 0, G__46606__a = new Array(arguments.length -  2);
while (G__46606__i < G__46606__a.length) {G__46606__a[G__46606__i] = arguments[G__46606__i + 2]; ++G__46606__i;}
  more = new cljs.core.IndexedSeq(G__46606__a,0);
} 
return G__46602__delegate.call(this,x,y,more);};
G__46602.cljs$lang$maxFixedArity = 2;
G__46602.cljs$lang$applyTo = (function (arglist__46607){
var x = cljs.core.first(arglist__46607);
arglist__46607 = cljs.core.next(arglist__46607);
var y = cljs.core.first(arglist__46607);
var more = cljs.core.rest(arglist__46607);
return G__46602__delegate(x,y,more);
});
G__46602.cljs$core$IFn$_invoke$arity$variadic = G__46602__delegate;
return G__46602;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__46608 = null;
if (arguments.length > 2) {
var G__46609__i = 0, G__46609__a = new Array(arguments.length -  2);
while (G__46609__i < G__46609__a.length) {G__46609__a[G__46609__i] = arguments[G__46609__i + 2]; ++G__46609__i;}
G__46608 = new cljs.core.IndexedSeq(G__46609__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46608);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__46610__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__46611 = y;
var G__46612 = cljs.core.first(more);
var G__46613 = cljs.core.next(more);
x = G__46611;
y = G__46612;
more = G__46613;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__46610 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46614__i = 0, G__46614__a = new Array(arguments.length -  2);
while (G__46614__i < G__46614__a.length) {G__46614__a[G__46614__i] = arguments[G__46614__i + 2]; ++G__46614__i;}
  more = new cljs.core.IndexedSeq(G__46614__a,0);
} 
return G__46610__delegate.call(this,x,y,more);};
G__46610.cljs$lang$maxFixedArity = 2;
G__46610.cljs$lang$applyTo = (function (arglist__46615){
var x = cljs.core.first(arglist__46615);
arglist__46615 = cljs.core.next(arglist__46615);
var y = cljs.core.first(arglist__46615);
var more = cljs.core.rest(arglist__46615);
return G__46610__delegate(x,y,more);
});
G__46610.cljs$core$IFn$_invoke$arity$variadic = G__46610__delegate;
return G__46610;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__46616 = null;
if (arguments.length > 2) {
var G__46617__i = 0, G__46617__a = new Array(arguments.length -  2);
while (G__46617__i < G__46617__a.length) {G__46617__a[G__46617__i] = arguments[G__46617__i + 2]; ++G__46617__i;}
G__46616 = new cljs.core.IndexedSeq(G__46617__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__46618__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__46619 = y;
var G__46620 = cljs.core.first(more);
var G__46621 = cljs.core.next(more);
x = G__46619;
y = G__46620;
more = G__46621;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__46618 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46622__i = 0, G__46622__a = new Array(arguments.length -  2);
while (G__46622__i < G__46622__a.length) {G__46622__a[G__46622__i] = arguments[G__46622__i + 2]; ++G__46622__i;}
  more = new cljs.core.IndexedSeq(G__46622__a,0);
} 
return G__46618__delegate.call(this,x,y,more);};
G__46618.cljs$lang$maxFixedArity = 2;
G__46618.cljs$lang$applyTo = (function (arglist__46623){
var x = cljs.core.first(arglist__46623);
arglist__46623 = cljs.core.next(arglist__46623);
var y = cljs.core.first(arglist__46623);
var more = cljs.core.rest(arglist__46623);
return G__46618__delegate(x,y,more);
});
G__46618.cljs$core$IFn$_invoke$arity$variadic = G__46618__delegate;
return G__46618;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__46624 = null;
if (arguments.length > 2) {
var G__46625__i = 0, G__46625__a = new Array(arguments.length -  2);
while (G__46625__i < G__46625__a.length) {G__46625__a[G__46625__i] = arguments[G__46625__i + 2]; ++G__46625__i;}
G__46624 = new cljs.core.IndexedSeq(G__46625__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__46626__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__46627 = y;
var G__46628 = cljs.core.first(more);
var G__46629 = cljs.core.next(more);
x = G__46627;
y = G__46628;
more = G__46629;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__46626 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46630__i = 0, G__46630__a = new Array(arguments.length -  2);
while (G__46630__i < G__46630__a.length) {G__46630__a[G__46630__i] = arguments[G__46630__i + 2]; ++G__46630__i;}
  more = new cljs.core.IndexedSeq(G__46630__a,0);
} 
return G__46626__delegate.call(this,x,y,more);};
G__46626.cljs$lang$maxFixedArity = 2;
G__46626.cljs$lang$applyTo = (function (arglist__46631){
var x = cljs.core.first(arglist__46631);
arglist__46631 = cljs.core.next(arglist__46631);
var y = cljs.core.first(arglist__46631);
var more = cljs.core.rest(arglist__46631);
return G__46626__delegate(x,y,more);
});
G__46626.cljs$core$IFn$_invoke$arity$variadic = G__46626__delegate;
return G__46626;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__46632 = null;
if (arguments.length > 2) {
var G__46633__i = 0, G__46633__a = new Array(arguments.length -  2);
while (G__46633__i < G__46633__a.length) {G__46633__a[G__46633__i] = arguments[G__46633__i + 2]; ++G__46633__i;}
G__46632 = new cljs.core.IndexedSeq(G__46633__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46632);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
});
var max__3 = (function() { 
var G__46634__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__16462__auto__ = x;
var y__16463__auto__ = y;
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})(),more);
};
var G__46634 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46635__i = 0, G__46635__a = new Array(arguments.length -  2);
while (G__46635__i < G__46635__a.length) {G__46635__a[G__46635__i] = arguments[G__46635__i + 2]; ++G__46635__i;}
  more = new cljs.core.IndexedSeq(G__46635__a,0);
} 
return G__46634__delegate.call(this,x,y,more);};
G__46634.cljs$lang$maxFixedArity = 2;
G__46634.cljs$lang$applyTo = (function (arglist__46636){
var x = cljs.core.first(arglist__46636);
arglist__46636 = cljs.core.next(arglist__46636);
var y = cljs.core.first(arglist__46636);
var more = cljs.core.rest(arglist__46636);
return G__46634__delegate(x,y,more);
});
G__46634.cljs$core$IFn$_invoke$arity$variadic = G__46634__delegate;
return G__46634;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__46637 = null;
if (arguments.length > 2) {
var G__46638__i = 0, G__46638__a = new Array(arguments.length -  2);
while (G__46638__i < G__46638__a.length) {G__46638__a[G__46638__i] = arguments[G__46638__i + 2]; ++G__46638__i;}
G__46637 = new cljs.core.IndexedSeq(G__46638__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46637);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
});
var min__3 = (function() { 
var G__46639__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__16469__auto__ = x;
var y__16470__auto__ = y;
return ((x__16469__auto__ < y__16470__auto__) ? x__16469__auto__ : y__16470__auto__);
})(),more);
};
var G__46639 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46640__i = 0, G__46640__a = new Array(arguments.length -  2);
while (G__46640__i < G__46640__a.length) {G__46640__a[G__46640__i] = arguments[G__46640__i + 2]; ++G__46640__i;}
  more = new cljs.core.IndexedSeq(G__46640__a,0);
} 
return G__46639__delegate.call(this,x,y,more);};
G__46639.cljs$lang$maxFixedArity = 2;
G__46639.cljs$lang$applyTo = (function (arglist__46641){
var x = cljs.core.first(arglist__46641);
arglist__46641 = cljs.core.next(arglist__46641);
var y = cljs.core.first(arglist__46641);
var more = cljs.core.rest(arglist__46641);
return G__46639__delegate(x,y,more);
});
G__46639.cljs$core$IFn$_invoke$arity$variadic = G__46639__delegate;
return G__46639;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__46642 = null;
if (arguments.length > 2) {
var G__46643__i = 0, G__46643__a = new Array(arguments.length -  2);
while (G__46643__i < G__46643__a.length) {G__46643__a[G__46643__i] = arguments[G__46643__i + 2]; ++G__46643__i;}
G__46642 = new cljs.core.IndexedSeq(G__46643__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46642);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__46644__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__46644 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46645__i = 0, G__46645__a = new Array(arguments.length -  2);
while (G__46645__i < G__46645__a.length) {G__46645__a[G__46645__i] = arguments[G__46645__i + 2]; ++G__46645__i;}
  more = new cljs.core.IndexedSeq(G__46645__a,0);
} 
return G__46644__delegate.call(this,x,y,more);};
G__46644.cljs$lang$maxFixedArity = 2;
G__46644.cljs$lang$applyTo = (function (arglist__46646){
var x = cljs.core.first(arglist__46646);
arglist__46646 = cljs.core.next(arglist__46646);
var y = cljs.core.first(arglist__46646);
var more = cljs.core.rest(arglist__46646);
return G__46644__delegate(x,y,more);
});
G__46644.cljs$core$IFn$_invoke$arity$variadic = G__46644__delegate;
return G__46644;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__46647 = null;
if (arguments.length > 2) {
var G__46648__i = 0, G__46648__a = new Array(arguments.length -  2);
while (G__46648__i < G__46648__a.length) {G__46648__a[G__46648__i] = arguments[G__46648__i + 2]; ++G__46648__i;}
G__46647 = new cljs.core.IndexedSeq(G__46648__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__46649__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__46649 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46650__i = 0, G__46650__a = new Array(arguments.length -  2);
while (G__46650__i < G__46650__a.length) {G__46650__a[G__46650__i] = arguments[G__46650__i + 2]; ++G__46650__i;}
  more = new cljs.core.IndexedSeq(G__46650__a,0);
} 
return G__46649__delegate.call(this,x,y,more);};
G__46649.cljs$lang$maxFixedArity = 2;
G__46649.cljs$lang$applyTo = (function (arglist__46651){
var x = cljs.core.first(arglist__46651);
arglist__46651 = cljs.core.next(arglist__46651);
var y = cljs.core.first(arglist__46651);
var more = cljs.core.rest(arglist__46651);
return G__46649__delegate(x,y,more);
});
G__46649.cljs$core$IFn$_invoke$arity$variadic = G__46649__delegate;
return G__46649;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__46652 = null;
if (arguments.length > 2) {
var G__46653__i = 0, G__46653__a = new Array(arguments.length -  2);
while (G__46653__i < G__46653__a.length) {G__46653__a[G__46653__i] = arguments[G__46653__i + 2]; ++G__46653__i;}
G__46652 = new cljs.core.IndexedSeq(G__46653__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__46658__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__46658 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46659__i = 0, G__46659__a = new Array(arguments.length -  2);
while (G__46659__i < G__46659__a.length) {G__46659__a[G__46659__i] = arguments[G__46659__i + 2]; ++G__46659__i;}
  more = new cljs.core.IndexedSeq(G__46659__a,0);
} 
return G__46658__delegate.call(this,x,y,more);};
G__46658.cljs$lang$maxFixedArity = 2;
G__46658.cljs$lang$applyTo = (function (arglist__46660){
var x = cljs.core.first(arglist__46660);
arglist__46660 = cljs.core.next(arglist__46660);
var y = cljs.core.first(arglist__46660);
var more = cljs.core.rest(arglist__46660);
return G__46658__delegate(x,y,more);
});
G__46658.cljs$core$IFn$_invoke$arity$variadic = G__46658__delegate;
return G__46658;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__46661 = null;
if (arguments.length > 2) {
var G__46662__i = 0, G__46662__a = new Array(arguments.length -  2);
while (G__46662__i < G__46662__a.length) {G__46662__a[G__46662__i] = arguments[G__46662__i + 2]; ++G__46662__i;}
G__46661 = new cljs.core.IndexedSeq(G__46662__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46661);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__46663__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__46663 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46664__i = 0, G__46664__a = new Array(arguments.length -  2);
while (G__46664__i < G__46664__a.length) {G__46664__a[G__46664__i] = arguments[G__46664__i + 2]; ++G__46664__i;}
  more = new cljs.core.IndexedSeq(G__46664__a,0);
} 
return G__46663__delegate.call(this,x,y,more);};
G__46663.cljs$lang$maxFixedArity = 2;
G__46663.cljs$lang$applyTo = (function (arglist__46665){
var x = cljs.core.first(arglist__46665);
arglist__46665 = cljs.core.next(arglist__46665);
var y = cljs.core.first(arglist__46665);
var more = cljs.core.rest(arglist__46665);
return G__46663__delegate(x,y,more);
});
G__46663.cljs$core$IFn$_invoke$arity$variadic = G__46663__delegate;
return G__46663;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__46666 = null;
if (arguments.length > 2) {
var G__46667__i = 0, G__46667__a = new Array(arguments.length -  2);
while (G__46667__i < G__46667__a.length) {G__46667__a[G__46667__i] = arguments[G__46667__i + 2]; ++G__46667__i;}
G__46666 = new cljs.core.IndexedSeq(G__46667__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__46668__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__46668 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46669__i = 0, G__46669__a = new Array(arguments.length -  2);
while (G__46669__i < G__46669__a.length) {G__46669__a[G__46669__i] = arguments[G__46669__i + 2]; ++G__46669__i;}
  more = new cljs.core.IndexedSeq(G__46669__a,0);
} 
return G__46668__delegate.call(this,x,y,more);};
G__46668.cljs$lang$maxFixedArity = 2;
G__46668.cljs$lang$applyTo = (function (arglist__46670){
var x = cljs.core.first(arglist__46670);
arglist__46670 = cljs.core.next(arglist__46670);
var y = cljs.core.first(arglist__46670);
var more = cljs.core.rest(arglist__46670);
return G__46668__delegate(x,y,more);
});
G__46668.cljs$core$IFn$_invoke$arity$variadic = G__46668__delegate;
return G__46668;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__46671 = null;
if (arguments.length > 2) {
var G__46672__i = 0, G__46672__a = new Array(arguments.length -  2);
while (G__46672__i < G__46672__a.length) {G__46672__a[G__46672__i] = arguments[G__46672__i + 2]; ++G__46672__i;}
G__46671 = new cljs.core.IndexedSeq(G__46672__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__46675 = x;
var G__46676 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__46675,G__46676) : cljs.core.mod.call(null,G__46675,G__46676));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__46677__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__46677 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46678__i = 0, G__46678__a = new Array(arguments.length -  2);
while (G__46678__i < G__46678__a.length) {G__46678__a[G__46678__i] = arguments[G__46678__i + 2]; ++G__46678__i;}
  more = new cljs.core.IndexedSeq(G__46678__a,0);
} 
return G__46677__delegate.call(this,x,y,more);};
G__46677.cljs$lang$maxFixedArity = 2;
G__46677.cljs$lang$applyTo = (function (arglist__46679){
var x = cljs.core.first(arglist__46679);
arglist__46679 = cljs.core.next(arglist__46679);
var y = cljs.core.first(arglist__46679);
var more = cljs.core.rest(arglist__46679);
return G__46677__delegate(x,y,more);
});
G__46677.cljs$core$IFn$_invoke$arity$variadic = G__46677__delegate;
return G__46677;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__46680 = null;
if (arguments.length > 2) {
var G__46681__i = 0, G__46681__a = new Array(arguments.length -  2);
while (G__46681__i < G__46681__a.length) {G__46681__a[G__46681__i] = arguments[G__46681__i + 2]; ++G__46681__i;}
G__46680 = new cljs.core.IndexedSeq(G__46681__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__46682__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__46682 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46683__i = 0, G__46683__a = new Array(arguments.length -  2);
while (G__46683__i < G__46683__a.length) {G__46683__a[G__46683__i] = arguments[G__46683__i + 2]; ++G__46683__i;}
  more = new cljs.core.IndexedSeq(G__46683__a,0);
} 
return G__46682__delegate.call(this,x,y,more);};
G__46682.cljs$lang$maxFixedArity = 2;
G__46682.cljs$lang$applyTo = (function (arglist__46684){
var x = cljs.core.first(arglist__46684);
arglist__46684 = cljs.core.next(arglist__46684);
var y = cljs.core.first(arglist__46684);
var more = cljs.core.rest(arglist__46684);
return G__46682__delegate(x,y,more);
});
G__46682.cljs$core$IFn$_invoke$arity$variadic = G__46682__delegate;
return G__46682;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__46685 = null;
if (arguments.length > 2) {
var G__46686__i = 0, G__46686__a = new Array(arguments.length -  2);
while (G__46686__i < G__46686__a.length) {G__46686__a[G__46686__i] = arguments[G__46686__i + 2]; ++G__46686__i;}
G__46685 = new cljs.core.IndexedSeq(G__46686__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__46689 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__46689) : Math.floor.call(null,G__46689));
} else {
var G__46690 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__46690) : Math.ceil.call(null,G__46690));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__46691__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__46691 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46692__i = 0, G__46692__a = new Array(arguments.length -  2);
while (G__46692__i < G__46692__a.length) {G__46692__a[G__46692__i] = arguments[G__46692__i + 2]; ++G__46692__i;}
  more = new cljs.core.IndexedSeq(G__46692__a,0);
} 
return G__46691__delegate.call(this,x,y,more);};
G__46691.cljs$lang$maxFixedArity = 2;
G__46691.cljs$lang$applyTo = (function (arglist__46693){
var x = cljs.core.first(arglist__46693);
arglist__46693 = cljs.core.next(arglist__46693);
var y = cljs.core.first(arglist__46693);
var more = cljs.core.rest(arglist__46693);
return G__46691__delegate(x,y,more);
});
G__46691.cljs$core$IFn$_invoke$arity$variadic = G__46691__delegate;
return G__46691;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__46694 = null;
if (arguments.length > 2) {
var G__46695__i = 0, G__46695__a = new Array(arguments.length -  2);
while (G__46695__i < G__46695__a.length) {G__46695__a[G__46695__i] = arguments[G__46695__i + 2]; ++G__46695__i;}
G__46694 = new cljs.core.IndexedSeq(G__46695__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__46696__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__46696 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46697__i = 0, G__46697__a = new Array(arguments.length -  2);
while (G__46697__i < G__46697__a.length) {G__46697__a[G__46697__i] = arguments[G__46697__i + 2]; ++G__46697__i;}
  more = new cljs.core.IndexedSeq(G__46697__a,0);
} 
return G__46696__delegate.call(this,x,y,more);};
G__46696.cljs$lang$maxFixedArity = 2;
G__46696.cljs$lang$applyTo = (function (arglist__46698){
var x = cljs.core.first(arglist__46698);
arglist__46698 = cljs.core.next(arglist__46698);
var y = cljs.core.first(arglist__46698);
var more = cljs.core.rest(arglist__46698);
return G__46696__delegate(x,y,more);
});
G__46696.cljs$core$IFn$_invoke$arity$variadic = G__46696__delegate;
return G__46696;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__46699 = null;
if (arguments.length > 2) {
var G__46700__i = 0, G__46700__a = new Array(arguments.length -  2);
while (G__46700__i < G__46700__a.length) {G__46700__a[G__46700__i] = arguments[G__46700__i + 2]; ++G__46700__i;}
G__46699 = new cljs.core.IndexedSeq(G__46700__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__46701__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__46701 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46702__i = 0, G__46702__a = new Array(arguments.length -  2);
while (G__46702__i < G__46702__a.length) {G__46702__a[G__46702__i] = arguments[G__46702__i + 2]; ++G__46702__i;}
  more = new cljs.core.IndexedSeq(G__46702__a,0);
} 
return G__46701__delegate.call(this,x,y,more);};
G__46701.cljs$lang$maxFixedArity = 2;
G__46701.cljs$lang$applyTo = (function (arglist__46703){
var x = cljs.core.first(arglist__46703);
arglist__46703 = cljs.core.next(arglist__46703);
var y = cljs.core.first(arglist__46703);
var more = cljs.core.rest(arglist__46703);
return G__46701__delegate(x,y,more);
});
G__46701.cljs$core$IFn$_invoke$arity$variadic = G__46701__delegate;
return G__46701;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__46704 = null;
if (arguments.length > 2) {
var G__46705__i = 0, G__46705__a = new Array(arguments.length -  2);
while (G__46705__i < G__46705__a.length) {G__46705__a[G__46705__i] = arguments[G__46705__i + 2]; ++G__46705__i;}
G__46704 = new cljs.core.IndexedSeq(G__46705__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__46706__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__46706 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46707__i = 0, G__46707__a = new Array(arguments.length -  2);
while (G__46707__i < G__46707__a.length) {G__46707__a[G__46707__i] = arguments[G__46707__i + 2]; ++G__46707__i;}
  more = new cljs.core.IndexedSeq(G__46707__a,0);
} 
return G__46706__delegate.call(this,x,y,more);};
G__46706.cljs$lang$maxFixedArity = 2;
G__46706.cljs$lang$applyTo = (function (arglist__46708){
var x = cljs.core.first(arglist__46708);
arglist__46708 = cljs.core.next(arglist__46708);
var y = cljs.core.first(arglist__46708);
var more = cljs.core.rest(arglist__46708);
return G__46706__delegate(x,y,more);
});
G__46706.cljs$core$IFn$_invoke$arity$variadic = G__46706__delegate;
return G__46706;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__46709 = null;
if (arguments.length > 2) {
var G__46710__i = 0, G__46710__a = new Array(arguments.length -  2);
while (G__46710__i < G__46710__a.length) {G__46710__a[G__46710__i] = arguments[G__46710__i + 2]; ++G__46710__i;}
G__46709 = new cljs.core.IndexedSeq(G__46710__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__46715__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__46716 = y;
var G__46717 = cljs.core.first(more);
var G__46718 = cljs.core.next(more);
x = G__46716;
y = G__46717;
more = G__46718;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__46715 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__46719__i = 0, G__46719__a = new Array(arguments.length -  2);
while (G__46719__i < G__46719__a.length) {G__46719__a[G__46719__i] = arguments[G__46719__i + 2]; ++G__46719__i;}
  more = new cljs.core.IndexedSeq(G__46719__a,0);
} 
return G__46715__delegate.call(this,x,y,more);};
G__46715.cljs$lang$maxFixedArity = 2;
G__46715.cljs$lang$applyTo = (function (arglist__46720){
var x = cljs.core.first(arglist__46720);
arglist__46720 = cljs.core.next(arglist__46720);
var y = cljs.core.first(arglist__46720);
var more = cljs.core.rest(arglist__46720);
return G__46715__delegate(x,y,more);
});
G__46715.cljs$core$IFn$_invoke$arity$variadic = G__46715__delegate;
return G__46715;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__46721 = null;
if (arguments.length > 2) {
var G__46722__i = 0, G__46722__a = new Array(arguments.length -  2);
while (G__46722__i < G__46722__a.length) {G__46722__a[G__46722__i] = arguments[G__46722__i + 2]; ++G__46722__i;}
G__46721 = new cljs.core.IndexedSeq(G__46722__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__46723 = (n__$1 - (1));
var G__46724 = cljs.core.next(xs);
n__$1 = G__46723;
xs = G__46724;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__46728 = x;
return goog.string.buildString(G__46728);
}
});
var str__2 = (function() { 
var G__46729__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__46730 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__46731 = cljs.core.next(more);
sb = G__46730;
more = G__46731;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__46729 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__46732__i = 0, G__46732__a = new Array(arguments.length -  1);
while (G__46732__i < G__46732__a.length) {G__46732__a[G__46732__i] = arguments[G__46732__i + 1]; ++G__46732__i;}
  ys = new cljs.core.IndexedSeq(G__46732__a,0);
} 
return G__46729__delegate.call(this,x,ys);};
G__46729.cljs$lang$maxFixedArity = 1;
G__46729.cljs$lang$applyTo = (function (arglist__46733){
var x = cljs.core.first(arglist__46733);
var ys = cljs.core.rest(arglist__46733);
return G__46729__delegate(x,ys);
});
G__46729.cljs$core$IFn$_invoke$arity$variadic = G__46729__delegate;
return G__46729;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__46734 = null;
if (arguments.length > 1) {
var G__46735__i = 0, G__46735__a = new Array(arguments.length -  1);
while (G__46735__i < G__46735__a.length) {G__46735__a[G__46735__i] = arguments[G__46735__i + 1]; ++G__46735__i;}
G__46734 = new cljs.core.IndexedSeq(G__46735__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__46734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__46736 = cljs.core.next(xs);
var G__46737 = cljs.core.next(ys);
xs = G__46736;
ys = G__46737;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__46738 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__46739 = cljs.core.next(s);
res = G__46738;
s = G__46739;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__46744 = ((h + (cljs.core.hash((function (){var G__46742 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__46742) : cljs.core.key.call(null,G__46742));
})()) ^ cljs.core.hash((function (){var G__46743 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__46743) : cljs.core.val.call(null,G__46743));
})()))) % (4503599627370496));
var G__46745 = cljs.core.next(s);
h = G__46744;
s = G__46745;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__46746 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__46747 = cljs.core.next(s__$1);
h = G__46746;
s__$1 = G__46747;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__46758_46768 = cljs.core.seq(fn_map);
var chunk__46759_46769 = null;
var count__46760_46770 = (0);
var i__46761_46771 = (0);
while(true){
if((i__46761_46771 < count__46760_46770)){
var vec__46762_46772 = chunk__46759_46769.cljs$core$IIndexed$_nth$arity$2(null,i__46761_46771);
var key_name_46773 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46762_46772,(0),null);
var f_46774 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46762_46772,(1),null);
var str_name_46775 = (function (){var G__46763 = key_name_46773;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__46763) : cljs.core.name.call(null,G__46763));
})();
(obj[str_name_46775] = f_46774);

var G__46776 = seq__46758_46768;
var G__46777 = chunk__46759_46769;
var G__46778 = count__46760_46770;
var G__46779 = (i__46761_46771 + (1));
seq__46758_46768 = G__46776;
chunk__46759_46769 = G__46777;
count__46760_46770 = G__46778;
i__46761_46771 = G__46779;
continue;
} else {
var temp__4126__auto___46780 = cljs.core.seq(seq__46758_46768);
if(temp__4126__auto___46780){
var seq__46758_46781__$1 = temp__4126__auto___46780;
if(cljs.core.chunked_seq_QMARK_(seq__46758_46781__$1)){
var c__16932__auto___46782 = (function (){var G__46764 = seq__46758_46781__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__46764) : cljs.core.chunk_first.call(null,G__46764));
})();
var G__46783 = (function (){var G__46765 = seq__46758_46781__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__46765) : cljs.core.chunk_rest.call(null,G__46765));
})();
var G__46784 = c__16932__auto___46782;
var G__46785 = cljs.core.count(c__16932__auto___46782);
var G__46786 = (0);
seq__46758_46768 = G__46783;
chunk__46759_46769 = G__46784;
count__46760_46770 = G__46785;
i__46761_46771 = G__46786;
continue;
} else {
var vec__46766_46787 = cljs.core.first(seq__46758_46781__$1);
var key_name_46788 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46766_46787,(0),null);
var f_46789 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46766_46787,(1),null);
var str_name_46790 = (function (){var G__46767 = key_name_46788;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__46767) : cljs.core.name.call(null,G__46767));
})();
(obj[str_name_46790] = f_46789);

var G__46791 = cljs.core.next(seq__46758_46781__$1);
var G__46792 = null;
var G__46793 = (0);
var G__46794 = (0);
seq__46758_46768 = G__46791;
chunk__46759_46769 = G__46792;
count__46760_46770 = G__46793;
i__46761_46771 = G__46794;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__46796 = coll;
if(G__46796){
var bit__16826__auto__ = (G__46796.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16826__auto__) || (G__46796.cljs$core$IReversible$)){
return true;
} else {
if((!G__46796.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__46796);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__46796);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__46797 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__46797;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__46798 = (i - (1));
var G__46799 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__46798;
r = G__46799;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__46800__i = 0, G__46800__a = new Array(arguments.length -  0);
while (G__46800__i < G__46800__a.length) {G__46800__a[G__46800__i] = arguments[G__46800__i + 0]; ++G__46800__i;}
  xs = new cljs.core.IndexedSeq(G__46800__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__46801){
var xs = cljs.core.seq(arglist__46801);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__16145__auto__ = (coll == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var G__46805 = coll;
if(G__46805){
var bit__16819__auto__ = (G__46805.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16819__auto__) || (G__46805.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__46807 = x;
if(G__46807){
var bit__16826__auto__ = (G__46807.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16826__auto__) || (G__46807.cljs$core$IList$)){
return true;
} else {
if((!G__46807.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__46807);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__46807);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.not(a.ns);
if(and__16133__auto__){
return b.ns;
} else {
return and__16133__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__46814 = a.ns;
var G__46815 = b.ns;
return goog.array.defaultCompare(G__46814,G__46815);
})();
if(((0) === nsc)){
var G__46816 = a.name;
var G__46817 = b.name;
return goog.array.defaultCompare(G__46816,G__46817);
} else {
return nsc;
}
}
} else {
var G__46818 = a.name;
var G__46819 = b.name;
return goog.array.defaultCompare(G__46818,G__46819);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16566__auto__ = self__._hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__46821 = null;
var G__46821__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__46821__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__46821 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__46821__2.call(this,self__,coll);
case 3:
return G__46821__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__46821.cljs$core$IFn$_invoke$arity$2 = G__46821__2;
G__46821.cljs$core$IFn$_invoke$arity$3 = G__46821__3;
return G__46821;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args46820){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args46820)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__46823 = x;
if(G__46823){
var bit__16819__auto__ = (G__46823.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__46823.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__46825 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__46825) : cljs.core.name.call(null,G__46825));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__46826 = ls.sval();
ls = G__46826;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__46828 = s;
if(G__46828){
var bit__16819__auto__ = (G__46828.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16819__auto__) || (G__46828.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__46829 = cljs.core.next(s__$1);
s__$1 = G__46829;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_46830 = (0);
var xs_46831 = cljs.core.seq(coll);
while(true){
if(xs_46831){
(ret[i_46830] = cljs.core.to_array(cljs.core.first(xs_46831)));

var G__46832 = (i_46830 + (1));
var G__46833 = cljs.core.next(xs_46831);
i_46830 = G__46832;
xs_46831 = G__46833;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__46836 = (i + (1));
var G__46837 = cljs.core.next(s__$1);
i = G__46836;
s__$1 = G__46837;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___46838 = size;
var i_46839 = (0);
while(true){
if((i_46839 < n__17032__auto___46838)){
(a[i_46839] = init_val_or_seq);

var G__46840 = (i_46839 + (1));
i_46839 = G__46840;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__46843 = (i + (1));
var G__46844 = cljs.core.next(s__$1);
i = G__46843;
s__$1 = G__46844;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___46845 = size;
var i_46846 = (0);
while(true){
if((i_46846 < n__17032__auto___46845)){
(a[i_46846] = init_val_or_seq);

var G__46847 = (i_46846 + (1));
i_46846 = G__46847;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__46850 = (i + (1));
var G__46851 = cljs.core.next(s__$1);
i = G__46850;
s__$1 = G__46851;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___46852 = size;
var i_46853 = (0);
while(true){
if((i_46853 < n__17032__auto___46852)){
(a[i_46853] = init_val_or_seq);

var G__46854 = (i_46853 + (1));
i_46853 = G__46854;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__46857 = (i + (1));
var G__46858 = cljs.core.next(s__$1);
i = G__46857;
s__$1 = G__46858;
continue;
} else {
return a;
}
break;
}
} else {
var n__17032__auto___46859 = size;
var i_46860 = (0);
while(true){
if((i_46860 < n__17032__auto___46859)){
(a[i_46860] = init_val_or_seq);

var G__46861 = (i_46860 + (1));
i_46860 = G__46861;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__46862 = cljs.core.next(s__$1);
var G__46863 = (i - (1));
var G__46864 = (sum + (1));
s__$1 = G__46862;
i = G__46863;
sum = G__46864;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__46884__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__46884 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__46885__i = 0, G__46885__a = new Array(arguments.length -  2);
while (G__46885__i < G__46885__a.length) {G__46885__a[G__46885__i] = arguments[G__46885__i + 2]; ++G__46885__i;}
  zs = new cljs.core.IndexedSeq(G__46885__a,0);
} 
return G__46884__delegate.call(this,x,y,zs);};
G__46884.cljs$lang$maxFixedArity = 2;
G__46884.cljs$lang$applyTo = (function (arglist__46886){
var x = cljs.core.first(arglist__46886);
arglist__46886 = cljs.core.next(arglist__46886);
var y = cljs.core.first(arglist__46886);
var zs = cljs.core.rest(arglist__46886);
return G__46884__delegate(x,y,zs);
});
G__46884.cljs$core$IFn$_invoke$arity$variadic = G__46884__delegate;
return G__46884;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__46887 = null;
if (arguments.length > 2) {
var G__46888__i = 0, G__46888__a = new Array(arguments.length -  2);
while (G__46888__i < G__46888__a.length) {G__46888__a[G__46888__i] = arguments[G__46888__i + 2]; ++G__46888__i;}
G__46887 = new cljs.core.IndexedSeq(G__46888__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__46887);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__46889__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__46889 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__46890__i = 0, G__46890__a = new Array(arguments.length -  4);
while (G__46890__i < G__46890__a.length) {G__46890__a[G__46890__i] = arguments[G__46890__i + 4]; ++G__46890__i;}
  more = new cljs.core.IndexedSeq(G__46890__a,0);
} 
return G__46889__delegate.call(this,a,b,c,d,more);};
G__46889.cljs$lang$maxFixedArity = 4;
G__46889.cljs$lang$applyTo = (function (arglist__46891){
var a = cljs.core.first(arglist__46891);
arglist__46891 = cljs.core.next(arglist__46891);
var b = cljs.core.first(arglist__46891);
arglist__46891 = cljs.core.next(arglist__46891);
var c = cljs.core.first(arglist__46891);
arglist__46891 = cljs.core.next(arglist__46891);
var d = cljs.core.first(arglist__46891);
var more = cljs.core.rest(arglist__46891);
return G__46889__delegate(a,b,c,d,more);
});
G__46889.cljs$core$IFn$_invoke$arity$variadic = G__46889__delegate;
return G__46889;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__46892 = null;
if (arguments.length > 4) {
var G__46893__i = 0, G__46893__a = new Array(arguments.length -  4);
while (G__46893__i < G__46893__a.length) {G__46893__a[G__46893__i] = arguments[G__46893__i + 4]; ++G__46893__i;}
G__46892 = new cljs.core.IndexedSeq(G__46893__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__46892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__46894__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__46895 = ntcoll;
var G__46896 = cljs.core.first(vals);
var G__46897 = cljs.core.next(vals);
tcoll = G__46895;
val = G__46896;
vals = G__46897;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__46894 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__46898__i = 0, G__46898__a = new Array(arguments.length -  2);
while (G__46898__i < G__46898__a.length) {G__46898__a[G__46898__i] = arguments[G__46898__i + 2]; ++G__46898__i;}
  vals = new cljs.core.IndexedSeq(G__46898__a,0);
} 
return G__46894__delegate.call(this,tcoll,val,vals);};
G__46894.cljs$lang$maxFixedArity = 2;
G__46894.cljs$lang$applyTo = (function (arglist__46899){
var tcoll = cljs.core.first(arglist__46899);
arglist__46899 = cljs.core.next(arglist__46899);
var val = cljs.core.first(arglist__46899);
var vals = cljs.core.rest(arglist__46899);
return G__46894__delegate(tcoll,val,vals);
});
G__46894.cljs$core$IFn$_invoke$arity$variadic = G__46894__delegate;
return G__46894;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__46900 = null;
if (arguments.length > 2) {
var G__46901__i = 0, G__46901__a = new Array(arguments.length -  2);
while (G__46901__i < G__46901__a.length) {G__46901__a[G__46901__i] = arguments[G__46901__i + 2]; ++G__46901__i;}
G__46900 = new cljs.core.IndexedSeq(G__46901__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__46900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__46902__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__46903 = ntcoll;
var G__46904 = cljs.core.first(kvs);
var G__46905 = cljs.core.second(kvs);
var G__46906 = cljs.core.nnext(kvs);
tcoll = G__46903;
key = G__46904;
val = G__46905;
kvs = G__46906;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__46902 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__46907__i = 0, G__46907__a = new Array(arguments.length -  3);
while (G__46907__i < G__46907__a.length) {G__46907__a[G__46907__i] = arguments[G__46907__i + 3]; ++G__46907__i;}
  kvs = new cljs.core.IndexedSeq(G__46907__a,0);
} 
return G__46902__delegate.call(this,tcoll,key,val,kvs);};
G__46902.cljs$lang$maxFixedArity = 3;
G__46902.cljs$lang$applyTo = (function (arglist__46908){
var tcoll = cljs.core.first(arglist__46908);
arglist__46908 = cljs.core.next(arglist__46908);
var key = cljs.core.first(arglist__46908);
arglist__46908 = cljs.core.next(arglist__46908);
var val = cljs.core.first(arglist__46908);
var kvs = cljs.core.rest(arglist__46908);
return G__46902__delegate(tcoll,key,val,kvs);
});
G__46902.cljs$core$IFn$_invoke$arity$variadic = G__46902__delegate;
return G__46902;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__46909 = null;
if (arguments.length > 3) {
var G__46910__i = 0, G__46910__a = new Array(arguments.length -  3);
while (G__46910__i < G__46910__a.length) {G__46910__a[G__46910__i] = arguments[G__46910__i + 3]; ++G__46910__i;}
G__46909 = new cljs.core.IndexedSeq(G__46910__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__46909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__46911__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__46912 = ntcoll;
var G__46913 = cljs.core.first(ks);
var G__46914 = cljs.core.next(ks);
tcoll = G__46912;
key = G__46913;
ks = G__46914;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__46911 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__46915__i = 0, G__46915__a = new Array(arguments.length -  2);
while (G__46915__i < G__46915__a.length) {G__46915__a[G__46915__i] = arguments[G__46915__i + 2]; ++G__46915__i;}
  ks = new cljs.core.IndexedSeq(G__46915__a,0);
} 
return G__46911__delegate.call(this,tcoll,key,ks);};
G__46911.cljs$lang$maxFixedArity = 2;
G__46911.cljs$lang$applyTo = (function (arglist__46916){
var tcoll = cljs.core.first(arglist__46916);
arglist__46916 = cljs.core.next(arglist__46916);
var key = cljs.core.first(arglist__46916);
var ks = cljs.core.rest(arglist__46916);
return G__46911__delegate(tcoll,key,ks);
});
G__46911.cljs$core$IFn$_invoke$arity$variadic = G__46911__delegate;
return G__46911;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__46917 = null;
if (arguments.length > 2) {
var G__46918__i = 0, G__46918__a = new Array(arguments.length -  2);
while (G__46918__i < G__46918__a.length) {G__46918__a[G__46918__i] = arguments[G__46918__i + 2]; ++G__46918__i;}
G__46917 = new cljs.core.IndexedSeq(G__46918__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__46917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__46919__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__46920 = ntcoll;
var G__46921 = cljs.core.first(vals);
var G__46922 = cljs.core.next(vals);
tcoll = G__46920;
val = G__46921;
vals = G__46922;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__46919 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__46923__i = 0, G__46923__a = new Array(arguments.length -  2);
while (G__46923__i < G__46923__a.length) {G__46923__a[G__46923__i] = arguments[G__46923__i + 2]; ++G__46923__i;}
  vals = new cljs.core.IndexedSeq(G__46923__a,0);
} 
return G__46919__delegate.call(this,tcoll,val,vals);};
G__46919.cljs$lang$maxFixedArity = 2;
G__46919.cljs$lang$applyTo = (function (arglist__46924){
var tcoll = cljs.core.first(arglist__46924);
arglist__46924 = cljs.core.next(arglist__46924);
var val = cljs.core.first(arglist__46924);
var vals = cljs.core.rest(arglist__46924);
return G__46919__delegate(tcoll,val,vals);
});
G__46919.cljs$core$IFn$_invoke$arity$variadic = G__46919__delegate;
return G__46919;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__46925 = null;
if (arguments.length > 2) {
var G__46926__i = 0, G__46926__a = new Array(arguments.length -  2);
while (G__46926__i < G__46926__a.length) {G__46926__a[G__46926__i] = arguments[G__46926__i + 2]; ++G__46926__i;}
G__46925 = new cljs.core.IndexedSeq(G__46926__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__46925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a17076 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a17076);
} else {
var G__47137 = a17076;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47137) : f.call(null,G__47137));
}
} else {
var b17077 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a17076,b17077);
} else {
var G__47138 = a17076;
var G__47139 = b17077;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47138,G__47139) : f.call(null,G__47138,G__47139));
}
} else {
var c17078 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a17076,b17077,c17078);
} else {
var G__47140 = a17076;
var G__47141 = b17077;
var G__47142 = c17078;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47140,G__47141,G__47142) : f.call(null,G__47140,G__47141,G__47142));
}
} else {
var d17079 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a17076,b17077,c17078,d17079);
} else {
var G__47143 = a17076;
var G__47144 = b17077;
var G__47145 = c17078;
var G__47146 = d17079;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47143,G__47144,G__47145,G__47146) : f.call(null,G__47143,G__47144,G__47145,G__47146));
}
} else {
var e17080 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a17076,b17077,c17078,d17079,e17080);
} else {
var G__47147 = a17076;
var G__47148 = b17077;
var G__47149 = c17078;
var G__47150 = d17079;
var G__47151 = e17080;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__47147,G__47148,G__47149,G__47150,G__47151) : f.call(null,G__47147,G__47148,G__47149,G__47150,G__47151));
}
} else {
var f17081 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a17076,b17077,c17078,d17079,e17080,f17081);
} else {
var G__47152 = a17076;
var G__47153 = b17077;
var G__47154 = c17078;
var G__47155 = d17079;
var G__47156 = e17080;
var G__47157 = f17081;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__47152,G__47153,G__47154,G__47155,G__47156,G__47157) : f.call(null,G__47152,G__47153,G__47154,G__47155,G__47156,G__47157));
}
} else {
var g17082 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a17076,b17077,c17078,d17079,e17080,f17081,g17082);
} else {
var G__47158 = a17076;
var G__47159 = b17077;
var G__47160 = c17078;
var G__47161 = d17079;
var G__47162 = e17080;
var G__47163 = f17081;
var G__47164 = g17082;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__47158,G__47159,G__47160,G__47161,G__47162,G__47163,G__47164) : f.call(null,G__47158,G__47159,G__47160,G__47161,G__47162,G__47163,G__47164));
}
} else {
var h17083 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083);
} else {
var G__47165 = a17076;
var G__47166 = b17077;
var G__47167 = c17078;
var G__47168 = d17079;
var G__47169 = e17080;
var G__47170 = f17081;
var G__47171 = g17082;
var G__47172 = h17083;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__47165,G__47166,G__47167,G__47168,G__47169,G__47170,G__47171,G__47172) : f.call(null,G__47165,G__47166,G__47167,G__47168,G__47169,G__47170,G__47171,G__47172));
}
} else {
var i17084 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084);
} else {
var G__47173 = a17076;
var G__47174 = b17077;
var G__47175 = c17078;
var G__47176 = d17079;
var G__47177 = e17080;
var G__47178 = f17081;
var G__47179 = g17082;
var G__47180 = h17083;
var G__47181 = i17084;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__47173,G__47174,G__47175,G__47176,G__47177,G__47178,G__47179,G__47180,G__47181) : f.call(null,G__47173,G__47174,G__47175,G__47176,G__47177,G__47178,G__47179,G__47180,G__47181));
}
} else {
var j17085 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085);
} else {
var G__47182 = a17076;
var G__47183 = b17077;
var G__47184 = c17078;
var G__47185 = d17079;
var G__47186 = e17080;
var G__47187 = f17081;
var G__47188 = g17082;
var G__47189 = h17083;
var G__47190 = i17084;
var G__47191 = j17085;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__47182,G__47183,G__47184,G__47185,G__47186,G__47187,G__47188,G__47189,G__47190,G__47191) : f.call(null,G__47182,G__47183,G__47184,G__47185,G__47186,G__47187,G__47188,G__47189,G__47190,G__47191));
}
} else {
var k17086 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086);
} else {
var G__47192 = a17076;
var G__47193 = b17077;
var G__47194 = c17078;
var G__47195 = d17079;
var G__47196 = e17080;
var G__47197 = f17081;
var G__47198 = g17082;
var G__47199 = h17083;
var G__47200 = i17084;
var G__47201 = j17085;
var G__47202 = k17086;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__47192,G__47193,G__47194,G__47195,G__47196,G__47197,G__47198,G__47199,G__47200,G__47201,G__47202) : f.call(null,G__47192,G__47193,G__47194,G__47195,G__47196,G__47197,G__47198,G__47199,G__47200,G__47201,G__47202));
}
} else {
var l17087 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087);
} else {
var G__47203 = a17076;
var G__47204 = b17077;
var G__47205 = c17078;
var G__47206 = d17079;
var G__47207 = e17080;
var G__47208 = f17081;
var G__47209 = g17082;
var G__47210 = h17083;
var G__47211 = i17084;
var G__47212 = j17085;
var G__47213 = k17086;
var G__47214 = l17087;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__47203,G__47204,G__47205,G__47206,G__47207,G__47208,G__47209,G__47210,G__47211,G__47212,G__47213,G__47214) : f.call(null,G__47203,G__47204,G__47205,G__47206,G__47207,G__47208,G__47209,G__47210,G__47211,G__47212,G__47213,G__47214));
}
} else {
var m17088 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088);
} else {
var G__47215 = a17076;
var G__47216 = b17077;
var G__47217 = c17078;
var G__47218 = d17079;
var G__47219 = e17080;
var G__47220 = f17081;
var G__47221 = g17082;
var G__47222 = h17083;
var G__47223 = i17084;
var G__47224 = j17085;
var G__47225 = k17086;
var G__47226 = l17087;
var G__47227 = m17088;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__47215,G__47216,G__47217,G__47218,G__47219,G__47220,G__47221,G__47222,G__47223,G__47224,G__47225,G__47226,G__47227) : f.call(null,G__47215,G__47216,G__47217,G__47218,G__47219,G__47220,G__47221,G__47222,G__47223,G__47224,G__47225,G__47226,G__47227));
}
} else {
var n17089 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089);
} else {
var G__47228 = a17076;
var G__47229 = b17077;
var G__47230 = c17078;
var G__47231 = d17079;
var G__47232 = e17080;
var G__47233 = f17081;
var G__47234 = g17082;
var G__47235 = h17083;
var G__47236 = i17084;
var G__47237 = j17085;
var G__47238 = k17086;
var G__47239 = l17087;
var G__47240 = m17088;
var G__47241 = n17089;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__47228,G__47229,G__47230,G__47231,G__47232,G__47233,G__47234,G__47235,G__47236,G__47237,G__47238,G__47239,G__47240,G__47241) : f.call(null,G__47228,G__47229,G__47230,G__47231,G__47232,G__47233,G__47234,G__47235,G__47236,G__47237,G__47238,G__47239,G__47240,G__47241));
}
} else {
var o17090 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090);
} else {
var G__47242 = a17076;
var G__47243 = b17077;
var G__47244 = c17078;
var G__47245 = d17079;
var G__47246 = e17080;
var G__47247 = f17081;
var G__47248 = g17082;
var G__47249 = h17083;
var G__47250 = i17084;
var G__47251 = j17085;
var G__47252 = k17086;
var G__47253 = l17087;
var G__47254 = m17088;
var G__47255 = n17089;
var G__47256 = o17090;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__47242,G__47243,G__47244,G__47245,G__47246,G__47247,G__47248,G__47249,G__47250,G__47251,G__47252,G__47253,G__47254,G__47255,G__47256) : f.call(null,G__47242,G__47243,G__47244,G__47245,G__47246,G__47247,G__47248,G__47249,G__47250,G__47251,G__47252,G__47253,G__47254,G__47255,G__47256));
}
} else {
var p17091 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091);
} else {
var G__47257 = a17076;
var G__47258 = b17077;
var G__47259 = c17078;
var G__47260 = d17079;
var G__47261 = e17080;
var G__47262 = f17081;
var G__47263 = g17082;
var G__47264 = h17083;
var G__47265 = i17084;
var G__47266 = j17085;
var G__47267 = k17086;
var G__47268 = l17087;
var G__47269 = m17088;
var G__47270 = n17089;
var G__47271 = o17090;
var G__47272 = p17091;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__47257,G__47258,G__47259,G__47260,G__47261,G__47262,G__47263,G__47264,G__47265,G__47266,G__47267,G__47268,G__47269,G__47270,G__47271,G__47272) : f.call(null,G__47257,G__47258,G__47259,G__47260,G__47261,G__47262,G__47263,G__47264,G__47265,G__47266,G__47267,G__47268,G__47269,G__47270,G__47271,G__47272));
}
} else {
var q17092 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092);
} else {
var G__47273 = a17076;
var G__47274 = b17077;
var G__47275 = c17078;
var G__47276 = d17079;
var G__47277 = e17080;
var G__47278 = f17081;
var G__47279 = g17082;
var G__47280 = h17083;
var G__47281 = i17084;
var G__47282 = j17085;
var G__47283 = k17086;
var G__47284 = l17087;
var G__47285 = m17088;
var G__47286 = n17089;
var G__47287 = o17090;
var G__47288 = p17091;
var G__47289 = q17092;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__47273,G__47274,G__47275,G__47276,G__47277,G__47278,G__47279,G__47280,G__47281,G__47282,G__47283,G__47284,G__47285,G__47286,G__47287,G__47288,G__47289) : f.call(null,G__47273,G__47274,G__47275,G__47276,G__47277,G__47278,G__47279,G__47280,G__47281,G__47282,G__47283,G__47284,G__47285,G__47286,G__47287,G__47288,G__47289));
}
} else {
var r17093 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093);
} else {
var G__47290 = a17076;
var G__47291 = b17077;
var G__47292 = c17078;
var G__47293 = d17079;
var G__47294 = e17080;
var G__47295 = f17081;
var G__47296 = g17082;
var G__47297 = h17083;
var G__47298 = i17084;
var G__47299 = j17085;
var G__47300 = k17086;
var G__47301 = l17087;
var G__47302 = m17088;
var G__47303 = n17089;
var G__47304 = o17090;
var G__47305 = p17091;
var G__47306 = q17092;
var G__47307 = r17093;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__47290,G__47291,G__47292,G__47293,G__47294,G__47295,G__47296,G__47297,G__47298,G__47299,G__47300,G__47301,G__47302,G__47303,G__47304,G__47305,G__47306,G__47307) : f.call(null,G__47290,G__47291,G__47292,G__47293,G__47294,G__47295,G__47296,G__47297,G__47298,G__47299,G__47300,G__47301,G__47302,G__47303,G__47304,G__47305,G__47306,G__47307));
}
} else {
var s17094 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094);
} else {
var G__47308 = a17076;
var G__47309 = b17077;
var G__47310 = c17078;
var G__47311 = d17079;
var G__47312 = e17080;
var G__47313 = f17081;
var G__47314 = g17082;
var G__47315 = h17083;
var G__47316 = i17084;
var G__47317 = j17085;
var G__47318 = k17086;
var G__47319 = l17087;
var G__47320 = m17088;
var G__47321 = n17089;
var G__47322 = o17090;
var G__47323 = p17091;
var G__47324 = q17092;
var G__47325 = r17093;
var G__47326 = s17094;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__47308,G__47309,G__47310,G__47311,G__47312,G__47313,G__47314,G__47315,G__47316,G__47317,G__47318,G__47319,G__47320,G__47321,G__47322,G__47323,G__47324,G__47325,G__47326) : f.call(null,G__47308,G__47309,G__47310,G__47311,G__47312,G__47313,G__47314,G__47315,G__47316,G__47317,G__47318,G__47319,G__47320,G__47321,G__47322,G__47323,G__47324,G__47325,G__47326));
}
} else {
var t17095 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a17076,b17077,c17078,d17079,e17080,f17081,g17082,h17083,i17084,j17085,k17086,l17087,m17088,n17089,o17090,p17091,q17092,r17093,s17094,t17095);
} else {
var G__47327 = a17076;
var G__47328 = b17077;
var G__47329 = c17078;
var G__47330 = d17079;
var G__47331 = e17080;
var G__47332 = f17081;
var G__47333 = g17082;
var G__47334 = h17083;
var G__47335 = i17084;
var G__47336 = j17085;
var G__47337 = k17086;
var G__47338 = l17087;
var G__47339 = m17088;
var G__47340 = n17089;
var G__47341 = o17090;
var G__47342 = p17091;
var G__47343 = q17092;
var G__47344 = r17093;
var G__47345 = s17094;
var G__47346 = t17095;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__47327,G__47328,G__47329,G__47330,G__47331,G__47332,G__47333,G__47334,G__47335,G__47336,G__47337,G__47338,G__47339,G__47340,G__47341,G__47342,G__47343,G__47344,G__47345,G__47346) : f.call(null,G__47327,G__47328,G__47329,G__47330,G__47331,G__47332,G__47333,G__47334,G__47335,G__47336,G__47337,G__47338,G__47339,G__47340,G__47341,G__47342,G__47343,G__47344,G__47345,G__47346));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__47347__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__47347 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__47348__i = 0, G__47348__a = new Array(arguments.length -  5);
while (G__47348__i < G__47348__a.length) {G__47348__a[G__47348__i] = arguments[G__47348__i + 5]; ++G__47348__i;}
  args = new cljs.core.IndexedSeq(G__47348__a,0);
} 
return G__47347__delegate.call(this,f,a,b,c,d,args);};
G__47347.cljs$lang$maxFixedArity = 5;
G__47347.cljs$lang$applyTo = (function (arglist__47349){
var f = cljs.core.first(arglist__47349);
arglist__47349 = cljs.core.next(arglist__47349);
var a = cljs.core.first(arglist__47349);
arglist__47349 = cljs.core.next(arglist__47349);
var b = cljs.core.first(arglist__47349);
arglist__47349 = cljs.core.next(arglist__47349);
var c = cljs.core.first(arglist__47349);
arglist__47349 = cljs.core.next(arglist__47349);
var d = cljs.core.first(arglist__47349);
var args = cljs.core.rest(arglist__47349);
return G__47347__delegate(f,a,b,c,d,args);
});
G__47347.cljs$core$IFn$_invoke$arity$variadic = G__47347__delegate;
return G__47347;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__47350 = null;
if (arguments.length > 5) {
var G__47351__i = 0, G__47351__a = new Array(arguments.length -  5);
while (G__47351__i < G__47351__a.length) {G__47351__a[G__47351__i] = arguments[G__47351__i + 5]; ++G__47351__i;}
G__47350 = new cljs.core.IndexedSeq(G__47351__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__47350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__47367 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47367) : f.call(null,G__47367));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__47368 = cljs.core.meta(obj);
var G__47369 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47368,G__47369) : f.call(null,G__47368,G__47369));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__47370 = cljs.core.meta(obj);
var G__47371 = a;
var G__47372 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47370,G__47371,G__47372) : f.call(null,G__47370,G__47371,G__47372));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__47373 = cljs.core.meta(obj);
var G__47374 = a;
var G__47375 = b;
var G__47376 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47373,G__47374,G__47375,G__47376) : f.call(null,G__47373,G__47374,G__47375,G__47376));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__47377 = cljs.core.meta(obj);
var G__47378 = a;
var G__47379 = b;
var G__47380 = c;
var G__47381 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__47377,G__47378,G__47379,G__47380,G__47381) : f.call(null,G__47377,G__47378,G__47379,G__47380,G__47381));
})());
});
var vary_meta__7 = (function() { 
var G__47382__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__47382 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__47383__i = 0, G__47383__a = new Array(arguments.length -  6);
while (G__47383__i < G__47383__a.length) {G__47383__a[G__47383__i] = arguments[G__47383__i + 6]; ++G__47383__i;}
  args = new cljs.core.IndexedSeq(G__47383__a,0);
} 
return G__47382__delegate.call(this,obj,f,a,b,c,d,args);};
G__47382.cljs$lang$maxFixedArity = 6;
G__47382.cljs$lang$applyTo = (function (arglist__47384){
var obj = cljs.core.first(arglist__47384);
arglist__47384 = cljs.core.next(arglist__47384);
var f = cljs.core.first(arglist__47384);
arglist__47384 = cljs.core.next(arglist__47384);
var a = cljs.core.first(arglist__47384);
arglist__47384 = cljs.core.next(arglist__47384);
var b = cljs.core.first(arglist__47384);
arglist__47384 = cljs.core.next(arglist__47384);
var c = cljs.core.first(arglist__47384);
arglist__47384 = cljs.core.next(arglist__47384);
var d = cljs.core.first(arglist__47384);
var args = cljs.core.rest(arglist__47384);
return G__47382__delegate(obj,f,a,b,c,d,args);
});
G__47382.cljs$core$IFn$_invoke$arity$variadic = G__47382__delegate;
return G__47382;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__47385 = null;
if (arguments.length > 6) {
var G__47386__i = 0, G__47386__a = new Array(arguments.length -  6);
while (G__47386__i < G__47386__a.length) {G__47386__a[G__47386__i] = arguments[G__47386__i + 6]; ++G__47386__i;}
G__47385 = new cljs.core.IndexedSeq(G__47386__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__47385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__47387__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__47387 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__47388__i = 0, G__47388__a = new Array(arguments.length -  2);
while (G__47388__i < G__47388__a.length) {G__47388__a[G__47388__i] = arguments[G__47388__i + 2]; ++G__47388__i;}
  more = new cljs.core.IndexedSeq(G__47388__a,0);
} 
return G__47387__delegate.call(this,x,y,more);};
G__47387.cljs$lang$maxFixedArity = 2;
G__47387.cljs$lang$applyTo = (function (arglist__47389){
var x = cljs.core.first(arglist__47389);
arglist__47389 = cljs.core.next(arglist__47389);
var y = cljs.core.first(arglist__47389);
var more = cljs.core.rest(arglist__47389);
return G__47387__delegate(x,y,more);
});
G__47387.cljs$core$IFn$_invoke$arity$variadic = G__47387__delegate;
return G__47387;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__47390 = null;
if (arguments.length > 2) {
var G__47391__i = 0, G__47391__a = new Array(arguments.length -  2);
while (G__47391__i < G__47391__a.length) {G__47391__a[G__47391__i] = arguments[G__47391__i + 2]; ++G__47391__i;}
G__47390 = new cljs.core.IndexedSeq(G__47391__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__47390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t47395 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t47395 = (function (nil_iter,meta47396){
this.nil_iter = nil_iter;
this.meta47396 = meta47396;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t47395.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t47395.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t47395.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t47395.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_47397){
var self__ = this;
var _47397__$1 = this;
return self__.meta47396;
});

cljs.core.t47395.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_47397,meta47396__$1){
var self__ = this;
var _47397__$1 = this;
return (new cljs.core.t47395(self__.nil_iter,meta47396__$1));
});

cljs.core.t47395.cljs$lang$type = true;

cljs.core.t47395.cljs$lang$ctorStr = "cljs.core/t47395";

cljs.core.t47395.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/t47395");
});

cljs.core.__GT_t47395 = (function __GT_t47395(nil_iter__$1,meta47396){
return (new cljs.core.t47395(nil_iter__$1,meta47396));
});

}

return (new cljs.core.t47395(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return self__.iter.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__47398 = lt;
var G__47399 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__47398,G__47399) : self__.xform.call(null,G__47398,G__47399));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__47400 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__47400) : self__.xform.call(null,G__47400));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__47402 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__47402) : xform.call(null,G__47402));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__47404 = cljs.core.next(iters__$1);
iters__$1 = G__47404;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__17032__auto___47405 = self__.iters.length;
var i_47406 = (0);
while(true){
if((i_47406 < n__17032__auto___47405)){
(self__.nexts[i_47406] = (self__.iters[i_47406]).next());

var G__47407 = (i_47406 + (1));
i_47406 = G__47407;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__16133__auto__ = !((lt.stepper == null));
if(and__16133__auto__){
return this$.hasNext();
} else {
return and__16133__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__47403 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__47403) : self__.xform.call(null,G__47403));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__47412 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__47412) : xform.call(null,G__47412));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__47413_47417 = cljs.core.seq(colls);
var chunk__47414_47418 = null;
var count__47415_47419 = (0);
var i__47416_47420 = (0);
while(true){
if((i__47416_47420 < count__47415_47419)){
var coll_47421 = chunk__47414_47418.cljs$core$IIndexed$_nth$arity$2(null,i__47416_47420);
iters.push(cljs.core.iter(coll_47421));

var G__47422 = seq__47413_47417;
var G__47423 = chunk__47414_47418;
var G__47424 = count__47415_47419;
var G__47425 = (i__47416_47420 + (1));
seq__47413_47417 = G__47422;
chunk__47414_47418 = G__47423;
count__47415_47419 = G__47424;
i__47416_47420 = G__47425;
continue;
} else {
var temp__4126__auto___47426 = cljs.core.seq(seq__47413_47417);
if(temp__4126__auto___47426){
var seq__47413_47427__$1 = temp__4126__auto___47426;
if(cljs.core.chunked_seq_QMARK_(seq__47413_47427__$1)){
var c__16932__auto___47428 = cljs.core.chunk_first(seq__47413_47427__$1);
var G__47429 = cljs.core.chunk_rest(seq__47413_47427__$1);
var G__47430 = c__16932__auto___47428;
var G__47431 = cljs.core.count(c__16932__auto___47428);
var G__47432 = (0);
seq__47413_47417 = G__47429;
chunk__47414_47418 = G__47430;
count__47415_47419 = G__47431;
i__47416_47420 = G__47432;
continue;
} else {
var coll_47433 = cljs.core.first(seq__47413_47427__$1);
iters.push(cljs.core.iter(coll_47433));

var G__47434 = cljs.core.next(seq__47413_47427__$1);
var G__47435 = null;
var G__47436 = (0);
var G__47437 = (0);
seq__47413_47417 = G__47434;
chunk__47414_47418 = G__47435;
count__47415_47419 = G__47436;
i__47416_47420 = G__47437;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__16145__auto__ = cljs.core.seq(coll);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__47438__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__47438 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__47439__i = 0, G__47439__a = new Array(arguments.length -  2);
while (G__47439__i < G__47439__a.length) {G__47439__a[G__47439__i] = arguments[G__47439__i + 2]; ++G__47439__i;}
  colls = new cljs.core.IndexedSeq(G__47439__a,0);
} 
return G__47438__delegate.call(this,xform,coll,colls);};
G__47438.cljs$lang$maxFixedArity = 2;
G__47438.cljs$lang$applyTo = (function (arglist__47440){
var xform = cljs.core.first(arglist__47440);
arglist__47440 = cljs.core.next(arglist__47440);
var coll = cljs.core.first(arglist__47440);
var colls = cljs.core.rest(arglist__47440);
return G__47438__delegate(xform,coll,colls);
});
G__47438.cljs$core$IFn$_invoke$arity$variadic = G__47438__delegate;
return G__47438;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__47441 = null;
if (arguments.length > 2) {
var G__47442__i = 0, G__47442__a = new Array(arguments.length -  2);
while (G__47442__i < G__47442__a.length) {G__47442__a[G__47442__i] = arguments[G__47442__i + 2]; ++G__47442__i;}
G__47441 = new cljs.core.IndexedSeq(G__47442__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__47441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__47444 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__47444) : pred.call(null,G__47444));
})())){
var G__47445 = pred;
var G__47446 = cljs.core.next(coll);
pred = G__47445;
coll = G__47446;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__16145__auto__ = (function (){var G__47450 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__47450) : pred.call(null,G__47450));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__47451 = pred;
var G__47452 = cljs.core.next(coll);
pred = G__47451;
coll = G__47452;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__47459 = null;
var G__47459__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__47459__1 = (function (x){
return cljs.core.not((function (){var G__47456 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47456) : f.call(null,G__47456));
})());
});
var G__47459__2 = (function (x,y){
return cljs.core.not((function (){var G__47457 = x;
var G__47458 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47457,G__47458) : f.call(null,G__47457,G__47458));
})());
});
var G__47459__3 = (function() { 
var G__47460__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__47460 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__47461__i = 0, G__47461__a = new Array(arguments.length -  2);
while (G__47461__i < G__47461__a.length) {G__47461__a[G__47461__i] = arguments[G__47461__i + 2]; ++G__47461__i;}
  zs = new cljs.core.IndexedSeq(G__47461__a,0);
} 
return G__47460__delegate.call(this,x,y,zs);};
G__47460.cljs$lang$maxFixedArity = 2;
G__47460.cljs$lang$applyTo = (function (arglist__47462){
var x = cljs.core.first(arglist__47462);
arglist__47462 = cljs.core.next(arglist__47462);
var y = cljs.core.first(arglist__47462);
var zs = cljs.core.rest(arglist__47462);
return G__47460__delegate(x,y,zs);
});
G__47460.cljs$core$IFn$_invoke$arity$variadic = G__47460__delegate;
return G__47460;
})()
;
G__47459 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__47459__0.call(this);
case 1:
return G__47459__1.call(this,x);
case 2:
return G__47459__2.call(this,x,y);
default:
var G__47463 = null;
if (arguments.length > 2) {
var G__47464__i = 0, G__47464__a = new Array(arguments.length -  2);
while (G__47464__i < G__47464__a.length) {G__47464__a[G__47464__i] = arguments[G__47464__i + 2]; ++G__47464__i;}
G__47463 = new cljs.core.IndexedSeq(G__47464__a,0);
}
return G__47459__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__47463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47459.cljs$lang$maxFixedArity = 2;
G__47459.cljs$lang$applyTo = G__47459__3.cljs$lang$applyTo;
G__47459.cljs$core$IFn$_invoke$arity$0 = G__47459__0;
G__47459.cljs$core$IFn$_invoke$arity$1 = G__47459__1;
G__47459.cljs$core$IFn$_invoke$arity$2 = G__47459__2;
G__47459.cljs$core$IFn$_invoke$arity$variadic = G__47459__3.cljs$core$IFn$_invoke$arity$variadic;
return G__47459;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__47465__delegate = function (args){
return x;
};
var G__47465 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__47466__i = 0, G__47466__a = new Array(arguments.length -  0);
while (G__47466__i < G__47466__a.length) {G__47466__a[G__47466__i] = arguments[G__47466__i + 0]; ++G__47466__i;}
  args = new cljs.core.IndexedSeq(G__47466__a,0);
} 
return G__47465__delegate.call(this,args);};
G__47465.cljs$lang$maxFixedArity = 0;
G__47465.cljs$lang$applyTo = (function (arglist__47467){
var args = cljs.core.seq(arglist__47467);
return G__47465__delegate(args);
});
G__47465.cljs$core$IFn$_invoke$arity$variadic = G__47465__delegate;
return G__47465;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__47522 = null;
var G__47522__0 = (function (){
var G__47495 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47495) : f.call(null,G__47495));
});
var G__47522__1 = (function (x){
var G__47496 = (function (){var G__47497 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47497) : g.call(null,G__47497));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47496) : f.call(null,G__47496));
});
var G__47522__2 = (function (x,y){
var G__47498 = (function (){var G__47499 = x;
var G__47500 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__47499,G__47500) : g.call(null,G__47499,G__47500));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47498) : f.call(null,G__47498));
});
var G__47522__3 = (function (x,y,z){
var G__47501 = (function (){var G__47502 = x;
var G__47503 = y;
var G__47504 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__47502,G__47503,G__47504) : g.call(null,G__47502,G__47503,G__47504));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47501) : f.call(null,G__47501));
});
var G__47522__4 = (function() { 
var G__47523__delegate = function (x,y,z,args){
var G__47505 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47505) : f.call(null,G__47505));
};
var G__47523 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47524__i = 0, G__47524__a = new Array(arguments.length -  3);
while (G__47524__i < G__47524__a.length) {G__47524__a[G__47524__i] = arguments[G__47524__i + 3]; ++G__47524__i;}
  args = new cljs.core.IndexedSeq(G__47524__a,0);
} 
return G__47523__delegate.call(this,x,y,z,args);};
G__47523.cljs$lang$maxFixedArity = 3;
G__47523.cljs$lang$applyTo = (function (arglist__47525){
var x = cljs.core.first(arglist__47525);
arglist__47525 = cljs.core.next(arglist__47525);
var y = cljs.core.first(arglist__47525);
arglist__47525 = cljs.core.next(arglist__47525);
var z = cljs.core.first(arglist__47525);
var args = cljs.core.rest(arglist__47525);
return G__47523__delegate(x,y,z,args);
});
G__47523.cljs$core$IFn$_invoke$arity$variadic = G__47523__delegate;
return G__47523;
})()
;
G__47522 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47522__0.call(this);
case 1:
return G__47522__1.call(this,x);
case 2:
return G__47522__2.call(this,x,y);
case 3:
return G__47522__3.call(this,x,y,z);
default:
var G__47526 = null;
if (arguments.length > 3) {
var G__47527__i = 0, G__47527__a = new Array(arguments.length -  3);
while (G__47527__i < G__47527__a.length) {G__47527__a[G__47527__i] = arguments[G__47527__i + 3]; ++G__47527__i;}
G__47526 = new cljs.core.IndexedSeq(G__47527__a,0);
}
return G__47522__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47522.cljs$lang$maxFixedArity = 3;
G__47522.cljs$lang$applyTo = G__47522__4.cljs$lang$applyTo;
G__47522.cljs$core$IFn$_invoke$arity$0 = G__47522__0;
G__47522.cljs$core$IFn$_invoke$arity$1 = G__47522__1;
G__47522.cljs$core$IFn$_invoke$arity$2 = G__47522__2;
G__47522.cljs$core$IFn$_invoke$arity$3 = G__47522__3;
G__47522.cljs$core$IFn$_invoke$arity$variadic = G__47522__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47522;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__47528 = null;
var G__47528__0 = (function (){
var G__47506 = (function (){var G__47507 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47507) : g.call(null,G__47507));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47506) : f.call(null,G__47506));
});
var G__47528__1 = (function (x){
var G__47508 = (function (){var G__47509 = (function (){var G__47510 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__47510) : h.call(null,G__47510));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47509) : g.call(null,G__47509));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47508) : f.call(null,G__47508));
});
var G__47528__2 = (function (x,y){
var G__47511 = (function (){var G__47512 = (function (){var G__47513 = x;
var G__47514 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__47513,G__47514) : h.call(null,G__47513,G__47514));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47512) : g.call(null,G__47512));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47511) : f.call(null,G__47511));
});
var G__47528__3 = (function (x,y,z){
var G__47515 = (function (){var G__47516 = (function (){var G__47517 = x;
var G__47518 = y;
var G__47519 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__47517,G__47518,G__47519) : h.call(null,G__47517,G__47518,G__47519));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47516) : g.call(null,G__47516));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47515) : f.call(null,G__47515));
});
var G__47528__4 = (function() { 
var G__47529__delegate = function (x,y,z,args){
var G__47520 = (function (){var G__47521 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__47521) : g.call(null,G__47521));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47520) : f.call(null,G__47520));
};
var G__47529 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47530__i = 0, G__47530__a = new Array(arguments.length -  3);
while (G__47530__i < G__47530__a.length) {G__47530__a[G__47530__i] = arguments[G__47530__i + 3]; ++G__47530__i;}
  args = new cljs.core.IndexedSeq(G__47530__a,0);
} 
return G__47529__delegate.call(this,x,y,z,args);};
G__47529.cljs$lang$maxFixedArity = 3;
G__47529.cljs$lang$applyTo = (function (arglist__47531){
var x = cljs.core.first(arglist__47531);
arglist__47531 = cljs.core.next(arglist__47531);
var y = cljs.core.first(arglist__47531);
arglist__47531 = cljs.core.next(arglist__47531);
var z = cljs.core.first(arglist__47531);
var args = cljs.core.rest(arglist__47531);
return G__47529__delegate(x,y,z,args);
});
G__47529.cljs$core$IFn$_invoke$arity$variadic = G__47529__delegate;
return G__47529;
})()
;
G__47528 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47528__0.call(this);
case 1:
return G__47528__1.call(this,x);
case 2:
return G__47528__2.call(this,x,y);
case 3:
return G__47528__3.call(this,x,y,z);
default:
var G__47532 = null;
if (arguments.length > 3) {
var G__47533__i = 0, G__47533__a = new Array(arguments.length -  3);
while (G__47533__i < G__47533__a.length) {G__47533__a[G__47533__i] = arguments[G__47533__i + 3]; ++G__47533__i;}
G__47532 = new cljs.core.IndexedSeq(G__47533__a,0);
}
return G__47528__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47528.cljs$lang$maxFixedArity = 3;
G__47528.cljs$lang$applyTo = G__47528__4.cljs$lang$applyTo;
G__47528.cljs$core$IFn$_invoke$arity$0 = G__47528__0;
G__47528.cljs$core$IFn$_invoke$arity$1 = G__47528__1;
G__47528.cljs$core$IFn$_invoke$arity$2 = G__47528__2;
G__47528.cljs$core$IFn$_invoke$arity$3 = G__47528__3;
G__47528.cljs$core$IFn$_invoke$arity$variadic = G__47528__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47528;
})()
});
var comp__4 = (function() { 
var G__47534__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__47535__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__47536 = cljs.core.first(fs__$2).call(null,ret);
var G__47537 = cljs.core.next(fs__$2);
ret = G__47536;
fs__$2 = G__47537;
continue;
} else {
return ret;
}
break;
}
};
var G__47535 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__47538__i = 0, G__47538__a = new Array(arguments.length -  0);
while (G__47538__i < G__47538__a.length) {G__47538__a[G__47538__i] = arguments[G__47538__i + 0]; ++G__47538__i;}
  args = new cljs.core.IndexedSeq(G__47538__a,0);
} 
return G__47535__delegate.call(this,args);};
G__47535.cljs$lang$maxFixedArity = 0;
G__47535.cljs$lang$applyTo = (function (arglist__47539){
var args = cljs.core.seq(arglist__47539);
return G__47535__delegate(args);
});
G__47535.cljs$core$IFn$_invoke$arity$variadic = G__47535__delegate;
return G__47535;
})()
;
;})(fs__$1))
};
var G__47534 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__47540__i = 0, G__47540__a = new Array(arguments.length -  3);
while (G__47540__i < G__47540__a.length) {G__47540__a[G__47540__i] = arguments[G__47540__i + 3]; ++G__47540__i;}
  fs = new cljs.core.IndexedSeq(G__47540__a,0);
} 
return G__47534__delegate.call(this,f1,f2,f3,fs);};
G__47534.cljs$lang$maxFixedArity = 3;
G__47534.cljs$lang$applyTo = (function (arglist__47541){
var f1 = cljs.core.first(arglist__47541);
arglist__47541 = cljs.core.next(arglist__47541);
var f2 = cljs.core.first(arglist__47541);
arglist__47541 = cljs.core.next(arglist__47541);
var f3 = cljs.core.first(arglist__47541);
var fs = cljs.core.rest(arglist__47541);
return G__47534__delegate(f1,f2,f3,fs);
});
G__47534.cljs$core$IFn$_invoke$arity$variadic = G__47534__delegate;
return G__47534;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__47542 = null;
if (arguments.length > 3) {
var G__47543__i = 0, G__47543__a = new Array(arguments.length -  3);
while (G__47543__i < G__47543__a.length) {G__47543__a[G__47543__i] = arguments[G__47543__i + 3]; ++G__47543__i;}
G__47542 = new cljs.core.IndexedSeq(G__47543__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__47542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__47628 = null;
var G__47628__0 = (function (){
var G__47586 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47586) : f.call(null,G__47586));
});
var G__47628__1 = (function (x){
var G__47587 = arg1;
var G__47588 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47587,G__47588) : f.call(null,G__47587,G__47588));
});
var G__47628__2 = (function (x,y){
var G__47589 = arg1;
var G__47590 = x;
var G__47591 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47589,G__47590,G__47591) : f.call(null,G__47589,G__47590,G__47591));
});
var G__47628__3 = (function (x,y,z){
var G__47592 = arg1;
var G__47593 = x;
var G__47594 = y;
var G__47595 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47592,G__47593,G__47594,G__47595) : f.call(null,G__47592,G__47593,G__47594,G__47595));
});
var G__47628__4 = (function() { 
var G__47629__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__47629 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47630__i = 0, G__47630__a = new Array(arguments.length -  3);
while (G__47630__i < G__47630__a.length) {G__47630__a[G__47630__i] = arguments[G__47630__i + 3]; ++G__47630__i;}
  args = new cljs.core.IndexedSeq(G__47630__a,0);
} 
return G__47629__delegate.call(this,x,y,z,args);};
G__47629.cljs$lang$maxFixedArity = 3;
G__47629.cljs$lang$applyTo = (function (arglist__47631){
var x = cljs.core.first(arglist__47631);
arglist__47631 = cljs.core.next(arglist__47631);
var y = cljs.core.first(arglist__47631);
arglist__47631 = cljs.core.next(arglist__47631);
var z = cljs.core.first(arglist__47631);
var args = cljs.core.rest(arglist__47631);
return G__47629__delegate(x,y,z,args);
});
G__47629.cljs$core$IFn$_invoke$arity$variadic = G__47629__delegate;
return G__47629;
})()
;
G__47628 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47628__0.call(this);
case 1:
return G__47628__1.call(this,x);
case 2:
return G__47628__2.call(this,x,y);
case 3:
return G__47628__3.call(this,x,y,z);
default:
var G__47632 = null;
if (arguments.length > 3) {
var G__47633__i = 0, G__47633__a = new Array(arguments.length -  3);
while (G__47633__i < G__47633__a.length) {G__47633__a[G__47633__i] = arguments[G__47633__i + 3]; ++G__47633__i;}
G__47632 = new cljs.core.IndexedSeq(G__47633__a,0);
}
return G__47628__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47632);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47628.cljs$lang$maxFixedArity = 3;
G__47628.cljs$lang$applyTo = G__47628__4.cljs$lang$applyTo;
G__47628.cljs$core$IFn$_invoke$arity$0 = G__47628__0;
G__47628.cljs$core$IFn$_invoke$arity$1 = G__47628__1;
G__47628.cljs$core$IFn$_invoke$arity$2 = G__47628__2;
G__47628.cljs$core$IFn$_invoke$arity$3 = G__47628__3;
G__47628.cljs$core$IFn$_invoke$arity$variadic = G__47628__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47628;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__47634 = null;
var G__47634__0 = (function (){
var G__47596 = arg1;
var G__47597 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47596,G__47597) : f.call(null,G__47596,G__47597));
});
var G__47634__1 = (function (x){
var G__47598 = arg1;
var G__47599 = arg2;
var G__47600 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47598,G__47599,G__47600) : f.call(null,G__47598,G__47599,G__47600));
});
var G__47634__2 = (function (x,y){
var G__47601 = arg1;
var G__47602 = arg2;
var G__47603 = x;
var G__47604 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47601,G__47602,G__47603,G__47604) : f.call(null,G__47601,G__47602,G__47603,G__47604));
});
var G__47634__3 = (function (x,y,z){
var G__47605 = arg1;
var G__47606 = arg2;
var G__47607 = x;
var G__47608 = y;
var G__47609 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__47605,G__47606,G__47607,G__47608,G__47609) : f.call(null,G__47605,G__47606,G__47607,G__47608,G__47609));
});
var G__47634__4 = (function() { 
var G__47635__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__47635 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47636__i = 0, G__47636__a = new Array(arguments.length -  3);
while (G__47636__i < G__47636__a.length) {G__47636__a[G__47636__i] = arguments[G__47636__i + 3]; ++G__47636__i;}
  args = new cljs.core.IndexedSeq(G__47636__a,0);
} 
return G__47635__delegate.call(this,x,y,z,args);};
G__47635.cljs$lang$maxFixedArity = 3;
G__47635.cljs$lang$applyTo = (function (arglist__47637){
var x = cljs.core.first(arglist__47637);
arglist__47637 = cljs.core.next(arglist__47637);
var y = cljs.core.first(arglist__47637);
arglist__47637 = cljs.core.next(arglist__47637);
var z = cljs.core.first(arglist__47637);
var args = cljs.core.rest(arglist__47637);
return G__47635__delegate(x,y,z,args);
});
G__47635.cljs$core$IFn$_invoke$arity$variadic = G__47635__delegate;
return G__47635;
})()
;
G__47634 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47634__0.call(this);
case 1:
return G__47634__1.call(this,x);
case 2:
return G__47634__2.call(this,x,y);
case 3:
return G__47634__3.call(this,x,y,z);
default:
var G__47638 = null;
if (arguments.length > 3) {
var G__47639__i = 0, G__47639__a = new Array(arguments.length -  3);
while (G__47639__i < G__47639__a.length) {G__47639__a[G__47639__i] = arguments[G__47639__i + 3]; ++G__47639__i;}
G__47638 = new cljs.core.IndexedSeq(G__47639__a,0);
}
return G__47634__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47634.cljs$lang$maxFixedArity = 3;
G__47634.cljs$lang$applyTo = G__47634__4.cljs$lang$applyTo;
G__47634.cljs$core$IFn$_invoke$arity$0 = G__47634__0;
G__47634.cljs$core$IFn$_invoke$arity$1 = G__47634__1;
G__47634.cljs$core$IFn$_invoke$arity$2 = G__47634__2;
G__47634.cljs$core$IFn$_invoke$arity$3 = G__47634__3;
G__47634.cljs$core$IFn$_invoke$arity$variadic = G__47634__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47634;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__47640 = null;
var G__47640__0 = (function (){
var G__47610 = arg1;
var G__47611 = arg2;
var G__47612 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47610,G__47611,G__47612) : f.call(null,G__47610,G__47611,G__47612));
});
var G__47640__1 = (function (x){
var G__47613 = arg1;
var G__47614 = arg2;
var G__47615 = arg3;
var G__47616 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47613,G__47614,G__47615,G__47616) : f.call(null,G__47613,G__47614,G__47615,G__47616));
});
var G__47640__2 = (function (x,y){
var G__47617 = arg1;
var G__47618 = arg2;
var G__47619 = arg3;
var G__47620 = x;
var G__47621 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__47617,G__47618,G__47619,G__47620,G__47621) : f.call(null,G__47617,G__47618,G__47619,G__47620,G__47621));
});
var G__47640__3 = (function (x,y,z){
var G__47622 = arg1;
var G__47623 = arg2;
var G__47624 = arg3;
var G__47625 = x;
var G__47626 = y;
var G__47627 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__47622,G__47623,G__47624,G__47625,G__47626,G__47627) : f.call(null,G__47622,G__47623,G__47624,G__47625,G__47626,G__47627));
});
var G__47640__4 = (function() { 
var G__47641__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__47641 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__47642__i = 0, G__47642__a = new Array(arguments.length -  3);
while (G__47642__i < G__47642__a.length) {G__47642__a[G__47642__i] = arguments[G__47642__i + 3]; ++G__47642__i;}
  args = new cljs.core.IndexedSeq(G__47642__a,0);
} 
return G__47641__delegate.call(this,x,y,z,args);};
G__47641.cljs$lang$maxFixedArity = 3;
G__47641.cljs$lang$applyTo = (function (arglist__47643){
var x = cljs.core.first(arglist__47643);
arglist__47643 = cljs.core.next(arglist__47643);
var y = cljs.core.first(arglist__47643);
arglist__47643 = cljs.core.next(arglist__47643);
var z = cljs.core.first(arglist__47643);
var args = cljs.core.rest(arglist__47643);
return G__47641__delegate(x,y,z,args);
});
G__47641.cljs$core$IFn$_invoke$arity$variadic = G__47641__delegate;
return G__47641;
})()
;
G__47640 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__47640__0.call(this);
case 1:
return G__47640__1.call(this,x);
case 2:
return G__47640__2.call(this,x,y);
case 3:
return G__47640__3.call(this,x,y,z);
default:
var G__47644 = null;
if (arguments.length > 3) {
var G__47645__i = 0, G__47645__a = new Array(arguments.length -  3);
while (G__47645__i < G__47645__a.length) {G__47645__a[G__47645__i] = arguments[G__47645__i + 3]; ++G__47645__i;}
G__47644 = new cljs.core.IndexedSeq(G__47645__a,0);
}
return G__47640__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__47644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47640.cljs$lang$maxFixedArity = 3;
G__47640.cljs$lang$applyTo = G__47640__4.cljs$lang$applyTo;
G__47640.cljs$core$IFn$_invoke$arity$0 = G__47640__0;
G__47640.cljs$core$IFn$_invoke$arity$1 = G__47640__1;
G__47640.cljs$core$IFn$_invoke$arity$2 = G__47640__2;
G__47640.cljs$core$IFn$_invoke$arity$3 = G__47640__3;
G__47640.cljs$core$IFn$_invoke$arity$variadic = G__47640__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47640;
})()
});
var partial__5 = (function() { 
var G__47646__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__47647__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__47647 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__47648__i = 0, G__47648__a = new Array(arguments.length -  0);
while (G__47648__i < G__47648__a.length) {G__47648__a[G__47648__i] = arguments[G__47648__i + 0]; ++G__47648__i;}
  args = new cljs.core.IndexedSeq(G__47648__a,0);
} 
return G__47647__delegate.call(this,args);};
G__47647.cljs$lang$maxFixedArity = 0;
G__47647.cljs$lang$applyTo = (function (arglist__47649){
var args = cljs.core.seq(arglist__47649);
return G__47647__delegate(args);
});
G__47647.cljs$core$IFn$_invoke$arity$variadic = G__47647__delegate;
return G__47647;
})()
;
};
var G__47646 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__47650__i = 0, G__47650__a = new Array(arguments.length -  4);
while (G__47650__i < G__47650__a.length) {G__47650__a[G__47650__i] = arguments[G__47650__i + 4]; ++G__47650__i;}
  more = new cljs.core.IndexedSeq(G__47650__a,0);
} 
return G__47646__delegate.call(this,f,arg1,arg2,arg3,more);};
G__47646.cljs$lang$maxFixedArity = 4;
G__47646.cljs$lang$applyTo = (function (arglist__47651){
var f = cljs.core.first(arglist__47651);
arglist__47651 = cljs.core.next(arglist__47651);
var arg1 = cljs.core.first(arglist__47651);
arglist__47651 = cljs.core.next(arglist__47651);
var arg2 = cljs.core.first(arglist__47651);
arglist__47651 = cljs.core.next(arglist__47651);
var arg3 = cljs.core.first(arglist__47651);
var more = cljs.core.rest(arglist__47651);
return G__47646__delegate(f,arg1,arg2,arg3,more);
});
G__47646.cljs$core$IFn$_invoke$arity$variadic = G__47646__delegate;
return G__47646;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__47652 = null;
if (arguments.length > 4) {
var G__47653__i = 0, G__47653__a = new Array(arguments.length -  4);
while (G__47653__i < G__47653__a.length) {G__47653__a[G__47653__i] = arguments[G__47653__i + 4]; ++G__47653__i;}
G__47652 = new cljs.core.IndexedSeq(G__47653__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__47652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__47686 = null;
var G__47686__1 = (function (a){
var G__47670 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47670) : f.call(null,G__47670));
});
var G__47686__2 = (function (a,b){
var G__47671 = (((a == null))?x:a);
var G__47672 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47671,G__47672) : f.call(null,G__47671,G__47672));
});
var G__47686__3 = (function (a,b,c){
var G__47673 = (((a == null))?x:a);
var G__47674 = b;
var G__47675 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47673,G__47674,G__47675) : f.call(null,G__47673,G__47674,G__47675));
});
var G__47686__4 = (function() { 
var G__47687__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__47687 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__47688__i = 0, G__47688__a = new Array(arguments.length -  3);
while (G__47688__i < G__47688__a.length) {G__47688__a[G__47688__i] = arguments[G__47688__i + 3]; ++G__47688__i;}
  ds = new cljs.core.IndexedSeq(G__47688__a,0);
} 
return G__47687__delegate.call(this,a,b,c,ds);};
G__47687.cljs$lang$maxFixedArity = 3;
G__47687.cljs$lang$applyTo = (function (arglist__47689){
var a = cljs.core.first(arglist__47689);
arglist__47689 = cljs.core.next(arglist__47689);
var b = cljs.core.first(arglist__47689);
arglist__47689 = cljs.core.next(arglist__47689);
var c = cljs.core.first(arglist__47689);
var ds = cljs.core.rest(arglist__47689);
return G__47687__delegate(a,b,c,ds);
});
G__47687.cljs$core$IFn$_invoke$arity$variadic = G__47687__delegate;
return G__47687;
})()
;
G__47686 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__47686__1.call(this,a);
case 2:
return G__47686__2.call(this,a,b);
case 3:
return G__47686__3.call(this,a,b,c);
default:
var G__47690 = null;
if (arguments.length > 3) {
var G__47691__i = 0, G__47691__a = new Array(arguments.length -  3);
while (G__47691__i < G__47691__a.length) {G__47691__a[G__47691__i] = arguments[G__47691__i + 3]; ++G__47691__i;}
G__47690 = new cljs.core.IndexedSeq(G__47691__a,0);
}
return G__47686__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__47690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47686.cljs$lang$maxFixedArity = 3;
G__47686.cljs$lang$applyTo = G__47686__4.cljs$lang$applyTo;
G__47686.cljs$core$IFn$_invoke$arity$1 = G__47686__1;
G__47686.cljs$core$IFn$_invoke$arity$2 = G__47686__2;
G__47686.cljs$core$IFn$_invoke$arity$3 = G__47686__3;
G__47686.cljs$core$IFn$_invoke$arity$variadic = G__47686__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47686;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__47692 = null;
var G__47692__2 = (function (a,b){
var G__47676 = (((a == null))?x:a);
var G__47677 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47676,G__47677) : f.call(null,G__47676,G__47677));
});
var G__47692__3 = (function (a,b,c){
var G__47678 = (((a == null))?x:a);
var G__47679 = (((b == null))?y:b);
var G__47680 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47678,G__47679,G__47680) : f.call(null,G__47678,G__47679,G__47680));
});
var G__47692__4 = (function() { 
var G__47693__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__47693 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__47694__i = 0, G__47694__a = new Array(arguments.length -  3);
while (G__47694__i < G__47694__a.length) {G__47694__a[G__47694__i] = arguments[G__47694__i + 3]; ++G__47694__i;}
  ds = new cljs.core.IndexedSeq(G__47694__a,0);
} 
return G__47693__delegate.call(this,a,b,c,ds);};
G__47693.cljs$lang$maxFixedArity = 3;
G__47693.cljs$lang$applyTo = (function (arglist__47695){
var a = cljs.core.first(arglist__47695);
arglist__47695 = cljs.core.next(arglist__47695);
var b = cljs.core.first(arglist__47695);
arglist__47695 = cljs.core.next(arglist__47695);
var c = cljs.core.first(arglist__47695);
var ds = cljs.core.rest(arglist__47695);
return G__47693__delegate(a,b,c,ds);
});
G__47693.cljs$core$IFn$_invoke$arity$variadic = G__47693__delegate;
return G__47693;
})()
;
G__47692 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__47692__2.call(this,a,b);
case 3:
return G__47692__3.call(this,a,b,c);
default:
var G__47696 = null;
if (arguments.length > 3) {
var G__47697__i = 0, G__47697__a = new Array(arguments.length -  3);
while (G__47697__i < G__47697__a.length) {G__47697__a[G__47697__i] = arguments[G__47697__i + 3]; ++G__47697__i;}
G__47696 = new cljs.core.IndexedSeq(G__47697__a,0);
}
return G__47692__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__47696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47692.cljs$lang$maxFixedArity = 3;
G__47692.cljs$lang$applyTo = G__47692__4.cljs$lang$applyTo;
G__47692.cljs$core$IFn$_invoke$arity$2 = G__47692__2;
G__47692.cljs$core$IFn$_invoke$arity$3 = G__47692__3;
G__47692.cljs$core$IFn$_invoke$arity$variadic = G__47692__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47692;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__47698 = null;
var G__47698__2 = (function (a,b){
var G__47681 = (((a == null))?x:a);
var G__47682 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47681,G__47682) : f.call(null,G__47681,G__47682));
});
var G__47698__3 = (function (a,b,c){
var G__47683 = (((a == null))?x:a);
var G__47684 = (((b == null))?y:b);
var G__47685 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47683,G__47684,G__47685) : f.call(null,G__47683,G__47684,G__47685));
});
var G__47698__4 = (function() { 
var G__47699__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__47699 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__47700__i = 0, G__47700__a = new Array(arguments.length -  3);
while (G__47700__i < G__47700__a.length) {G__47700__a[G__47700__i] = arguments[G__47700__i + 3]; ++G__47700__i;}
  ds = new cljs.core.IndexedSeq(G__47700__a,0);
} 
return G__47699__delegate.call(this,a,b,c,ds);};
G__47699.cljs$lang$maxFixedArity = 3;
G__47699.cljs$lang$applyTo = (function (arglist__47701){
var a = cljs.core.first(arglist__47701);
arglist__47701 = cljs.core.next(arglist__47701);
var b = cljs.core.first(arglist__47701);
arglist__47701 = cljs.core.next(arglist__47701);
var c = cljs.core.first(arglist__47701);
var ds = cljs.core.rest(arglist__47701);
return G__47699__delegate(a,b,c,ds);
});
G__47699.cljs$core$IFn$_invoke$arity$variadic = G__47699__delegate;
return G__47699;
})()
;
G__47698 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__47698__2.call(this,a,b);
case 3:
return G__47698__3.call(this,a,b,c);
default:
var G__47702 = null;
if (arguments.length > 3) {
var G__47703__i = 0, G__47703__a = new Array(arguments.length -  3);
while (G__47703__i < G__47703__a.length) {G__47703__a[G__47703__i] = arguments[G__47703__i + 3]; ++G__47703__i;}
G__47702 = new cljs.core.IndexedSeq(G__47703__a,0);
}
return G__47698__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__47702);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47698.cljs$lang$maxFixedArity = 3;
G__47698.cljs$lang$applyTo = G__47698__4.cljs$lang$applyTo;
G__47698.cljs$core$IFn$_invoke$arity$2 = G__47698__2;
G__47698.cljs$core$IFn$_invoke$arity$3 = G__47698__3;
G__47698.cljs$core$IFn$_invoke$arity$variadic = G__47698__4.cljs$core$IFn$_invoke$arity$variadic;
return G__47698;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__47734 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__47734) : cljs.core.volatile_BANG_.call(null,G__47734));
})();
return ((function (i){
return (function() {
var G__47764 = null;
var G__47764__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__47764__1 = (function (result){
var G__47735 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__47735) : rf.call(null,G__47735));
});
var G__47764__2 = (function (result,input){
var G__47736 = result;
var G__47737 = (function (){var G__47738 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__47739 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47738,G__47739) : f.call(null,G__47738,G__47739));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__47736,G__47737) : rf.call(null,G__47736,G__47737));
});
G__47764 = function(result,input){
switch(arguments.length){
case 0:
return G__47764__0.call(this);
case 1:
return G__47764__1.call(this,result);
case 2:
return G__47764__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47764.cljs$core$IFn$_invoke$arity$0 = G__47764__0;
G__47764.cljs$core$IFn$_invoke$arity$1 = G__47764__1;
G__47764.cljs$core$IFn$_invoke$arity$2 = G__47764__2;
return G__47764;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___47765 = size;
var i_47766 = (0);
while(true){
if((i_47766 < n__17032__auto___47765)){
cljs.core.chunk_append(b,(function (){var G__47760 = (idx + i_47766);
var G__47761 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_47766);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47760,G__47761) : f.call(null,G__47760,G__47761));
})());

var G__47767 = (i_47766 + (1));
i_47766 = G__47767;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__47762 = idx;
var G__47763 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47762,G__47763) : f.call(null,G__47762,G__47763));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__47786 = null;
var G__47786__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__47786__1 = (function (result){
var G__47780 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__47780) : rf.call(null,G__47780));
});
var G__47786__2 = (function (result,input){
var v = (function (){var G__47781 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47781) : f.call(null,G__47781));
})();
if((v == null)){
return result;
} else {
var G__47782 = result;
var G__47783 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__47782,G__47783) : rf.call(null,G__47782,G__47783));
}
});
G__47786 = function(result,input){
switch(arguments.length){
case 0:
return G__47786__0.call(this);
case 1:
return G__47786__1.call(this,result);
case 2:
return G__47786__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47786.cljs$core$IFn$_invoke$arity$0 = G__47786__0;
G__47786.cljs$core$IFn$_invoke$arity$1 = G__47786__1;
G__47786.cljs$core$IFn$_invoke$arity$2 = G__47786__2;
return G__47786;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___47787 = size;
var i_47788 = (0);
while(true){
if((i_47788 < n__17032__auto___47787)){
var x_47789 = (function (){var G__47784 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_47788);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47784) : f.call(null,G__47784));
})();
if((x_47789 == null)){
} else {
cljs.core.chunk_append(b,x_47789);
}

var G__47790 = (i_47788 + (1));
i_47788 = G__47790;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__47785 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47785) : f.call(null,G__47785));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__47791 = this$__$1;
return goog.getUid(G__47791);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__47792 = cljs.core.seq(self__.watches);
var chunk__47793 = null;
var count__47794 = (0);
var i__47795 = (0);
while(true){
if((i__47795 < count__47794)){
var vec__47796 = chunk__47793.cljs$core$IIndexed$_nth$arity$2(null,i__47795);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47796,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47796,(1),null);
var G__47797_47806 = key;
var G__47798_47807 = this$__$1;
var G__47799_47808 = oldval;
var G__47800_47809 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47797_47806,G__47798_47807,G__47799_47808,G__47800_47809) : f.call(null,G__47797_47806,G__47798_47807,G__47799_47808,G__47800_47809));

var G__47810 = seq__47792;
var G__47811 = chunk__47793;
var G__47812 = count__47794;
var G__47813 = (i__47795 + (1));
seq__47792 = G__47810;
chunk__47793 = G__47811;
count__47794 = G__47812;
i__47795 = G__47813;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__47792);
if(temp__4126__auto__){
var seq__47792__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__47792__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__47792__$1);
var G__47814 = cljs.core.chunk_rest(seq__47792__$1);
var G__47815 = c__16932__auto__;
var G__47816 = cljs.core.count(c__16932__auto__);
var G__47817 = (0);
seq__47792 = G__47814;
chunk__47793 = G__47815;
count__47794 = G__47816;
i__47795 = G__47817;
continue;
} else {
var vec__47801 = cljs.core.first(seq__47792__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47801,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__47801,(1),null);
var G__47802_47818 = key;
var G__47803_47819 = this$__$1;
var G__47804_47820 = oldval;
var G__47805_47821 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__47802_47818,G__47803_47819,G__47804_47820,G__47805_47821) : f.call(null,G__47802_47818,G__47803_47819,G__47804_47820,G__47805_47821));

var G__47822 = cljs.core.next(seq__47792__$1);
var G__47823 = null;
var G__47824 = (0);
var G__47825 = (0);
seq__47792 = G__47822;
chunk__47793 = G__47823;
count__47794 = G__47824;
i__47795 = G__47825;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__47829__delegate = function (x,p__47826){
var map__47828 = p__47826;
var map__47828__$1 = ((cljs.core.seq_QMARK_(map__47828))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47828):map__47828);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47828__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47828__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__47829 = function (x,var_args){
var p__47826 = null;
if (arguments.length > 1) {
var G__47830__i = 0, G__47830__a = new Array(arguments.length -  1);
while (G__47830__i < G__47830__a.length) {G__47830__a[G__47830__i] = arguments[G__47830__i + 1]; ++G__47830__i;}
  p__47826 = new cljs.core.IndexedSeq(G__47830__a,0);
} 
return G__47829__delegate.call(this,x,p__47826);};
G__47829.cljs$lang$maxFixedArity = 1;
G__47829.cljs$lang$applyTo = (function (arglist__47831){
var x = cljs.core.first(arglist__47831);
var p__47826 = cljs.core.rest(arglist__47831);
return G__47829__delegate(x,p__47826);
});
G__47829.cljs$core$IFn$_invoke$arity$variadic = G__47829__delegate;
return G__47829;
})()
;
atom = function(x,var_args){
var p__47826 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__47832 = null;
if (arguments.length > 1) {
var G__47833__i = 0, G__47833__a = new Array(arguments.length -  1);
while (G__47833__i < G__47833__a.length) {G__47833__a[G__47833__i] = arguments[G__47833__i + 1]; ++G__47833__i;}
G__47832 = new cljs.core.IndexedSeq(G__47833__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__47832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__47836 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__47836) : validate.call(null,G__47836));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__47837 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__47837) : cljs.core.pr_str.call(null,G__47837));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__47844 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__47844) : f.call(null,G__47844));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__47845 = a.state;
var G__47846 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47845,G__47846) : f.call(null,G__47845,G__47846));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__47847 = a.state;
var G__47848 = x;
var G__47849 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__47847,G__47848,G__47849) : f.call(null,G__47847,G__47848,G__47849));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__47850__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__47850 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__47851__i = 0, G__47851__a = new Array(arguments.length -  4);
while (G__47851__i < G__47851__a.length) {G__47851__a[G__47851__i] = arguments[G__47851__i + 4]; ++G__47851__i;}
  more = new cljs.core.IndexedSeq(G__47851__a,0);
} 
return G__47850__delegate.call(this,a,f,x,y,more);};
G__47850.cljs$lang$maxFixedArity = 4;
G__47850.cljs$lang$applyTo = (function (arglist__47852){
var a = cljs.core.first(arglist__47852);
arglist__47852 = cljs.core.next(arglist__47852);
var f = cljs.core.first(arglist__47852);
arglist__47852 = cljs.core.next(arglist__47852);
var x = cljs.core.first(arglist__47852);
arglist__47852 = cljs.core.next(arglist__47852);
var y = cljs.core.first(arglist__47852);
var more = cljs.core.rest(arglist__47852);
return G__47850__delegate(a,f,x,y,more);
});
G__47850.cljs$core$IFn$_invoke$arity$variadic = G__47850__delegate;
return G__47850;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__47853 = null;
if (arguments.length > 4) {
var G__47854__i = 0, G__47854__a = new Array(arguments.length -  4);
while (G__47854__i < G__47854__a.length) {G__47854__a[G__47854__i] = arguments[G__47854__i + 4]; ++G__47854__i;}
G__47853 = new cljs.core.IndexedSeq(G__47854__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__47853);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__47921 = null;
var G__47921__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__47921__1 = (function (result){
var G__47888 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__47888) : rf.call(null,G__47888));
});
var G__47921__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__47889 = i;
var G__47890 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47889,G__47890) : f.call(null,G__47889,G__47890));
})();
if((v == null)){
return result;
} else {
var G__47891 = result;
var G__47892 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__47891,G__47892) : rf.call(null,G__47891,G__47892));
}
});
G__47921 = function(result,input){
switch(arguments.length){
case 0:
return G__47921__0.call(this);
case 1:
return G__47921__1.call(this,result);
case 2:
return G__47921__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__47921.cljs$core$IFn$_invoke$arity$0 = G__47921__0;
G__47921.cljs$core$IFn$_invoke$arity$1 = G__47921__1;
G__47921.cljs$core$IFn$_invoke$arity$2 = G__47921__2;
return G__47921;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___47922 = size;
var i_47923 = (0);
while(true){
if((i_47923 < n__17032__auto___47922)){
var x_47924 = (function (){var G__47917 = (idx + i_47923);
var G__47918 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_47923);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47917,G__47918) : f.call(null,G__47917,G__47918));
})();
if((x_47924 == null)){
} else {
cljs.core.chunk_append(b,x_47924);
}

var G__47925 = (i_47923 + (1));
i_47923 = G__47925;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__47919 = idx;
var G__47920 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__47919,G__47920) : f.call(null,G__47919,G__47920));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__48139 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48139) : p.call(null,G__48139));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48141 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48141) : p.call(null,G__48141));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__48142 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48142) : p.call(null,G__48142));
} else {
return and__16133__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48144 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48144) : p.call(null,G__48144));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48146 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48146) : p.call(null,G__48146));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__48147 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48147) : p.call(null,G__48147));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__48316__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__48316 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48317__i = 0, G__48317__a = new Array(arguments.length -  3);
while (G__48317__i < G__48317__a.length) {G__48317__a[G__48317__i] = arguments[G__48317__i + 3]; ++G__48317__i;}
  args = new cljs.core.IndexedSeq(G__48317__a,0);
} 
return G__48316__delegate.call(this,x,y,z,args);};
G__48316.cljs$lang$maxFixedArity = 3;
G__48316.cljs$lang$applyTo = (function (arglist__48318){
var x = cljs.core.first(arglist__48318);
arglist__48318 = cljs.core.next(arglist__48318);
var y = cljs.core.first(arglist__48318);
arglist__48318 = cljs.core.next(arglist__48318);
var z = cljs.core.first(arglist__48318);
var args = cljs.core.rest(arglist__48318);
return G__48316__delegate(x,y,z,args);
});
G__48316.cljs$core$IFn$_invoke$arity$variadic = G__48316__delegate;
return G__48316;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__48319 = null;
if (arguments.length > 3) {
var G__48320__i = 0, G__48320__a = new Array(arguments.length -  3);
while (G__48320__i < G__48320__a.length) {G__48320__a[G__48320__i] = arguments[G__48320__i + 3]; ++G__48320__i;}
G__48319 = new cljs.core.IndexedSeq(G__48320__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48179 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48179) : p1.call(null,G__48179));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__48180 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48180) : p2.call(null,G__48180));
} else {
return and__16133__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48182 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48182) : p1.call(null,G__48182));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48184 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48184) : p1.call(null,G__48184));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__48186 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48186) : p2.call(null,G__48186));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var G__48187 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48187) : p2.call(null,G__48187));
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48189 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48189) : p1.call(null,G__48189));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48191 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48191) : p1.call(null,G__48191));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__48193 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48193) : p1.call(null,G__48193));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__48195 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48195) : p2.call(null,G__48195));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__48197 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48197) : p2.call(null,G__48197));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__48198 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48198) : p2.call(null,G__48198));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__48321__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__47926_SHARP_){
var and__16133__auto__ = (function (){var G__48203 = p1__47926_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48203) : p1.call(null,G__48203));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__48204 = p1__47926_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48204) : p2.call(null,G__48204));
} else {
return and__16133__auto__;
}
}),args)));
};
var G__48321 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48322__i = 0, G__48322__a = new Array(arguments.length -  3);
while (G__48322__i < G__48322__a.length) {G__48322__a[G__48322__i] = arguments[G__48322__i + 3]; ++G__48322__i;}
  args = new cljs.core.IndexedSeq(G__48322__a,0);
} 
return G__48321__delegate.call(this,x,y,z,args);};
G__48321.cljs$lang$maxFixedArity = 3;
G__48321.cljs$lang$applyTo = (function (arglist__48323){
var x = cljs.core.first(arglist__48323);
arglist__48323 = cljs.core.next(arglist__48323);
var y = cljs.core.first(arglist__48323);
arglist__48323 = cljs.core.next(arglist__48323);
var z = cljs.core.first(arglist__48323);
var args = cljs.core.rest(arglist__48323);
return G__48321__delegate(x,y,z,args);
});
G__48321.cljs$core$IFn$_invoke$arity$variadic = G__48321__delegate;
return G__48321;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__48324 = null;
if (arguments.length > 3) {
var G__48325__i = 0, G__48325__a = new Array(arguments.length -  3);
while (G__48325__i < G__48325__a.length) {G__48325__a[G__48325__i] = arguments[G__48325__i + 3]; ++G__48325__i;}
G__48324 = new cljs.core.IndexedSeq(G__48325__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48250 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48250) : p1.call(null,G__48250));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48252 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48252) : p2.call(null,G__48252));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__48253 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48253) : p3.call(null,G__48253));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48255 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48255) : p1.call(null,G__48255));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48257 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48257) : p2.call(null,G__48257));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__48259 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48259) : p3.call(null,G__48259));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__48261 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48261) : p1.call(null,G__48261));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__48263 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48263) : p2.call(null,G__48263));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var G__48264 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48264) : p3.call(null,G__48264));
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__16133__auto__ = (function (){var G__48266 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48266) : p1.call(null,G__48266));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48268 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48268) : p2.call(null,G__48268));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var and__16133__auto____$2 = (function (){var G__48270 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48270) : p3.call(null,G__48270));
})();
if(cljs.core.truth_(and__16133__auto____$2)){
var and__16133__auto____$3 = (function (){var G__48272 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48272) : p1.call(null,G__48272));
})();
if(cljs.core.truth_(and__16133__auto____$3)){
var and__16133__auto____$4 = (function (){var G__48274 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48274) : p2.call(null,G__48274));
})();
if(cljs.core.truth_(and__16133__auto____$4)){
var and__16133__auto____$5 = (function (){var G__48276 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48276) : p3.call(null,G__48276));
})();
if(cljs.core.truth_(and__16133__auto____$5)){
var and__16133__auto____$6 = (function (){var G__48278 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48278) : p1.call(null,G__48278));
})();
if(cljs.core.truth_(and__16133__auto____$6)){
var and__16133__auto____$7 = (function (){var G__48280 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48280) : p2.call(null,G__48280));
})();
if(cljs.core.truth_(and__16133__auto____$7)){
var G__48281 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48281) : p3.call(null,G__48281));
} else {
return and__16133__auto____$7;
}
} else {
return and__16133__auto____$6;
}
} else {
return and__16133__auto____$5;
}
} else {
return and__16133__auto____$4;
}
} else {
return and__16133__auto____$3;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__48326__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__47927_SHARP_){
var and__16133__auto__ = (function (){var G__48288 = p1__47927_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48288) : p1.call(null,G__48288));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48290 = p1__47927_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48290) : p2.call(null,G__48290));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__48291 = p1__47927_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48291) : p3.call(null,G__48291));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}),args)));
};
var G__48326 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48327__i = 0, G__48327__a = new Array(arguments.length -  3);
while (G__48327__i < G__48327__a.length) {G__48327__a[G__48327__i] = arguments[G__48327__i + 3]; ++G__48327__i;}
  args = new cljs.core.IndexedSeq(G__48327__a,0);
} 
return G__48326__delegate.call(this,x,y,z,args);};
G__48326.cljs$lang$maxFixedArity = 3;
G__48326.cljs$lang$applyTo = (function (arglist__48328){
var x = cljs.core.first(arglist__48328);
arglist__48328 = cljs.core.next(arglist__48328);
var y = cljs.core.first(arglist__48328);
arglist__48328 = cljs.core.next(arglist__48328);
var z = cljs.core.first(arglist__48328);
var args = cljs.core.rest(arglist__48328);
return G__48326__delegate(x,y,z,args);
});
G__48326.cljs$core$IFn$_invoke$arity$variadic = G__48326__delegate;
return G__48326;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__48329 = null;
if (arguments.length > 3) {
var G__48330__i = 0, G__48330__a = new Array(arguments.length -  3);
while (G__48330__i < G__48330__a.length) {G__48330__a[G__48330__i] = arguments[G__48330__i + 3]; ++G__48330__i;}
G__48329 = new cljs.core.IndexedSeq(G__48330__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__48331__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__47928_SHARP_){
var G__48307 = x;
return (p1__47928_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__47928_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48307) : p1__47928_SHARP_.call(null,G__48307));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__47929_SHARP_){
var and__16133__auto__ = (function (){var G__48309 = x;
return (p1__47929_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__47929_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48309) : p1__47929_SHARP_.call(null,G__48309));
})();
if(cljs.core.truth_(and__16133__auto__)){
var G__48310 = y;
return (p1__47929_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__47929_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48310) : p1__47929_SHARP_.call(null,G__48310));
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__47930_SHARP_){
var and__16133__auto__ = (function (){var G__48312 = x;
return (p1__47930_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__47930_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48312) : p1__47930_SHARP_.call(null,G__48312));
})();
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__48314 = y;
return (p1__47930_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__47930_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48314) : p1__47930_SHARP_.call(null,G__48314));
})();
if(cljs.core.truth_(and__16133__auto____$1)){
var G__48315 = z;
return (p1__47930_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__47930_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48315) : p1__47930_SHARP_.call(null,G__48315));
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__48332__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__47931_SHARP_){
return cljs.core.every_QMARK_(p1__47931_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__48332 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48333__i = 0, G__48333__a = new Array(arguments.length -  3);
while (G__48333__i < G__48333__a.length) {G__48333__a[G__48333__i] = arguments[G__48333__i + 3]; ++G__48333__i;}
  args = new cljs.core.IndexedSeq(G__48333__a,0);
} 
return G__48332__delegate.call(this,x,y,z,args);};
G__48332.cljs$lang$maxFixedArity = 3;
G__48332.cljs$lang$applyTo = (function (arglist__48334){
var x = cljs.core.first(arglist__48334);
arglist__48334 = cljs.core.next(arglist__48334);
var y = cljs.core.first(arglist__48334);
arglist__48334 = cljs.core.next(arglist__48334);
var z = cljs.core.first(arglist__48334);
var args = cljs.core.rest(arglist__48334);
return G__48332__delegate(x,y,z,args);
});
G__48332.cljs$core$IFn$_invoke$arity$variadic = G__48332__delegate;
return G__48332;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__48335 = null;
if (arguments.length > 3) {
var G__48336__i = 0, G__48336__a = new Array(arguments.length -  3);
while (G__48336__i < G__48336__a.length) {G__48336__a[G__48336__i] = arguments[G__48336__i + 3]; ++G__48336__i;}
G__48335 = new cljs.core.IndexedSeq(G__48336__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__48331 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__48337__i = 0, G__48337__a = new Array(arguments.length -  3);
while (G__48337__i < G__48337__a.length) {G__48337__a[G__48337__i] = arguments[G__48337__i + 3]; ++G__48337__i;}
  ps = new cljs.core.IndexedSeq(G__48337__a,0);
} 
return G__48331__delegate.call(this,p1,p2,p3,ps);};
G__48331.cljs$lang$maxFixedArity = 3;
G__48331.cljs$lang$applyTo = (function (arglist__48338){
var p1 = cljs.core.first(arglist__48338);
arglist__48338 = cljs.core.next(arglist__48338);
var p2 = cljs.core.first(arglist__48338);
arglist__48338 = cljs.core.next(arglist__48338);
var p3 = cljs.core.first(arglist__48338);
var ps = cljs.core.rest(arglist__48338);
return G__48331__delegate(p1,p2,p3,ps);
});
G__48331.cljs$core$IFn$_invoke$arity$variadic = G__48331__delegate;
return G__48331;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__48339 = null;
if (arguments.length > 3) {
var G__48340__i = 0, G__48340__a = new Array(arguments.length -  3);
while (G__48340__i < G__48340__a.length) {G__48340__a[G__48340__i] = arguments[G__48340__i + 3]; ++G__48340__i;}
G__48339 = new cljs.core.IndexedSeq(G__48340__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__48339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__48546 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48546) : p.call(null,G__48546));
});
var sp1__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__48548 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48548) : p.call(null,G__48548));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__48549 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48549) : p.call(null,G__48549));
}
});
var sp1__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__48551 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48551) : p.call(null,G__48551));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48553 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48553) : p.call(null,G__48553));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__48554 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__48554) : p.call(null,G__48554));
}
}
});
var sp1__4 = (function() { 
var G__48715__delegate = function (x,y,z,args){
var or__16145__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__48715 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48716__i = 0, G__48716__a = new Array(arguments.length -  3);
while (G__48716__i < G__48716__a.length) {G__48716__a[G__48716__i] = arguments[G__48716__i + 3]; ++G__48716__i;}
  args = new cljs.core.IndexedSeq(G__48716__a,0);
} 
return G__48715__delegate.call(this,x,y,z,args);};
G__48715.cljs$lang$maxFixedArity = 3;
G__48715.cljs$lang$applyTo = (function (arglist__48717){
var x = cljs.core.first(arglist__48717);
arglist__48717 = cljs.core.next(arglist__48717);
var y = cljs.core.first(arglist__48717);
arglist__48717 = cljs.core.next(arglist__48717);
var z = cljs.core.first(arglist__48717);
var args = cljs.core.rest(arglist__48717);
return G__48715__delegate(x,y,z,args);
});
G__48715.cljs$core$IFn$_invoke$arity$variadic = G__48715__delegate;
return G__48715;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__48718 = null;
if (arguments.length > 3) {
var G__48719__i = 0, G__48719__a = new Array(arguments.length -  3);
while (G__48719__i < G__48719__a.length) {G__48719__a[G__48719__i] = arguments[G__48719__i + 3]; ++G__48719__i;}
G__48718 = new cljs.core.IndexedSeq(G__48719__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__16145__auto__ = (function (){var G__48586 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48586) : p1.call(null,G__48586));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__48587 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48587) : p2.call(null,G__48587));
}
});
var sp2__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__48589 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48589) : p1.call(null,G__48589));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48591 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48591) : p1.call(null,G__48591));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__48593 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48593) : p2.call(null,G__48593));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__48594 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48594) : p2.call(null,G__48594));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__48596 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48596) : p1.call(null,G__48596));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48598 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48598) : p1.call(null,G__48598));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__48600 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48600) : p1.call(null,G__48600));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__48602 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48602) : p2.call(null,G__48602));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__48604 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48604) : p2.call(null,G__48604));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__48605 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48605) : p2.call(null,G__48605));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__48720__delegate = function (x,y,z,args){
var or__16145__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__48341_SHARP_){
var or__16145__auto____$1 = (function (){var G__48607 = p1__48341_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48607) : p1.call(null,G__48607));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__48608 = p1__48341_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48608) : p2.call(null,G__48608));
}
});})(or__16145__auto__))
,args);
}
};
var G__48720 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48721__i = 0, G__48721__a = new Array(arguments.length -  3);
while (G__48721__i < G__48721__a.length) {G__48721__a[G__48721__i] = arguments[G__48721__i + 3]; ++G__48721__i;}
  args = new cljs.core.IndexedSeq(G__48721__a,0);
} 
return G__48720__delegate.call(this,x,y,z,args);};
G__48720.cljs$lang$maxFixedArity = 3;
G__48720.cljs$lang$applyTo = (function (arglist__48722){
var x = cljs.core.first(arglist__48722);
arglist__48722 = cljs.core.next(arglist__48722);
var y = cljs.core.first(arglist__48722);
arglist__48722 = cljs.core.next(arglist__48722);
var z = cljs.core.first(arglist__48722);
var args = cljs.core.rest(arglist__48722);
return G__48720__delegate(x,y,z,args);
});
G__48720.cljs$core$IFn$_invoke$arity$variadic = G__48720__delegate;
return G__48720;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__48723 = null;
if (arguments.length > 3) {
var G__48724__i = 0, G__48724__a = new Array(arguments.length -  3);
while (G__48724__i < G__48724__a.length) {G__48724__a[G__48724__i] = arguments[G__48724__i + 3]; ++G__48724__i;}
G__48723 = new cljs.core.IndexedSeq(G__48724__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__16145__auto__ = (function (){var G__48654 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48654) : p1.call(null,G__48654));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48656 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48656) : p2.call(null,G__48656));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__48657 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48657) : p3.call(null,G__48657));
}
}
});
var sp3__2 = (function (x,y){
var or__16145__auto__ = (function (){var G__48659 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48659) : p1.call(null,G__48659));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48661 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48661) : p2.call(null,G__48661));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__48663 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48663) : p3.call(null,G__48663));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__48665 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48665) : p1.call(null,G__48665));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__48667 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48667) : p2.call(null,G__48667));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var G__48668 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48668) : p3.call(null,G__48668));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__16145__auto__ = (function (){var G__48670 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48670) : p1.call(null,G__48670));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48672 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48672) : p2.call(null,G__48672));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__48674 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48674) : p3.call(null,G__48674));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var or__16145__auto____$3 = (function (){var G__48676 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48676) : p1.call(null,G__48676));
})();
if(cljs.core.truth_(or__16145__auto____$3)){
return or__16145__auto____$3;
} else {
var or__16145__auto____$4 = (function (){var G__48678 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48678) : p2.call(null,G__48678));
})();
if(cljs.core.truth_(or__16145__auto____$4)){
return or__16145__auto____$4;
} else {
var or__16145__auto____$5 = (function (){var G__48680 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48680) : p3.call(null,G__48680));
})();
if(cljs.core.truth_(or__16145__auto____$5)){
return or__16145__auto____$5;
} else {
var or__16145__auto____$6 = (function (){var G__48682 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48682) : p1.call(null,G__48682));
})();
if(cljs.core.truth_(or__16145__auto____$6)){
return or__16145__auto____$6;
} else {
var or__16145__auto____$7 = (function (){var G__48684 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48684) : p2.call(null,G__48684));
})();
if(cljs.core.truth_(or__16145__auto____$7)){
return or__16145__auto____$7;
} else {
var G__48685 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48685) : p3.call(null,G__48685));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__48725__delegate = function (x,y,z,args){
var or__16145__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__){
return (function (p1__48342_SHARP_){
var or__16145__auto____$1 = (function (){var G__48687 = p1__48342_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__48687) : p1.call(null,G__48687));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var G__48689 = p1__48342_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__48689) : p2.call(null,G__48689));
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
var G__48690 = p1__48342_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__48690) : p3.call(null,G__48690));
}
}
});})(or__16145__auto__))
,args);
}
};
var G__48725 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48726__i = 0, G__48726__a = new Array(arguments.length -  3);
while (G__48726__i < G__48726__a.length) {G__48726__a[G__48726__i] = arguments[G__48726__i + 3]; ++G__48726__i;}
  args = new cljs.core.IndexedSeq(G__48726__a,0);
} 
return G__48725__delegate.call(this,x,y,z,args);};
G__48725.cljs$lang$maxFixedArity = 3;
G__48725.cljs$lang$applyTo = (function (arglist__48727){
var x = cljs.core.first(arglist__48727);
arglist__48727 = cljs.core.next(arglist__48727);
var y = cljs.core.first(arglist__48727);
arglist__48727 = cljs.core.next(arglist__48727);
var z = cljs.core.first(arglist__48727);
var args = cljs.core.rest(arglist__48727);
return G__48725__delegate(x,y,z,args);
});
G__48725.cljs$core$IFn$_invoke$arity$variadic = G__48725__delegate;
return G__48725;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__48728 = null;
if (arguments.length > 3) {
var G__48729__i = 0, G__48729__a = new Array(arguments.length -  3);
while (G__48729__i < G__48729__a.length) {G__48729__a[G__48729__i] = arguments[G__48729__i + 3]; ++G__48729__i;}
G__48728 = new cljs.core.IndexedSeq(G__48729__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__48730__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__48343_SHARP_){
var G__48706 = x;
return (p1__48343_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__48343_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48706) : p1__48343_SHARP_.call(null,G__48706));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__48344_SHARP_){
var or__16145__auto__ = (function (){var G__48708 = x;
return (p1__48344_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__48344_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48708) : p1__48344_SHARP_.call(null,G__48708));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var G__48709 = y;
return (p1__48344_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__48344_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48709) : p1__48344_SHARP_.call(null,G__48709));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__48345_SHARP_){
var or__16145__auto__ = (function (){var G__48711 = x;
return (p1__48345_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__48345_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48711) : p1__48345_SHARP_.call(null,G__48711));
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var G__48713 = y;
return (p1__48345_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__48345_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48713) : p1__48345_SHARP_.call(null,G__48713));
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var G__48714 = z;
return (p1__48345_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__48345_SHARP_.cljs$core$IFn$_invoke$arity$1(G__48714) : p1__48345_SHARP_.call(null,G__48714));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__48731__delegate = function (x,y,z,args){
var or__16145__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.some(((function (or__16145__auto__,ps__$1){
return (function (p1__48346_SHARP_){
return cljs.core.some(p1__48346_SHARP_,args);
});})(or__16145__auto__,ps__$1))
,ps__$1);
}
};
var G__48731 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__48732__i = 0, G__48732__a = new Array(arguments.length -  3);
while (G__48732__i < G__48732__a.length) {G__48732__a[G__48732__i] = arguments[G__48732__i + 3]; ++G__48732__i;}
  args = new cljs.core.IndexedSeq(G__48732__a,0);
} 
return G__48731__delegate.call(this,x,y,z,args);};
G__48731.cljs$lang$maxFixedArity = 3;
G__48731.cljs$lang$applyTo = (function (arglist__48733){
var x = cljs.core.first(arglist__48733);
arglist__48733 = cljs.core.next(arglist__48733);
var y = cljs.core.first(arglist__48733);
arglist__48733 = cljs.core.next(arglist__48733);
var z = cljs.core.first(arglist__48733);
var args = cljs.core.rest(arglist__48733);
return G__48731__delegate(x,y,z,args);
});
G__48731.cljs$core$IFn$_invoke$arity$variadic = G__48731__delegate;
return G__48731;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__48734 = null;
if (arguments.length > 3) {
var G__48735__i = 0, G__48735__a = new Array(arguments.length -  3);
while (G__48735__i < G__48735__a.length) {G__48735__a[G__48735__i] = arguments[G__48735__i + 3]; ++G__48735__i;}
G__48734 = new cljs.core.IndexedSeq(G__48735__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__48734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__48730 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__48736__i = 0, G__48736__a = new Array(arguments.length -  3);
while (G__48736__i < G__48736__a.length) {G__48736__a[G__48736__i] = arguments[G__48736__i + 3]; ++G__48736__i;}
  ps = new cljs.core.IndexedSeq(G__48736__a,0);
} 
return G__48730__delegate.call(this,p1,p2,p3,ps);};
G__48730.cljs$lang$maxFixedArity = 3;
G__48730.cljs$lang$applyTo = (function (arglist__48737){
var p1 = cljs.core.first(arglist__48737);
arglist__48737 = cljs.core.next(arglist__48737);
var p2 = cljs.core.first(arglist__48737);
arglist__48737 = cljs.core.next(arglist__48737);
var p3 = cljs.core.first(arglist__48737);
var ps = cljs.core.rest(arglist__48737);
return G__48730__delegate(p1,p2,p3,ps);
});
G__48730.cljs$core$IFn$_invoke$arity$variadic = G__48730__delegate;
return G__48730;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__48738 = null;
if (arguments.length > 3) {
var G__48739__i = 0, G__48739__a = new Array(arguments.length -  3);
while (G__48739__i < G__48739__a.length) {G__48739__a[G__48739__i] = arguments[G__48739__i + 3]; ++G__48739__i;}
G__48738 = new cljs.core.IndexedSeq(G__48739__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__48738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__48794 = null;
var G__48794__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__48794__1 = (function (result){
var G__48780 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__48780) : rf.call(null,G__48780));
});
var G__48794__2 = (function (result,input){
var G__48781 = result;
var G__48782 = (function (){var G__48783 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48783) : f.call(null,G__48783));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48781,G__48782) : rf.call(null,G__48781,G__48782));
});
var G__48794__3 = (function() { 
var G__48795__delegate = function (result,input,inputs){
var G__48784 = result;
var G__48785 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48784,G__48785) : rf.call(null,G__48784,G__48785));
};
var G__48795 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__48796__i = 0, G__48796__a = new Array(arguments.length -  2);
while (G__48796__i < G__48796__a.length) {G__48796__a[G__48796__i] = arguments[G__48796__i + 2]; ++G__48796__i;}
  inputs = new cljs.core.IndexedSeq(G__48796__a,0);
} 
return G__48795__delegate.call(this,result,input,inputs);};
G__48795.cljs$lang$maxFixedArity = 2;
G__48795.cljs$lang$applyTo = (function (arglist__48797){
var result = cljs.core.first(arglist__48797);
arglist__48797 = cljs.core.next(arglist__48797);
var input = cljs.core.first(arglist__48797);
var inputs = cljs.core.rest(arglist__48797);
return G__48795__delegate(result,input,inputs);
});
G__48795.cljs$core$IFn$_invoke$arity$variadic = G__48795__delegate;
return G__48795;
})()
;
G__48794 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__48794__0.call(this);
case 1:
return G__48794__1.call(this,result);
case 2:
return G__48794__2.call(this,result,input);
default:
var G__48798 = null;
if (arguments.length > 2) {
var G__48799__i = 0, G__48799__a = new Array(arguments.length -  2);
while (G__48799__i < G__48799__a.length) {G__48799__a[G__48799__i] = arguments[G__48799__i + 2]; ++G__48799__i;}
G__48798 = new cljs.core.IndexedSeq(G__48799__a,0);
}
return G__48794__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__48798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48794.cljs$lang$maxFixedArity = 2;
G__48794.cljs$lang$applyTo = G__48794__3.cljs$lang$applyTo;
G__48794.cljs$core$IFn$_invoke$arity$0 = G__48794__0;
G__48794.cljs$core$IFn$_invoke$arity$1 = G__48794__1;
G__48794.cljs$core$IFn$_invoke$arity$2 = G__48794__2;
G__48794.cljs$core$IFn$_invoke$arity$variadic = G__48794__3.cljs$core$IFn$_invoke$arity$variadic;
return G__48794;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___48800 = size;
var i_48801 = (0);
while(true){
if((i_48801 < n__17032__auto___48800)){
cljs.core.chunk_append(b,(function (){var G__48786 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_48801);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48786) : f.call(null,G__48786));
})());

var G__48802 = (i_48801 + (1));
i_48801 = G__48802;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__48787 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48787) : f.call(null,G__48787));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__48788 = cljs.core.first(s1);
var G__48789 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__48788,G__48789) : f.call(null,G__48788,G__48789));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__48790 = cljs.core.first(s1);
var G__48791 = cljs.core.first(s2);
var G__48792 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__48790,G__48791,G__48792) : f.call(null,G__48790,G__48791,G__48792));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__48803__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__48740_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__48740_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__48803 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__48804__i = 0, G__48804__a = new Array(arguments.length -  4);
while (G__48804__i < G__48804__a.length) {G__48804__a[G__48804__i] = arguments[G__48804__i + 4]; ++G__48804__i;}
  colls = new cljs.core.IndexedSeq(G__48804__a,0);
} 
return G__48803__delegate.call(this,f,c1,c2,c3,colls);};
G__48803.cljs$lang$maxFixedArity = 4;
G__48803.cljs$lang$applyTo = (function (arglist__48805){
var f = cljs.core.first(arglist__48805);
arglist__48805 = cljs.core.next(arglist__48805);
var c1 = cljs.core.first(arglist__48805);
arglist__48805 = cljs.core.next(arglist__48805);
var c2 = cljs.core.first(arglist__48805);
arglist__48805 = cljs.core.next(arglist__48805);
var c3 = cljs.core.first(arglist__48805);
var colls = cljs.core.rest(arglist__48805);
return G__48803__delegate(f,c1,c2,c3,colls);
});
G__48803.cljs$core$IFn$_invoke$arity$variadic = G__48803__delegate;
return G__48803;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__48806 = null;
if (arguments.length > 4) {
var G__48807__i = 0, G__48807__a = new Array(arguments.length -  4);
while (G__48807__i < G__48807__a.length) {G__48807__a[G__48807__i] = arguments[G__48807__i + 4]; ++G__48807__i;}
G__48806 = new cljs.core.IndexedSeq(G__48807__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__48806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__48816 = null;
var G__48816__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__48816__1 = (function (result){
var G__48813 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__48813) : rf.call(null,G__48813));
});
var G__48816__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__48814 = result;
var G__48815 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48814,G__48815) : rf.call(null,G__48814,G__48815));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__48816 = function(result,input){
switch(arguments.length){
case 0:
return G__48816__0.call(this);
case 1:
return G__48816__1.call(this,result);
case 2:
return G__48816__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48816.cljs$core$IFn$_invoke$arity$0 = G__48816__0;
G__48816.cljs$core$IFn$_invoke$arity$1 = G__48816__1;
G__48816.cljs$core$IFn$_invoke$arity$2 = G__48816__2;
return G__48816;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__48823 = null;
var G__48823__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__48823__1 = (function (result){
var G__48820 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__48820) : rf.call(null,G__48820));
});
var G__48823__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__48821 = result;
var G__48822 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48821,G__48822) : rf.call(null,G__48821,G__48822));
}
});
G__48823 = function(result,input){
switch(arguments.length){
case 0:
return G__48823__0.call(this);
case 1:
return G__48823__1.call(this,result);
case 2:
return G__48823__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48823.cljs$core$IFn$_invoke$arity$0 = G__48823__0;
G__48823.cljs$core$IFn$_invoke$arity$1 = G__48823__1;
G__48823.cljs$core$IFn$_invoke$arity$2 = G__48823__2;
return G__48823;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__48824 = (n__$1 - (1));
var G__48825 = cljs.core.rest(s);
n__$1 = G__48824;
coll__$1 = G__48825;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__48828 = cljs.core.next(s);
var G__48829 = cljs.core.next(lead);
s = G__48828;
lead = G__48829;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__48842 = null;
var G__48842__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__48842__1 = (function (result){
var G__48836 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__48836) : rf.call(null,G__48836));
});
var G__48842__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__16133__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__16133__auto__)){
var G__48837 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__48837) : pred.call(null,G__48837));
} else {
return and__16133__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__48838 = result;
var G__48839 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48838,G__48839) : rf.call(null,G__48838,G__48839));
}
});
G__48842 = function(result,input){
switch(arguments.length){
case 0:
return G__48842__0.call(this);
case 1:
return G__48842__1.call(this,result);
case 2:
return G__48842__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48842.cljs$core$IFn$_invoke$arity$0 = G__48842__0;
G__48842.cljs$core$IFn$_invoke$arity$1 = G__48842__1;
G__48842.cljs$core$IFn$_invoke$arity$2 = G__48842__2;
return G__48842;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__16133__auto__ = s;
if(and__16133__auto__){
var G__48841 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__48841) : pred__$1.call(null,G__48841));
} else {
return and__16133__auto__;
}
})())){
var G__48843 = pred__$1;
var G__48844 = cljs.core.rest(s);
pred__$1 = G__48843;
coll__$1 = G__48844;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__48853 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48853) : f.call(null,G__48853));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__48856__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__48856 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__48857__i = 0, G__48857__a = new Array(arguments.length -  2);
while (G__48857__i < G__48857__a.length) {G__48857__a[G__48857__i] = arguments[G__48857__i + 2]; ++G__48857__i;}
  colls = new cljs.core.IndexedSeq(G__48857__a,0);
} 
return G__48856__delegate.call(this,c1,c2,colls);};
G__48856.cljs$lang$maxFixedArity = 2;
G__48856.cljs$lang$applyTo = (function (arglist__48858){
var c1 = cljs.core.first(arglist__48858);
arglist__48858 = cljs.core.next(arglist__48858);
var c2 = cljs.core.first(arglist__48858);
var colls = cljs.core.rest(arglist__48858);
return G__48856__delegate(c1,c2,colls);
});
G__48856.cljs$core$IFn$_invoke$arity$variadic = G__48856__delegate;
return G__48856;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__48859 = null;
if (arguments.length > 2) {
var G__48860__i = 0, G__48860__a = new Array(arguments.length -  2);
while (G__48860__i < G__48860__a.length) {G__48860__a[G__48860__i] = arguments[G__48860__i + 2]; ++G__48860__i;}
G__48859 = new cljs.core.IndexedSeq(G__48860__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__48859);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__48875 = null;
var G__48875__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__48875__1 = (function (result){
var G__48868 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__48868) : rf.call(null,G__48868));
});
var G__48875__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__48869 = result;
var G__48870 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48869,G__48870) : rf.call(null,G__48869,G__48870));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__48871 = sepr;
var G__48872 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48871,G__48872) : rf.call(null,G__48871,G__48872));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__48873 = result;
var G__48874 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48873,G__48874) : rf.call(null,G__48873,G__48874));
}
});
G__48875 = function(result,input){
switch(arguments.length){
case 0:
return G__48875__0.call(this);
case 1:
return G__48875__1.call(this,result);
case 2:
return G__48875__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48875.cljs$core$IFn$_invoke$arity$0 = G__48875__0;
G__48875.cljs$core$IFn$_invoke$arity$1 = G__48875__1;
G__48875.cljs$core$IFn$_invoke$arity$2 = G__48875__2;
return G__48875;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__48884__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__48884 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__48885__i = 0, G__48885__a = new Array(arguments.length -  1);
while (G__48885__i < G__48885__a.length) {G__48885__a[G__48885__i] = arguments[G__48885__i + 1]; ++G__48885__i;}
  colls = new cljs.core.IndexedSeq(G__48885__a,0);
} 
return G__48884__delegate.call(this,f,colls);};
G__48884.cljs$lang$maxFixedArity = 1;
G__48884.cljs$lang$applyTo = (function (arglist__48886){
var f = cljs.core.first(arglist__48886);
var colls = cljs.core.rest(arglist__48886);
return G__48884__delegate(f,colls);
});
G__48884.cljs$core$IFn$_invoke$arity$variadic = G__48884__delegate;
return G__48884;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__48887 = null;
if (arguments.length > 1) {
var G__48888__i = 0, G__48888__a = new Array(arguments.length -  1);
while (G__48888__i < G__48888__a.length) {G__48888__a[G__48888__i] = arguments[G__48888__i + 1]; ++G__48888__i;}
G__48887 = new cljs.core.IndexedSeq(G__48888__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__48887);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__48907 = null;
var G__48907__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__48907__1 = (function (result){
var G__48901 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__48901) : rf.call(null,G__48901));
});
var G__48907__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__48902 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__48902) : pred.call(null,G__48902));
})())){
var G__48903 = result;
var G__48904 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__48903,G__48904) : rf.call(null,G__48903,G__48904));
} else {
return result;
}
});
G__48907 = function(result,input){
switch(arguments.length){
case 0:
return G__48907__0.call(this);
case 1:
return G__48907__1.call(this,result);
case 2:
return G__48907__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__48907.cljs$core$IFn$_invoke$arity$0 = G__48907__0;
G__48907.cljs$core$IFn$_invoke$arity$1 = G__48907__1;
G__48907.cljs$core$IFn$_invoke$arity$2 = G__48907__2;
return G__48907;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__17032__auto___48908 = size;
var i_48909 = (0);
while(true){
if((i_48909 < n__17032__auto___48908)){
if(cljs.core.truth_((function (){var G__48905 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_48909);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__48905) : pred.call(null,G__48905));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_48909));
} else {
}

var G__48910 = (i_48909 + (1));
i_48909 = G__48910;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__48906 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__48906) : pred.call(null,G__48906));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__48917 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__48917) : branch_QMARK_.call(null,G__48917));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__48918 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__48918) : children.call(null,G__48918));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__48919_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__48919_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__48922 = to;
if(G__48922){
var bit__16819__auto__ = (G__48922.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__48922.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__48923 = to;
if(G__48923){
var bit__16819__auto__ = (G__48923.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16819__auto__) || (G__48923.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__48925 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48925) : f.call(null,G__48925));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__48926__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__48926 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__48927__i = 0, G__48927__a = new Array(arguments.length -  4);
while (G__48927__i < G__48927__a.length) {G__48927__a[G__48927__i] = arguments[G__48927__i + 4]; ++G__48927__i;}
  colls = new cljs.core.IndexedSeq(G__48927__a,0);
} 
return G__48926__delegate.call(this,f,c1,c2,c3,colls);};
G__48926.cljs$lang$maxFixedArity = 4;
G__48926.cljs$lang$applyTo = (function (arglist__48928){
var f = cljs.core.first(arglist__48928);
arglist__48928 = cljs.core.next(arglist__48928);
var c1 = cljs.core.first(arglist__48928);
arglist__48928 = cljs.core.next(arglist__48928);
var c2 = cljs.core.first(arglist__48928);
arglist__48928 = cljs.core.next(arglist__48928);
var c3 = cljs.core.first(arglist__48928);
var colls = cljs.core.rest(arglist__48928);
return G__48926__delegate(f,c1,c2,c3,colls);
});
G__48926.cljs$core$IFn$_invoke$arity$variadic = G__48926__delegate;
return G__48926;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__48929 = null;
if (arguments.length > 4) {
var G__48930__i = 0, G__48930__a = new Array(arguments.length -  4);
while (G__48930__i < G__48930__a.length) {G__48930__a[G__48930__i] = arguments[G__48930__i + 4]; ++G__48930__i;}
G__48929 = new cljs.core.IndexedSeq(G__48930__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__48929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__48932 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__48932) : pred.call(null,G__48932));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__48947 = m__$1;
if(G__48947){
var bit__16826__auto__ = (G__48947.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16826__auto__) || (G__48947.cljs$core$ILookup$)){
return true;
} else {
if((!G__48947.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__48947);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__48947);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__48948 = sentinel;
var G__48949 = m__$2;
var G__48950 = cljs.core.next(ks__$1);
sentinel = G__48948;
m__$1 = G__48949;
ks__$1 = G__48950;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__48951,v){
var vec__48956 = p__48951;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48956,(0),null);
var ks = cljs.core.nthnext(vec__48956,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__48957,f){
var vec__48995 = p__48957;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48995,(0),null);
var ks = cljs.core.nthnext(vec__48995,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__48996 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48996) : f.call(null,G__48996));
})());
}
});
var update_in__4 = (function (m,p__48958,f,a){
var vec__48997 = p__48958;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48997,(0),null);
var ks = cljs.core.nthnext(vec__48997,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__48998 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__48999 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__48998,G__48999) : f.call(null,G__48998,G__48999));
})());
}
});
var update_in__5 = (function (m,p__48959,f,a,b){
var vec__49000 = p__48959;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49000,(0),null);
var ks = cljs.core.nthnext(vec__49000,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49001 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__49002 = a;
var G__49003 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49001,G__49002,G__49003) : f.call(null,G__49001,G__49002,G__49003));
})());
}
});
var update_in__6 = (function (m,p__48960,f,a,b,c){
var vec__49004 = p__48960;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49004,(0),null);
var ks = cljs.core.nthnext(vec__49004,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49005 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__49006 = a;
var G__49007 = b;
var G__49008 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__49005,G__49006,G__49007,G__49008) : f.call(null,G__49005,G__49006,G__49007,G__49008));
})());
}
});
var update_in__7 = (function() { 
var G__49010__delegate = function (m,p__48961,f,a,b,c,args){
var vec__49009 = p__48961;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49009,(0),null);
var ks = cljs.core.nthnext(vec__49009,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__49010 = function (m,p__48961,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__49011__i = 0, G__49011__a = new Array(arguments.length -  6);
while (G__49011__i < G__49011__a.length) {G__49011__a[G__49011__i] = arguments[G__49011__i + 6]; ++G__49011__i;}
  args = new cljs.core.IndexedSeq(G__49011__a,0);
} 
return G__49010__delegate.call(this,m,p__48961,f,a,b,c,args);};
G__49010.cljs$lang$maxFixedArity = 6;
G__49010.cljs$lang$applyTo = (function (arglist__49012){
var m = cljs.core.first(arglist__49012);
arglist__49012 = cljs.core.next(arglist__49012);
var p__48961 = cljs.core.first(arglist__49012);
arglist__49012 = cljs.core.next(arglist__49012);
var f = cljs.core.first(arglist__49012);
arglist__49012 = cljs.core.next(arglist__49012);
var a = cljs.core.first(arglist__49012);
arglist__49012 = cljs.core.next(arglist__49012);
var b = cljs.core.first(arglist__49012);
arglist__49012 = cljs.core.next(arglist__49012);
var c = cljs.core.first(arglist__49012);
var args = cljs.core.rest(arglist__49012);
return G__49010__delegate(m,p__48961,f,a,b,c,args);
});
G__49010.cljs$core$IFn$_invoke$arity$variadic = G__49010__delegate;
return G__49010;
})()
;
update_in = function(m,p__48961,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__48961,f);
case 4:
return update_in__4.call(this,m,p__48961,f,a);
case 5:
return update_in__5.call(this,m,p__48961,f,a,b);
case 6:
return update_in__6.call(this,m,p__48961,f,a,b,c);
default:
var G__49013 = null;
if (arguments.length > 6) {
var G__49014__i = 0, G__49014__a = new Array(arguments.length -  6);
while (G__49014__i < G__49014__a.length) {G__49014__a[G__49014__i] = arguments[G__49014__i + 6]; ++G__49014__i;}
G__49013 = new cljs.core.IndexedSeq(G__49014__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__48961,f,a,b,c, G__49013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49025 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49025) : f.call(null,G__49025));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49026 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__49027 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49026,G__49027) : f.call(null,G__49026,G__49027));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49028 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__49029 = x;
var G__49030 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49028,G__49029,G__49030) : f.call(null,G__49028,G__49029,G__49030));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49031 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__49032 = x;
var G__49033 = y;
var G__49034 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__49031,G__49032,G__49033,G__49034) : f.call(null,G__49031,G__49032,G__49033,G__49034));
})());
});
var update__7 = (function() { 
var G__49035__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__49035 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__49036__i = 0, G__49036__a = new Array(arguments.length -  6);
while (G__49036__i < G__49036__a.length) {G__49036__a[G__49036__i] = arguments[G__49036__i + 6]; ++G__49036__i;}
  more = new cljs.core.IndexedSeq(G__49036__a,0);
} 
return G__49035__delegate.call(this,m,k,f,x,y,z,more);};
G__49035.cljs$lang$maxFixedArity = 6;
G__49035.cljs$lang$applyTo = (function (arglist__49037){
var m = cljs.core.first(arglist__49037);
arglist__49037 = cljs.core.next(arglist__49037);
var k = cljs.core.first(arglist__49037);
arglist__49037 = cljs.core.next(arglist__49037);
var f = cljs.core.first(arglist__49037);
arglist__49037 = cljs.core.next(arglist__49037);
var x = cljs.core.first(arglist__49037);
arglist__49037 = cljs.core.next(arglist__49037);
var y = cljs.core.first(arglist__49037);
arglist__49037 = cljs.core.next(arglist__49037);
var z = cljs.core.first(arglist__49037);
var more = cljs.core.rest(arglist__49037);
return G__49035__delegate(m,k,f,x,y,z,more);
});
G__49035.cljs$core$IFn$_invoke$arity$variadic = G__49035__delegate;
return G__49035;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__49038 = null;
if (arguments.length > 6) {
var G__49039__i = 0, G__49039__a = new Array(arguments.length -  6);
while (G__49039__i < G__49039__a.length) {G__49039__a[G__49039__i] = arguments[G__49039__i + 6]; ++G__49039__i;}
G__49038 = new cljs.core.IndexedSeq(G__49039__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__49038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__49040 = (ll - (5));
var G__49041 = r;
ll = G__49040;
ret = G__49041;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__49046 = cljs.core.pv_aget(node,(0));
var G__49047 = (level - (5));
node = G__49046;
level = G__49047;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__49048 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__49049 = (level - (5));
node = G__49048;
level = G__49049;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__49059 = init__$2;
var G__49060 = (j + i);
var G__49061 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49059,G__49060,G__49061) : f.call(null,G__49059,G__49060,G__49061));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__49072 = (j + (1));
var G__49073 = init__$3;
j = G__49072;
init__$2 = G__49073;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49062 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49062) : cljs.core.deref.call(null,G__49062));
} else {
var G__49074 = (i + len);
var G__49075 = init__$2;
i = G__49074;
init__$1 = G__49075;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__49063 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__49063) : cljs.core.tv_editable_root.call(null,G__49063));
})(),(function (){var G__49064 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__49064) : cljs.core.tv_editable_tail.call(null,G__49064));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__49065 = init__$2;
var G__49066 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49065,G__49066) : f.call(null,G__49065,G__49066));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__49076 = (j + (1));
var G__49077 = init__$3;
j = G__49076;
init__$2 = G__49077;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49067 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49067) : cljs.core.deref.call(null,G__49067));
} else {
var G__49078 = (i + len);
var G__49079 = init__$2;
i = G__49078;
init__$1 = G__49079;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__49068 = coll__$1;
var G__49069 = cljs.core.first_array_for_longvec(coll__$1);
var G__49070 = (0);
var G__49071 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__49068,G__49069,G__49070,G__49071) : cljs.core.chunked_seq.call(null,G__49068,G__49069,G__49070,G__49071));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__17032__auto___49080 = len;
var i_49081 = (0);
while(true){
if((i_49081 < n__17032__auto___49080)){
(new_tail[i_49081] = (self__.tail[i_49081]));

var G__49082 = (i_49081 + (1));
i_49081 = G__49082;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__49083 = null;
var G__49083__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__49083__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__49083 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49083__2.call(this,self__,k);
case 3:
return G__49083__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49083.cljs$core$IFn$_invoke$arity$2 = G__49083__2;
G__49083.cljs$core$IFn$_invoke$arity$3 = G__49083__3;
return G__49083;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args49058){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49058)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__49084 = (i + (1));
var G__49085 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__49084;
out = G__49085;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__49086__i = 0, G__49086__a = new Array(arguments.length -  0);
while (G__49086__i < G__49086__a.length) {G__49086__a[G__49086__i] = arguments[G__49086__i + 0]; ++G__49086__i;}
  args = new cljs.core.IndexedSeq(G__49086__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__49087){
var args = cljs.core.seq(arglist__49087);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__49088 = self__.vec;
var G__49089 = self__.node;
var G__49090 = self__.i;
var G__49091 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__49088,G__49089,G__49090,G__49091) : cljs.core.chunked_seq.call(null,G__49088,G__49089,G__49090,G__49091));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__49092 = self__.vec;
var G__49093 = (self__.i + self__.off);
var G__49094 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__49092,G__49093,G__49094) : cljs.core.subvec.call(null,G__49092,G__49093,G__49094));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__49095 = self__.vec;
var G__49096 = (self__.i + self__.off);
var G__49097 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__49095,G__49096,G__49097) : cljs.core.subvec.call(null,G__49095,G__49096,G__49097));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__49098 = self__.vec;
var G__49099 = self__.node;
var G__49100 = self__.i;
var G__49101 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__49098,G__49099,G__49100,G__49101) : cljs.core.chunked_seq.call(null,G__49098,G__49099,G__49100,G__49101));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__49102 = self__.vec;
var G__49103 = cljs.core.unchecked_array_for(self__.vec,end);
var G__49104 = end;
var G__49105 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__49102,G__49103,G__49104,G__49105) : cljs.core.chunked_seq.call(null,G__49102,G__49103,G__49104,G__49105));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__49106 = self__.vec;
var G__49107 = self__.node;
var G__49108 = self__.i;
var G__49109 = self__.off;
var G__49110 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__49106,G__49107,G__49108,G__49109,G__49110) : cljs.core.chunked_seq.call(null,G__49106,G__49107,G__49108,G__49109,G__49110));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__49111 = self__.vec;
var G__49112 = cljs.core.unchecked_array_for(self__.vec,end);
var G__49113 = end;
var G__49114 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__49111,G__49112,G__49113,G__49114) : cljs.core.chunked_seq.call(null,G__49111,G__49112,G__49113,G__49114));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__49116 = self__.meta;
var G__49117 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__49118 = self__.start;
var G__49119 = (function (){var x__16462__auto__ = self__.end;
var y__16463__auto__ = (v_pos + (1));
return ((x__16462__auto__ > y__16463__auto__) ? x__16462__auto__ : y__16463__auto__);
})();
var G__49120 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__49116,G__49117,G__49118,G__49119,G__49120) : cljs.core.build_subvec.call(null,G__49116,G__49117,G__49118,G__49119,G__49120));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__49121 = self__.meta;
var G__49122 = self__.v;
var G__49123 = self__.start;
var G__49124 = (self__.end - (1));
var G__49125 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__49121,G__49122,G__49123,G__49124,G__49125) : cljs.core.build_subvec.call(null,G__49121,G__49122,G__49123,G__49124,G__49125));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__49127 = meta__$1;
var G__49128 = self__.v;
var G__49129 = self__.start;
var G__49130 = self__.end;
var G__49131 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__49127,G__49128,G__49129,G__49130,G__49131) : cljs.core.build_subvec.call(null,G__49127,G__49128,G__49129,G__49130,G__49131));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__49132 = self__.meta;
var G__49133 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__49134 = self__.start;
var G__49135 = (self__.end + (1));
var G__49136 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__49132,G__49133,G__49134,G__49135,G__49136) : cljs.core.build_subvec.call(null,G__49132,G__49133,G__49134,G__49135,G__49136));
});

cljs.core.Subvec.prototype.call = (function() {
var G__49137 = null;
var G__49137__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__49137__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__49137 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49137__2.call(this,self__,k);
case 3:
return G__49137__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49137.cljs$core$IFn$_invoke$arity$2 = G__49137__2;
G__49137.cljs$core$IFn$_invoke$arity$3 = G__49137__3;
return G__49137;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args49115){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49115)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__49138 = meta;
var G__49139 = v.v;
var G__49140 = (v.start + start);
var G__49141 = (v.start + end);
var G__49142 = __hash;
meta = G__49138;
v = G__49139;
start = G__49140;
end = G__49141;
__hash = G__49142;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj49149 = {};
return obj49149;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__49157 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__49158 = (level - (5));
node = G__49157;
level = G__49158;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__49162 = null;
var G__49162__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49162__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49162 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49162__2.call(this,self__,k);
case 3:
return G__49162__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49162.cljs$core$IFn$_invoke$arity$2 = G__49162__2;
G__49162.cljs$core$IFn$_invoke$arity$3 = G__49162__3;
return G__49162;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args49159){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49159)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__16145__auto__ = self__.front;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = self__.rear;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__49163 = (i + incr);
i = G__49163;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__49164 = (i + (1));
var G__49165 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__49164;
out = G__49165;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj49169 = {};
return obj49169;
})();
var l = ks.length;
var i_49170 = (0);
while(true){
if((i_49170 < l)){
var k_49171 = (ks[i_49170]);
(new_obj[k_49171] = (obj[k_49171]));

var G__49172 = (i_49170 + (1));
i_49170 = G__49172;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__49176 = k;
return goog.isString(G__49176);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__49177 = init__$1;
var G__49178 = k;
var G__49179 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49177,G__49178,G__49179) : f.call(null,G__49177,G__49178,G__49179));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49180 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49180) : cljs.core.deref.call(null,G__49180));
} else {
var G__49186 = cljs.core.rest(keys__$1);
var G__49187 = init__$2;
keys__$1 = G__49186;
init__$1 = G__49187;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__49182 = k;
return goog.isString(G__49182);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__49183 = k;
return goog.isString(G__49183);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__16133__auto__ = (function (){var G__49185 = k;
return goog.isString(G__49185);
})();
if(cljs.core.truth_(and__16133__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__16133__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__49173_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__49173_SHARP_,(self__.strobj[p1__49173_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__49188 = null;
var G__49188__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49188__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49188 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49188__2.call(this,self__,k);
case 3:
return G__49188__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49188.cljs$core$IFn$_invoke$arity$2 = G__49188__2;
G__49188.cljs$core$IFn$_invoke$arity$3 = G__49188__3;
return G__49188;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args49174){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49174)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj49190 = {};
return obj49190;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__49191 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49191,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49191,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__49192 = (i + (2));
i = G__49192;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__49193 = (i + (2));
i = G__49193;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__49194 = (i + (2));
i = G__49194;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__49195 = (i + (2));
i = G__49195;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__49196 = (i + (2));
i = G__49196;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__16145__auto__ = (function (){var G__49200 = k;
return goog.isString(G__49200);
})();
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_49201 = (0);
while(true){
if((i_49201 < l)){
(narr[i_49201] = (arr[i_49201]));

var G__49202 = (i_49201 + (1));
i_49201 = G__49202;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__49204 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__49204) : cljs.core.keys.call(null,G__49204));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__49205 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__49205) : cljs.core.vals.call(null,G__49205));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__49206 = cljs.core.seq(coll);
var chunk__49207 = null;
var count__49208 = (0);
var i__49209 = (0);
while(true){
if((i__49209 < count__49208)){
var vec__49210 = chunk__49207.cljs$core$IIndexed$_nth$arity$2(null,i__49209);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49210,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49210,(1),null);
var G__49211_49224 = v;
var G__49212_49225 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49211_49224,G__49212_49225) : f.call(null,G__49211_49224,G__49212_49225));

var G__49226 = seq__49206;
var G__49227 = chunk__49207;
var G__49228 = count__49208;
var G__49229 = (i__49209 + (1));
seq__49206 = G__49226;
chunk__49207 = G__49227;
count__49208 = G__49228;
i__49209 = G__49229;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__49206);
if(temp__4126__auto__){
var seq__49206__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__49206__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__49206__$1);
var G__49230 = cljs.core.chunk_rest(seq__49206__$1);
var G__49231 = c__16932__auto__;
var G__49232 = cljs.core.count(c__16932__auto__);
var G__49233 = (0);
seq__49206 = G__49230;
chunk__49207 = G__49231;
count__49208 = G__49232;
i__49209 = G__49233;
continue;
} else {
var vec__49213 = cljs.core.first(seq__49206__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49213,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49213,(1),null);
var G__49214_49234 = v;
var G__49215_49235 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49214_49234,G__49215_49235) : f.call(null,G__49214_49234,G__49215_49235));

var G__49236 = cljs.core.next(seq__49206__$1);
var G__49237 = null;
var G__49238 = (0);
var G__49239 = (0);
seq__49206 = G__49236;
chunk__49207 = G__49237;
count__49208 = G__49238;
i__49209 = G__49239;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__49216 = init__$1;
var G__49217 = (self__.arr[i]);
var G__49218 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49216,G__49217,G__49218) : f.call(null,G__49216,G__49217,G__49218));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49219 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49219) : cljs.core.deref.call(null,G__49219));
} else {
var G__49240 = (i + (2));
var G__49241 = init__$2;
i = G__49240;
init__$1 = G__49241;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__49220 = other;
if(G__49220){
var bit__16819__auto__ = (G__49220.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16819__auto__) || (G__49220.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__49242 = (i + (2));
i = G__49242;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj49222 = {};
return obj49222;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__49243 = (s + (2));
var G__49244 = d;
s = G__49243;
d = G__49244;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__49245 = (s + (2));
var G__49246 = (d + (2));
s = G__49245;
d = G__49246;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__49223 = cljs.core.aclone(self__.arr);
(G__49223[(idx + (1))] = v);

return G__49223;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__49247 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__49248 = cljs.core.next(es);
ret = G__49247;
es = G__49248;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__49249 = null;
var G__49249__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49249__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49249 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49249__2.call(this,self__,k);
case 3:
return G__49249__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49249.cljs$core$IFn$_invoke$arity$2 = G__49249__2;
G__49249.cljs$core$IFn$_invoke$arity$3 = G__49249__3;
return G__49249;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args49203){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49203)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__49250 = (i + (2));
var G__49251 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__49250;
ret = G__49251;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__49252_49260 = self__.arr;
G__49252_49260.pop();

G__49252_49260.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__49253 = self__.len;
var G__49254 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__49253,G__49254) : cljs.core.array__GT_transient_hash_map.call(null,G__49253,G__49254));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__49255 = o;
if(G__49255){
var bit__16826__auto__ = (G__49255.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__49255.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__49255.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__49255);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__49255);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__49256 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__49256) : cljs.core.key.call(null,G__49256));
})(),(function (){var G__49257 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__49257) : cljs.core.val.call(null,G__49257));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__49261 = cljs.core.next(es);
var G__49262 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__49258 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__49258) : cljs.core.key.call(null,G__49258));
})(),(function (){var G__49259 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__49259) : cljs.core.val.call(null,G__49259));
})());
es = G__49261;
tcoll__$2 = G__49262;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__49263 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__49264 = (i + (2));
out = G__49263;
i = G__49264;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__49267 = cljs.core.aclone(arr);
(G__49267[i] = a);

return G__49267;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__49268 = cljs.core.aclone(arr);
(G__49268[i] = a);

(G__49268[j] = b);

return G__49268;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__49273 = init__$1;
var G__49274 = k;
var G__49275 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49273,G__49274,G__49275) : f.call(null,G__49273,G__49274,G__49275));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49276 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49276) : cljs.core.deref.call(null,G__49276));
} else {
var G__49277 = (i + (2));
var G__49278 = init__$2;
i = G__49277;
init__$1 = G__49278;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__49279 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__49279) : cljs.core.create_inode_seq.call(null,G__49279));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_49293 = (0);
var j_49294 = (0);
while(true){
if((i_49293 < (32))){
if((((self__.bitmap >>> i_49293) & (1)) === (0))){
var G__49295 = (i_49293 + (1));
var G__49296 = j_49294;
i_49293 = G__49295;
j_49294 = G__49296;
continue;
} else {
(nodes[i_49293] = ((!(((self__.arr[j_49294]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_49294])),(self__.arr[j_49294]),(self__.arr[(j_49294 + (1))]),added_leaf_QMARK_):(self__.arr[(j_49294 + (1))])));

var G__49297 = (i_49293 + (1));
var G__49298 = (j_49294 + (2));
i_49293 = G__49297;
j_49294 = G__49298;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__49280 = edit__$1;
var G__49281 = (shift + (5));
var G__49282 = key_or_nil;
var G__49283 = val_or_node;
var G__49284 = hash;
var G__49285 = key;
var G__49286 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__49280,G__49281,G__49282,G__49283,G__49284,G__49285,G__49286) : cljs.core.create_node.call(null,G__49280,G__49281,G__49282,G__49283,G__49284,G__49285,G__49286));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_49299 = (0);
var j_49300 = (0);
while(true){
if((i_49299 < (32))){
if((((self__.bitmap >>> i_49299) & (1)) === (0))){
var G__49301 = (i_49299 + (1));
var G__49302 = j_49300;
i_49299 = G__49301;
j_49300 = G__49302;
continue;
} else {
(nodes[i_49299] = ((!(((self__.arr[j_49300]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_49300])),(self__.arr[j_49300]),(self__.arr[(j_49300 + (1))]),added_leaf_QMARK_):(self__.arr[(j_49300 + (1))])));

var G__49303 = (i_49299 + (1));
var G__49304 = (j_49300 + (2));
i_49299 = G__49303;
j_49300 = G__49304;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__49287 = (shift + (5));
var G__49288 = key_or_nil;
var G__49289 = val_or_node;
var G__49290 = hash;
var G__49291 = key;
var G__49292 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__49287,G__49288,G__49289,G__49290,G__49291,G__49292) : cljs.core.create_node.call(null,G__49287,G__49288,G__49289,G__49290,G__49291,G__49292));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__49305 = (i + (1));
var G__49306 = (j + (2));
var G__49307 = (bitmap | ((1) << i));
i = G__49305;
j = G__49306;
bitmap = G__49307;
continue;
} else {
var G__49308 = (i + (1));
var G__49309 = j;
var G__49310 = bitmap;
i = G__49308;
j = G__49309;
bitmap = G__49310;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__49311 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__49311) : cljs.core.create_array_node_seq.call(null,G__49311));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49312 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49312) : cljs.core.deref.call(null,G__49312));
} else {
var G__49313 = (i + (1));
var G__49314 = init__$2;
i = G__49313;
init__$1 = G__49314;
continue;
}
} else {
var G__49315 = (i + (1));
var G__49316 = init__$1;
i = G__49315;
init__$1 = G__49316;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__49317 = (i + (2));
i = G__49317;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__49318 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__49318) : cljs.core.create_inode_seq.call(null,G__49318));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__49319 = self__.nodes;
var G__49320 = (self__.i + (2));
var G__49321 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__49319,G__49320,G__49321) : cljs.core.create_inode_seq.call(null,G__49319,G__49320,G__49321));
} else {
var G__49322 = self__.nodes;
var G__49323 = self__.i;
var G__49324 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__49322,G__49323,G__49324) : cljs.core.create_inode_seq.call(null,G__49322,G__49323,G__49324));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__49328 = (j + (2));
j = G__49328;
continue;
}
} else {
var G__49329 = (j + (2));
j = G__49329;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__49330 = null;
var G__49331 = self__.nodes;
var G__49332 = self__.i;
var G__49333 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__49330,G__49331,G__49332,G__49333) : cljs.core.create_array_node_seq.call(null,G__49330,G__49331,G__49332,G__49333));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__49338 = (j + (1));
j = G__49338;
continue;
}
} else {
var G__49339 = (j + (1));
j = G__49339;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__49341 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__49341) : cljs.core.keys.call(null,G__49341));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__49342 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__49342) : cljs.core.vals.call(null,G__49342));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__49343 = cljs.core.seq(coll);
var chunk__49344 = null;
var count__49345 = (0);
var i__49346 = (0);
while(true){
if((i__49346 < count__49345)){
var vec__49347 = chunk__49344.cljs$core$IIndexed$_nth$arity$2(null,i__49346);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49347,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49347,(1),null);
var G__49348_49359 = v;
var G__49349_49360 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49348_49359,G__49349_49360) : f.call(null,G__49348_49359,G__49349_49360));

var G__49361 = seq__49343;
var G__49362 = chunk__49344;
var G__49363 = count__49345;
var G__49364 = (i__49346 + (1));
seq__49343 = G__49361;
chunk__49344 = G__49362;
count__49345 = G__49363;
i__49346 = G__49364;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__49343);
if(temp__4126__auto__){
var seq__49343__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__49343__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__49343__$1);
var G__49365 = cljs.core.chunk_rest(seq__49343__$1);
var G__49366 = c__16932__auto__;
var G__49367 = cljs.core.count(c__16932__auto__);
var G__49368 = (0);
seq__49343 = G__49365;
chunk__49344 = G__49366;
count__49345 = G__49367;
i__49346 = G__49368;
continue;
} else {
var vec__49350 = cljs.core.first(seq__49343__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49350,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49350,(1),null);
var G__49351_49369 = v;
var G__49352_49370 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49351_49369,G__49352_49370) : f.call(null,G__49351_49369,G__49352_49370));

var G__49371 = cljs.core.next(seq__49343__$1);
var G__49372 = null;
var G__49373 = (0);
var G__49374 = (0);
seq__49343 = G__49371;
chunk__49344 = G__49372;
count__49345 = G__49373;
i__49346 = G__49374;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__49353 = init;
var G__49354 = null;
var G__49355 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49353,G__49354,G__49355) : f.call(null,G__49353,G__49354,G__49355));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__49356 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49356) : cljs.core.deref.call(null,G__49356));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj49358 = {};
return obj49358;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__49375 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__49376 = cljs.core.next(es);
ret = G__49375;
es = G__49376;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__49377 = null;
var G__49377__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49377__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49377 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49377__2.call(this,self__,k);
case 3:
return G__49377__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49377.cljs$core$IFn$_invoke$arity$2 = G__49377__2;
G__49377.cljs$core$IFn$_invoke$arity$3 = G__49377__3;
return G__49377;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args49340){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49340)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__49378 = (i + (2));
var G__49379 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__49378;
ret = G__49379;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__49380 = (i + (1));
var G__49381 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__49380;
out = G__49381;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__49382 = o;
if(G__49382){
var bit__16826__auto__ = (G__49382.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16826__auto__) || (G__49382.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__49382.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__49382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__49382);
}
})()){
return tcoll.assoc_BANG_((function (){var G__49383 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__49383) : cljs.core.key.call(null,G__49383));
})(),(function (){var G__49384 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__49384) : cljs.core.val.call(null,G__49384));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__49387 = cljs.core.next(es);
var G__49388 = tcoll__$1.assoc_BANG_((function (){var G__49385 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__49385) : cljs.core.key.call(null,G__49385));
})(),(function (){var G__49386 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__49386) : cljs.core.val.call(null,G__49386));
})());
es = G__49387;
tcoll__$1 = G__49388;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__49389 = ((ascending_QMARK_)?t.left:t.right);
var G__49390 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__49389;
stack__$1 = G__49390;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__49403 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49403) : cljs.core.deref.call(null,G__49403));
} else {
var init__$2 = (function (){var G__49404 = init__$1;
var G__49405 = node.key;
var G__49406 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49404,G__49405,G__49406) : f.call(null,G__49404,G__49405,G__49406));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__49407 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49407) : cljs.core.deref.call(null,G__49407));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__49408 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49408) : cljs.core.deref.call(null,G__49408));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__49410 = null;
var G__49410__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49410__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49410 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49410__2.call(this,self__,k);
case 3:
return G__49410__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49410.cljs$core$IFn$_invoke$arity$2 = G__49410__2;
G__49410.cljs$core$IFn$_invoke$arity$3 = G__49410__3;
return G__49410;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args49409){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49409)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__49412 = null;
var G__49412__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49412__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49412 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49412__2.call(this,self__,k);
case 3:
return G__49412__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49412.cljs$core$IFn$_invoke$arity$2 = G__49412__2;
G__49412.cljs$core$IFn$_invoke$arity$3 = G__49412__3;
return G__49412;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args49411){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49411)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__49425 = k;
var G__49426 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__49425,G__49426) : comp.call(null,G__49425,G__49426));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__49445 = k;
var G__49446 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__49445,G__49446) : comp.call(null,G__49445,G__49446));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__49457 = k;
var G__49458 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__49457,G__49458) : comp.call(null,G__49457,G__49458));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__49460 = cljs.core.seq(coll);
var chunk__49461 = null;
var count__49462 = (0);
var i__49463 = (0);
while(true){
if((i__49463 < count__49462)){
var vec__49464 = chunk__49461.cljs$core$IIndexed$_nth$arity$2(null,i__49463);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49464,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49464,(1),null);
var G__49465_49477 = v;
var G__49466_49478 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49465_49477,G__49466_49478) : f.call(null,G__49465_49477,G__49466_49478));

var G__49479 = seq__49460;
var G__49480 = chunk__49461;
var G__49481 = count__49462;
var G__49482 = (i__49463 + (1));
seq__49460 = G__49479;
chunk__49461 = G__49480;
count__49462 = G__49481;
i__49463 = G__49482;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__49460);
if(temp__4126__auto__){
var seq__49460__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__49460__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__49460__$1);
var G__49483 = cljs.core.chunk_rest(seq__49460__$1);
var G__49484 = c__16932__auto__;
var G__49485 = cljs.core.count(c__16932__auto__);
var G__49486 = (0);
seq__49460 = G__49483;
chunk__49461 = G__49484;
count__49462 = G__49485;
i__49463 = G__49486;
continue;
} else {
var vec__49467 = cljs.core.first(seq__49460__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49467,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49467,(1),null);
var G__49468_49487 = v;
var G__49469_49488 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49468_49487,G__49469_49488) : f.call(null,G__49468_49487,G__49469_49488));

var G__49489 = cljs.core.next(seq__49460__$1);
var G__49490 = null;
var G__49491 = (0);
var G__49492 = (0);
seq__49460 = G__49489;
chunk__49461 = G__49490;
count__49462 = G__49491;
i__49463 = G__49492;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__49470 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__49470) : cljs.core.keys.call(null,G__49470));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__49471 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__49471) : cljs.core.vals.call(null,G__49471));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__49472 = k;
var G__49473 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__49472,G__49473) : self__.comp.call(null,G__49472,G__49473));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__49493 = t.left;
t = G__49493;
continue;
} else {
var G__49494 = t.right;
t = G__49494;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__49495 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__49496 = cljs.core.next(es);
ret = G__49495;
es = G__49496;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__49497 = null;
var G__49497__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49497__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49497 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49497__2.call(this,self__,k);
case 3:
return G__49497__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49497.cljs$core$IFn$_invoke$arity$2 = G__49497__2;
G__49497.cljs$core$IFn$_invoke$arity$3 = G__49497__3;
return G__49497;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args49459){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49459)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__49474 = k;
var G__49475 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__49474,G__49475) : self__.comp.call(null,G__49474,G__49475));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__49498 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__49499 = t.left;
stack = G__49498;
t = G__49499;
continue;
} else {
var G__49500 = stack;
var G__49501 = t.right;
stack = G__49500;
t = G__49501;
continue;
}
} else {
if((c > (0))){
var G__49502 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__49503 = t.right;
stack = G__49502;
t = G__49503;
continue;
} else {
var G__49504 = stack;
var G__49505 = t.left;
stack = G__49504;
t = G__49505;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__49476 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__49476) : cljs.core.key.call(null,G__49476));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__49506 = cljs.core.nnext(in$);
var G__49507 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__49506;
out = G__49507;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__49508__i = 0, G__49508__a = new Array(arguments.length -  0);
while (G__49508__i < G__49508__a.length) {G__49508__a[G__49508__i] = arguments[G__49508__i + 0]; ++G__49508__i;}
  keyvals = new cljs.core.IndexedSeq(G__49508__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__49509){
var keyvals = cljs.core.seq(arglist__49509);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__49510__i = 0, G__49510__a = new Array(arguments.length -  0);
while (G__49510__i < G__49510__a.length) {G__49510__a[G__49510__i] = arguments[G__49510__i + 0]; ++G__49510__i;}
  keyvals = new cljs.core.IndexedSeq(G__49510__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__49511){
var keyvals = cljs.core.seq(arglist__49511);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj49515 = {};
return obj49515;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__49516 = cljs.core.nnext(kvs);
kvs = G__49516;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__49517__i = 0, G__49517__a = new Array(arguments.length -  0);
while (G__49517__i < G__49517__a.length) {G__49517__a[G__49517__i] = arguments[G__49517__i + 0]; ++G__49517__i;}
  keyvals = new cljs.core.IndexedSeq(G__49517__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__49518){
var keyvals = cljs.core.seq(arglist__49518);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__49519 = cljs.core.nnext(in$);
var G__49520 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__49519;
out = G__49520;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__49521__i = 0, G__49521__a = new Array(arguments.length -  0);
while (G__49521__i < G__49521__a.length) {G__49521__a[G__49521__i] = arguments[G__49521__i + 0]; ++G__49521__i;}
  keyvals = new cljs.core.IndexedSeq(G__49521__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__49522){
var keyvals = cljs.core.seq(arglist__49522);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__49523 = cljs.core.nnext(in$);
var G__49524 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__49523;
out = G__49524;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__49525__i = 0, G__49525__a = new Array(arguments.length -  1);
while (G__49525__i < G__49525__a.length) {G__49525__a[G__49525__i] = arguments[G__49525__i + 1]; ++G__49525__i;}
  keyvals = new cljs.core.IndexedSeq(G__49525__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__49526){
var comparator = cljs.core.first(arglist__49526);
var keyvals = cljs.core.rest(arglist__49526);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__49527 = self__.mseq;
if(G__49527){
var bit__16826__auto__ = (G__49527.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__49527.cljs$core$INext$)){
return true;
} else {
if((!G__49527.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49527);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49527);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__49528 = self__.mseq;
if(G__49528){
var bit__16826__auto__ = (G__49528.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__49528.cljs$core$INext$)){
return true;
} else {
if((!G__49528.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49528);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49528);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__49529 = self__.mseq;
if(G__49529){
var bit__16826__auto__ = (G__49529.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__49529.cljs$core$INext$)){
return true;
} else {
if((!G__49529.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49529);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49529);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__49530 = self__.mseq;
if(G__49530){
var bit__16826__auto__ = (G__49530.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16826__auto__) || (G__49530.cljs$core$INext$)){
return true;
} else {
if((!G__49530.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49530);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__49530);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__49531_SHARP_,p2__49532_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__16145__auto__ = p1__49531_SHARP_;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__49532_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__49533__i = 0, G__49533__a = new Array(arguments.length -  0);
while (G__49533__i < G__49533__a.length) {G__49533__a[G__49533__i] = arguments[G__49533__i + 0]; ++G__49533__i;}
  maps = new cljs.core.IndexedSeq(G__49533__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__49534){
var maps = cljs.core.seq(arglist__49534);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__49537 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__49538 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49537,G__49538) : f.call(null,G__49537,G__49538));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__16145__auto__ = m1;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__49539__i = 0, G__49539__a = new Array(arguments.length -  1);
while (G__49539__i < G__49539__a.length) {G__49539__a[G__49539__i] = arguments[G__49539__i + 1]; ++G__49539__i;}
  maps = new cljs.core.IndexedSeq(G__49539__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__49540){
var f = cljs.core.first(arglist__49540);
var maps = cljs.core.rest(arglist__49540);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__49541 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__49542 = cljs.core.next(keys);
ret = G__49541;
keys = G__49542;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__49545 = cljs.core.seq(coll);
var chunk__49546 = null;
var count__49547 = (0);
var i__49548 = (0);
while(true){
if((i__49548 < count__49547)){
var vec__49549 = chunk__49546.cljs$core$IIndexed$_nth$arity$2(null,i__49548);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49549,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49549,(1),null);
var G__49550_49555 = v;
var G__49551_49556 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49550_49555,G__49551_49556) : f.call(null,G__49550_49555,G__49551_49556));

var G__49557 = seq__49545;
var G__49558 = chunk__49546;
var G__49559 = count__49547;
var G__49560 = (i__49548 + (1));
seq__49545 = G__49557;
chunk__49546 = G__49558;
count__49547 = G__49559;
i__49548 = G__49560;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__49545);
if(temp__4126__auto__){
var seq__49545__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__49545__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__49545__$1);
var G__49561 = cljs.core.chunk_rest(seq__49545__$1);
var G__49562 = c__16932__auto__;
var G__49563 = cljs.core.count(c__16932__auto__);
var G__49564 = (0);
seq__49545 = G__49561;
chunk__49546 = G__49562;
count__49547 = G__49563;
i__49548 = G__49564;
continue;
} else {
var vec__49552 = cljs.core.first(seq__49545__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49552,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49552,(1),null);
var G__49553_49565 = v;
var G__49554_49566 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49553_49565,G__49554_49566) : f.call(null,G__49553_49565,G__49554_49566));

var G__49567 = cljs.core.next(seq__49545__$1);
var G__49568 = null;
var G__49569 = (0);
var G__49570 = (0);
seq__49545 = G__49567;
chunk__49546 = G__49568;
count__49547 = G__49569;
i__49548 = G__49570;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__49543_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__49543_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__49571 = null;
var G__49571__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49571__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49571 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49571__2.call(this,self__,k);
case 3:
return G__49571__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49571.cljs$core$IFn$_invoke$arity$2 = G__49571__2;
G__49571.cljs$core$IFn$_invoke$arity$3 = G__49571__3;
return G__49571;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args49544){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49544)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__49572 = (i + (1));
var G__49573 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__49572;
out = G__49573;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__49574 = (i + (1));
var G__49575 = cljs.core._conj_BANG_(out,(items[i]));
i = G__49574;
out = G__49575;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__49577 = null;
var G__49577__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__49577__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__49577 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49577__2.call(this,self__,k);
case 3:
return G__49577__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49577.cljs$core$IFn$_invoke$arity$2 = G__49577__2;
G__49577.cljs$core$IFn$_invoke$arity$3 = G__49577__3;
return G__49577;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args49576){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49576)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__49580 = cljs.core.seq(coll);
var chunk__49581 = null;
var count__49582 = (0);
var i__49583 = (0);
while(true){
if((i__49583 < count__49582)){
var vec__49584 = chunk__49581.cljs$core$IIndexed$_nth$arity$2(null,i__49583);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49584,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49584,(1),null);
var G__49585_49590 = v;
var G__49586_49591 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49585_49590,G__49586_49591) : f.call(null,G__49585_49590,G__49586_49591));

var G__49592 = seq__49580;
var G__49593 = chunk__49581;
var G__49594 = count__49582;
var G__49595 = (i__49583 + (1));
seq__49580 = G__49592;
chunk__49581 = G__49593;
count__49582 = G__49594;
i__49583 = G__49595;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__49580);
if(temp__4126__auto__){
var seq__49580__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__49580__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__49580__$1);
var G__49596 = cljs.core.chunk_rest(seq__49580__$1);
var G__49597 = c__16932__auto__;
var G__49598 = cljs.core.count(c__16932__auto__);
var G__49599 = (0);
seq__49580 = G__49596;
chunk__49581 = G__49597;
count__49582 = G__49598;
i__49583 = G__49599;
continue;
} else {
var vec__49587 = cljs.core.first(seq__49580__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49587,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49587,(1),null);
var G__49588_49600 = v;
var G__49589_49601 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49588_49600,G__49589_49601) : f.call(null,G__49588_49600,G__49589_49601));

var G__49602 = cljs.core.next(seq__49580__$1);
var G__49603 = null;
var G__49604 = (0);
var G__49605 = (0);
seq__49580 = G__49602;
chunk__49581 = G__49603;
count__49582 = G__49604;
i__49583 = G__49605;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__49578_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__49578_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__49606 = null;
var G__49606__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__49606__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__49606 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__49606__2.call(this,self__,k);
case 3:
return G__49606__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49606.cljs$core$IFn$_invoke$arity$2 = G__49606__2;
G__49606.cljs$core$IFn$_invoke$arity$3 = G__49606__3;
return G__49606;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args49579){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args49579)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__17026__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__17026__auto__.length)){
var G__49607 = (i + (1));
var G__49608 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__49607;
res = G__49608;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__49609 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__49610 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__49609;
out = G__49610;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__49611__delegate = function (keys){
return cljs.core.set(keys);
};
var G__49611 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__49612__i = 0, G__49612__a = new Array(arguments.length -  0);
while (G__49612__i < G__49612__a.length) {G__49612__a[G__49612__i] = arguments[G__49612__i + 0]; ++G__49612__i;}
  keys = new cljs.core.IndexedSeq(G__49612__a,0);
} 
return G__49611__delegate.call(this,keys);};
G__49611.cljs$lang$maxFixedArity = 0;
G__49611.cljs$lang$applyTo = (function (arglist__49613){
var keys = cljs.core.seq(arglist__49613);
return G__49611__delegate(keys);
});
G__49611.cljs$core$IFn$_invoke$arity$variadic = G__49611__delegate;
return G__49611;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__49614 = null;
if (arguments.length > 0) {
var G__49615__i = 0, G__49615__a = new Array(arguments.length -  0);
while (G__49615__i < G__49615__a.length) {G__49615__a[G__49615__i] = arguments[G__49615__i + 0]; ++G__49615__i;}
G__49614 = new cljs.core.IndexedSeq(G__49615__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__49614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__49616__i = 0, G__49616__a = new Array(arguments.length -  0);
while (G__49616__i < G__49616__a.length) {G__49616__a[G__49616__i] = arguments[G__49616__i + 0]; ++G__49616__i;}
  keys = new cljs.core.IndexedSeq(G__49616__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__49617){
var keys = cljs.core.seq(arglist__49617);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__49618__i = 0, G__49618__a = new Array(arguments.length -  1);
while (G__49618__i < G__49618__a.length) {G__49618__a[G__49618__i] = arguments[G__49618__i + 1]; ++G__49618__i;}
  keys = new cljs.core.IndexedSeq(G__49618__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__49619){
var comparator = cljs.core.first(arglist__49619);
var keys = cljs.core.rest(arglist__49619);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__49620_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__49620_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__49620_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__49621_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__49621_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__49621_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__49642 = null;
var G__49642__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__49642__1 = (function (result){
var G__49632 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__49632) : rf.call(null,G__49632));
});
var G__49642__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__49633 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49633) : cljs.core.deref.call(null,G__49633));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__49634 = result;
var G__49635 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49634,G__49635) : rf.call(null,G__49634,G__49635));
}
});
G__49642 = function(result,input){
switch(arguments.length){
case 0:
return G__49642__0.call(this);
case 1:
return G__49642__1.call(this,result);
case 2:
return G__49642__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49642.cljs$core$IFn$_invoke$arity$0 = G__49642__0;
G__49642.cljs$core$IFn$_invoke$arity$1 = G__49642__1;
G__49642.cljs$core$IFn$_invoke$arity$2 = G__49642__2;
return G__49642;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__49640,seen__$1){
while(true){
var vec__49641 = p__49640;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49641,(0),null);
var xs__$1 = vec__49641;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__49643 = cljs.core.rest(s);
var G__49644 = seen__$1;
p__49640 = G__49643;
seen__$1 = G__49644;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__49645 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__49646 = cljs.core.next(s__$1);
ret = G__49645;
s__$1 = G__49646;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__49648 = x;
if(G__49648){
var bit__16819__auto__ = (G__49648.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16819__auto__) || (G__49648.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__49649 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__49650 = cljs.core.next(ks);
var G__49651 = cljs.core.next(vs);
map = G__49649;
ks = G__49650;
vs = G__49651;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__49662 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__49662) : k.call(null,G__49662));
})() > (function (){var G__49663 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__49663) : k.call(null,G__49663));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__49664__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__49652_SHARP_,p2__49653_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__49652_SHARP_,p2__49653_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__49664 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__49665__i = 0, G__49665__a = new Array(arguments.length -  3);
while (G__49665__i < G__49665__a.length) {G__49665__a[G__49665__i] = arguments[G__49665__i + 3]; ++G__49665__i;}
  more = new cljs.core.IndexedSeq(G__49665__a,0);
} 
return G__49664__delegate.call(this,k,x,y,more);};
G__49664.cljs$lang$maxFixedArity = 3;
G__49664.cljs$lang$applyTo = (function (arglist__49666){
var k = cljs.core.first(arglist__49666);
arglist__49666 = cljs.core.next(arglist__49666);
var x = cljs.core.first(arglist__49666);
arglist__49666 = cljs.core.next(arglist__49666);
var y = cljs.core.first(arglist__49666);
var more = cljs.core.rest(arglist__49666);
return G__49664__delegate(k,x,y,more);
});
G__49664.cljs$core$IFn$_invoke$arity$variadic = G__49664__delegate;
return G__49664;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__49667 = null;
if (arguments.length > 3) {
var G__49668__i = 0, G__49668__a = new Array(arguments.length -  3);
while (G__49668__i < G__49668__a.length) {G__49668__a[G__49668__i] = arguments[G__49668__i + 3]; ++G__49668__i;}
G__49667 = new cljs.core.IndexedSeq(G__49668__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__49667);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__49679 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__49679) : k.call(null,G__49679));
})() < (function (){var G__49680 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__49680) : k.call(null,G__49680));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__49681__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__49669_SHARP_,p2__49670_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__49669_SHARP_,p2__49670_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__49681 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__49682__i = 0, G__49682__a = new Array(arguments.length -  3);
while (G__49682__i < G__49682__a.length) {G__49682__a[G__49682__i] = arguments[G__49682__i + 3]; ++G__49682__i;}
  more = new cljs.core.IndexedSeq(G__49682__a,0);
} 
return G__49681__delegate.call(this,k,x,y,more);};
G__49681.cljs$lang$maxFixedArity = 3;
G__49681.cljs$lang$applyTo = (function (arglist__49683){
var k = cljs.core.first(arglist__49683);
arglist__49683 = cljs.core.next(arglist__49683);
var x = cljs.core.first(arglist__49683);
arglist__49683 = cljs.core.next(arglist__49683);
var y = cljs.core.first(arglist__49683);
var more = cljs.core.rest(arglist__49683);
return G__49681__delegate(k,x,y,more);
});
G__49681.cljs$core$IFn$_invoke$arity$variadic = G__49681__delegate;
return G__49681;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__49684 = null;
if (arguments.length > 3) {
var G__49685__i = 0, G__49685__a = new Array(arguments.length -  3);
while (G__49685__i < G__49685__a.length) {G__49685__a[G__49685__i] = arguments[G__49685__i + 3]; ++G__49685__i;}
G__49684 = new cljs.core.IndexedSeq(G__49685__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__49684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__49702 = null;
var G__49702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__49702__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__49697 = result;
var G__49698 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49697,G__49698) : rf.call(null,G__49697,G__49698));
})());
})());
var G__49699 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__49699) : rf.call(null,G__49699));
});
var G__49702__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__49700 = result;
var G__49701 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49700,G__49701) : rf.call(null,G__49700,G__49701));
} else {
return result;
}
});
G__49702 = function(result,input){
switch(arguments.length){
case 0:
return G__49702__0.call(this);
case 1:
return G__49702__1.call(this,result);
case 2:
return G__49702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49702.cljs$core$IFn$_invoke$arity$0 = G__49702__0;
G__49702.cljs$core$IFn$_invoke$arity$1 = G__49702__1;
G__49702.cljs$core$IFn$_invoke$arity$2 = G__49702__2;
return G__49702;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__49715 = null;
var G__49715__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__49715__1 = (function (result){
var G__49710 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__49710) : rf.call(null,G__49710));
});
var G__49715__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__49711 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__49711) : pred.call(null,G__49711));
})())){
var G__49712 = result;
var G__49713 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49712,G__49713) : rf.call(null,G__49712,G__49713));
} else {
return cljs.core.reduced(result);
}
});
G__49715 = function(result,input){
switch(arguments.length){
case 0:
return G__49715__0.call(this);
case 1:
return G__49715__1.call(this,result);
case 2:
return G__49715__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49715.cljs$core$IFn$_invoke$arity$0 = G__49715__0;
G__49715.cljs$core$IFn$_invoke$arity$1 = G__49715__1;
G__49715.cljs$core$IFn$_invoke$arity$2 = G__49715__2;
return G__49715;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__49714 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__49714) : pred.call(null,G__49714));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__49720 = (function (){var G__49722 = cljs.core._entry_key(sc,e);
var G__49723 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__49722,G__49723) : comp.call(null,G__49722,G__49723));
})();
var G__49721 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__49720,G__49721) : test.call(null,G__49720,G__49721));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__49727 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49727,(0),null);
var s = vec__49727;
if(cljs.core.truth_((function (){var G__49728 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__49728) : include.call(null,G__49728));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__49729 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49729,(0),null);
var s = vec__49729;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__49733 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49733,(0),null);
var s = vec__49733;
if(cljs.core.truth_((function (){var G__49734 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__49734) : include.call(null,G__49734));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__49735 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49735,(0),null);
var s = vec__49735;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__49736 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__49736) : Math.ceil.call(null,G__49736));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16566__auto__ = self__.__hash;
if(!((h__16566__auto__ == null))){
return h__16566__auto__;
} else {
var h__16566__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16566__auto____$1;

return h__16566__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__49737 = ret;
var G__49738 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49737,G__49738) : f.call(null,G__49737,G__49738));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__49739 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49739) : cljs.core.deref.call(null,G__49739));
} else {
var G__49740 = (i + self__.step);
var G__49741 = ret__$1;
i = G__49740;
ret = G__49741;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__49759 = null;
var G__49759__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__49759__1 = (function (result){
var G__49756 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__49756) : rf.call(null,G__49756));
});
var G__49759__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__49757 = result;
var G__49758 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49757,G__49758) : rf.call(null,G__49757,G__49758));
} else {
return result;
}
});
G__49759 = function(result,input){
switch(arguments.length){
case 0:
return G__49759__0.call(this);
case 1:
return G__49759__1.call(this,result);
case 2:
return G__49759__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49759.cljs$core$IFn$_invoke$arity$0 = G__49759__0;
G__49759.cljs$core$IFn$_invoke$arity$1 = G__49759__1;
G__49759.cljs$core$IFn$_invoke$arity$2 = G__49759__2;
return G__49759;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__49781 = null;
var G__49781__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__49781__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__49772 = result;
var G__49773 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49772,G__49773) : rf.call(null,G__49772,G__49773));
})());
})());
var G__49774 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__49774) : rf.call(null,G__49774));
});
var G__49781__2 = (function (result,input){
var pval = (function (){var G__49775 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__49775) : cljs.core.deref.call(null,G__49775));
})();
var val = (function (){var G__49776 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49776) : f.call(null,G__49776));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__49777 = result;
var G__49778 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__49777,G__49778) : rf.call(null,G__49777,G__49778));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__49781 = function(result,input){
switch(arguments.length){
case 0:
return G__49781__0.call(this);
case 1:
return G__49781__1.call(this,result);
case 2:
return G__49781__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49781.cljs$core$IFn$_invoke$arity$0 = G__49781__0;
G__49781.cljs$core$IFn$_invoke$arity$1 = G__49781__1;
G__49781.cljs$core$IFn$_invoke$arity$2 = G__49781__2;
return G__49781;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__49779 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49779) : f.call(null,G__49779));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__49760_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__49780 = p1__49760_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49780) : f.call(null,G__49780));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__49790 = init;
var G__49791 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49790,G__49791) : f.call(null,G__49790,G__49791));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__49886 = null;
var G__49886__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__49886__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49844 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49844) : f.call(null,G__49844));
})()],null));
});
var G__49886__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49845 = x;
var G__49846 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49845,G__49846) : f.call(null,G__49845,G__49846));
})()],null));
});
var G__49886__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49847 = x;
var G__49848 = y;
var G__49849 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49847,G__49848,G__49849) : f.call(null,G__49847,G__49848,G__49849));
})()],null));
});
var G__49886__4 = (function() { 
var G__49887__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__49887 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__49888__i = 0, G__49888__a = new Array(arguments.length -  3);
while (G__49888__i < G__49888__a.length) {G__49888__a[G__49888__i] = arguments[G__49888__i + 3]; ++G__49888__i;}
  args = new cljs.core.IndexedSeq(G__49888__a,0);
} 
return G__49887__delegate.call(this,x,y,z,args);};
G__49887.cljs$lang$maxFixedArity = 3;
G__49887.cljs$lang$applyTo = (function (arglist__49889){
var x = cljs.core.first(arglist__49889);
arglist__49889 = cljs.core.next(arglist__49889);
var y = cljs.core.first(arglist__49889);
arglist__49889 = cljs.core.next(arglist__49889);
var z = cljs.core.first(arglist__49889);
var args = cljs.core.rest(arglist__49889);
return G__49887__delegate(x,y,z,args);
});
G__49887.cljs$core$IFn$_invoke$arity$variadic = G__49887__delegate;
return G__49887;
})()
;
G__49886 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__49886__0.call(this);
case 1:
return G__49886__1.call(this,x);
case 2:
return G__49886__2.call(this,x,y);
case 3:
return G__49886__3.call(this,x,y,z);
default:
var G__49890 = null;
if (arguments.length > 3) {
var G__49891__i = 0, G__49891__a = new Array(arguments.length -  3);
while (G__49891__i < G__49891__a.length) {G__49891__a[G__49891__i] = arguments[G__49891__i + 3]; ++G__49891__i;}
G__49890 = new cljs.core.IndexedSeq(G__49891__a,0);
}
return G__49886__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__49890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49886.cljs$lang$maxFixedArity = 3;
G__49886.cljs$lang$applyTo = G__49886__4.cljs$lang$applyTo;
G__49886.cljs$core$IFn$_invoke$arity$0 = G__49886__0;
G__49886.cljs$core$IFn$_invoke$arity$1 = G__49886__1;
G__49886.cljs$core$IFn$_invoke$arity$2 = G__49886__2;
G__49886.cljs$core$IFn$_invoke$arity$3 = G__49886__3;
G__49886.cljs$core$IFn$_invoke$arity$variadic = G__49886__4.cljs$core$IFn$_invoke$arity$variadic;
return G__49886;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__49892 = null;
var G__49892__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__49892__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49850 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49850) : f.call(null,G__49850));
})(),(function (){var G__49851 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__49851) : g.call(null,G__49851));
})()],null));
});
var G__49892__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49852 = x;
var G__49853 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49852,G__49853) : f.call(null,G__49852,G__49853));
})(),(function (){var G__49854 = x;
var G__49855 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__49854,G__49855) : g.call(null,G__49854,G__49855));
})()],null));
});
var G__49892__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49856 = x;
var G__49857 = y;
var G__49858 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49856,G__49857,G__49858) : f.call(null,G__49856,G__49857,G__49858));
})(),(function (){var G__49859 = x;
var G__49860 = y;
var G__49861 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__49859,G__49860,G__49861) : g.call(null,G__49859,G__49860,G__49861));
})()],null));
});
var G__49892__4 = (function() { 
var G__49893__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__49893 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__49894__i = 0, G__49894__a = new Array(arguments.length -  3);
while (G__49894__i < G__49894__a.length) {G__49894__a[G__49894__i] = arguments[G__49894__i + 3]; ++G__49894__i;}
  args = new cljs.core.IndexedSeq(G__49894__a,0);
} 
return G__49893__delegate.call(this,x,y,z,args);};
G__49893.cljs$lang$maxFixedArity = 3;
G__49893.cljs$lang$applyTo = (function (arglist__49895){
var x = cljs.core.first(arglist__49895);
arglist__49895 = cljs.core.next(arglist__49895);
var y = cljs.core.first(arglist__49895);
arglist__49895 = cljs.core.next(arglist__49895);
var z = cljs.core.first(arglist__49895);
var args = cljs.core.rest(arglist__49895);
return G__49893__delegate(x,y,z,args);
});
G__49893.cljs$core$IFn$_invoke$arity$variadic = G__49893__delegate;
return G__49893;
})()
;
G__49892 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__49892__0.call(this);
case 1:
return G__49892__1.call(this,x);
case 2:
return G__49892__2.call(this,x,y);
case 3:
return G__49892__3.call(this,x,y,z);
default:
var G__49896 = null;
if (arguments.length > 3) {
var G__49897__i = 0, G__49897__a = new Array(arguments.length -  3);
while (G__49897__i < G__49897__a.length) {G__49897__a[G__49897__i] = arguments[G__49897__i + 3]; ++G__49897__i;}
G__49896 = new cljs.core.IndexedSeq(G__49897__a,0);
}
return G__49892__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__49896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49892.cljs$lang$maxFixedArity = 3;
G__49892.cljs$lang$applyTo = G__49892__4.cljs$lang$applyTo;
G__49892.cljs$core$IFn$_invoke$arity$0 = G__49892__0;
G__49892.cljs$core$IFn$_invoke$arity$1 = G__49892__1;
G__49892.cljs$core$IFn$_invoke$arity$2 = G__49892__2;
G__49892.cljs$core$IFn$_invoke$arity$3 = G__49892__3;
G__49892.cljs$core$IFn$_invoke$arity$variadic = G__49892__4.cljs$core$IFn$_invoke$arity$variadic;
return G__49892;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__49898 = null;
var G__49898__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__49898__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49862 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__49862) : f.call(null,G__49862));
})(),(function (){var G__49863 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__49863) : g.call(null,G__49863));
})(),(function (){var G__49864 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__49864) : h.call(null,G__49864));
})()],null));
});
var G__49898__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49865 = x;
var G__49866 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__49865,G__49866) : f.call(null,G__49865,G__49866));
})(),(function (){var G__49867 = x;
var G__49868 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__49867,G__49868) : g.call(null,G__49867,G__49868));
})(),(function (){var G__49869 = x;
var G__49870 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__49869,G__49870) : h.call(null,G__49869,G__49870));
})()],null));
});
var G__49898__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__49871 = x;
var G__49872 = y;
var G__49873 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__49871,G__49872,G__49873) : f.call(null,G__49871,G__49872,G__49873));
})(),(function (){var G__49874 = x;
var G__49875 = y;
var G__49876 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__49874,G__49875,G__49876) : g.call(null,G__49874,G__49875,G__49876));
})(),(function (){var G__49877 = x;
var G__49878 = y;
var G__49879 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__49877,G__49878,G__49879) : h.call(null,G__49877,G__49878,G__49879));
})()],null));
});
var G__49898__4 = (function() { 
var G__49899__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__49899 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__49900__i = 0, G__49900__a = new Array(arguments.length -  3);
while (G__49900__i < G__49900__a.length) {G__49900__a[G__49900__i] = arguments[G__49900__i + 3]; ++G__49900__i;}
  args = new cljs.core.IndexedSeq(G__49900__a,0);
} 
return G__49899__delegate.call(this,x,y,z,args);};
G__49899.cljs$lang$maxFixedArity = 3;
G__49899.cljs$lang$applyTo = (function (arglist__49901){
var x = cljs.core.first(arglist__49901);
arglist__49901 = cljs.core.next(arglist__49901);
var y = cljs.core.first(arglist__49901);
arglist__49901 = cljs.core.next(arglist__49901);
var z = cljs.core.first(arglist__49901);
var args = cljs.core.rest(arglist__49901);
return G__49899__delegate(x,y,z,args);
});
G__49899.cljs$core$IFn$_invoke$arity$variadic = G__49899__delegate;
return G__49899;
})()
;
G__49898 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__49898__0.call(this);
case 1:
return G__49898__1.call(this,x);
case 2:
return G__49898__2.call(this,x,y);
case 3:
return G__49898__3.call(this,x,y,z);
default:
var G__49902 = null;
if (arguments.length > 3) {
var G__49903__i = 0, G__49903__a = new Array(arguments.length -  3);
while (G__49903__i < G__49903__a.length) {G__49903__a[G__49903__i] = arguments[G__49903__i + 3]; ++G__49903__i;}
G__49902 = new cljs.core.IndexedSeq(G__49903__a,0);
}
return G__49898__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__49902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49898.cljs$lang$maxFixedArity = 3;
G__49898.cljs$lang$applyTo = G__49898__4.cljs$lang$applyTo;
G__49898.cljs$core$IFn$_invoke$arity$0 = G__49898__0;
G__49898.cljs$core$IFn$_invoke$arity$1 = G__49898__1;
G__49898.cljs$core$IFn$_invoke$arity$2 = G__49898__2;
G__49898.cljs$core$IFn$_invoke$arity$3 = G__49898__3;
G__49898.cljs$core$IFn$_invoke$arity$variadic = G__49898__4.cljs$core$IFn$_invoke$arity$variadic;
return G__49898;
})()
});
var juxt__4 = (function() { 
var G__49904__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__49905 = null;
var G__49905__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__49792_SHARP_,p2__49793_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__49792_SHARP_,(function (){return (p2__49793_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__49793_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__49793_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__49905__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__49794_SHARP_,p2__49795_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__49794_SHARP_,(function (){var G__49880 = x;
return (p2__49795_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__49795_SHARP_.cljs$core$IFn$_invoke$arity$1(G__49880) : p2__49795_SHARP_.call(null,G__49880));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__49905__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__49796_SHARP_,p2__49797_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__49796_SHARP_,(function (){var G__49881 = x;
var G__49882 = y;
return (p2__49797_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__49797_SHARP_.cljs$core$IFn$_invoke$arity$2(G__49881,G__49882) : p2__49797_SHARP_.call(null,G__49881,G__49882));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__49905__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__49798_SHARP_,p2__49799_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__49798_SHARP_,(function (){var G__49883 = x;
var G__49884 = y;
var G__49885 = z;
return (p2__49799_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__49799_SHARP_.cljs$core$IFn$_invoke$arity$3(G__49883,G__49884,G__49885) : p2__49799_SHARP_.call(null,G__49883,G__49884,G__49885));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__49905__4 = (function() { 
var G__49906__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__49800_SHARP_,p2__49801_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__49800_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__49801_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__49906 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__49907__i = 0, G__49907__a = new Array(arguments.length -  3);
while (G__49907__i < G__49907__a.length) {G__49907__a[G__49907__i] = arguments[G__49907__i + 3]; ++G__49907__i;}
  args = new cljs.core.IndexedSeq(G__49907__a,0);
} 
return G__49906__delegate.call(this,x,y,z,args);};
G__49906.cljs$lang$maxFixedArity = 3;
G__49906.cljs$lang$applyTo = (function (arglist__49908){
var x = cljs.core.first(arglist__49908);
arglist__49908 = cljs.core.next(arglist__49908);
var y = cljs.core.first(arglist__49908);
arglist__49908 = cljs.core.next(arglist__49908);
var z = cljs.core.first(arglist__49908);
var args = cljs.core.rest(arglist__49908);
return G__49906__delegate(x,y,z,args);
});
G__49906.cljs$core$IFn$_invoke$arity$variadic = G__49906__delegate;
return G__49906;
})()
;
G__49905 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__49905__0.call(this);
case 1:
return G__49905__1.call(this,x);
case 2:
return G__49905__2.call(this,x,y);
case 3:
return G__49905__3.call(this,x,y,z);
default:
var G__49909 = null;
if (arguments.length > 3) {
var G__49910__i = 0, G__49910__a = new Array(arguments.length -  3);
while (G__49910__i < G__49910__a.length) {G__49910__a[G__49910__i] = arguments[G__49910__i + 3]; ++G__49910__i;}
G__49909 = new cljs.core.IndexedSeq(G__49910__a,0);
}
return G__49905__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__49909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__49905.cljs$lang$maxFixedArity = 3;
G__49905.cljs$lang$applyTo = G__49905__4.cljs$lang$applyTo;
G__49905.cljs$core$IFn$_invoke$arity$0 = G__49905__0;
G__49905.cljs$core$IFn$_invoke$arity$1 = G__49905__1;
G__49905.cljs$core$IFn$_invoke$arity$2 = G__49905__2;
G__49905.cljs$core$IFn$_invoke$arity$3 = G__49905__3;
G__49905.cljs$core$IFn$_invoke$arity$variadic = G__49905__4.cljs$core$IFn$_invoke$arity$variadic;
return G__49905;
})()
;})(fs__$1))
};
var G__49904 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__49911__i = 0, G__49911__a = new Array(arguments.length -  3);
while (G__49911__i < G__49911__a.length) {G__49911__a[G__49911__i] = arguments[G__49911__i + 3]; ++G__49911__i;}
  fs = new cljs.core.IndexedSeq(G__49911__a,0);
} 
return G__49904__delegate.call(this,f,g,h,fs);};
G__49904.cljs$lang$maxFixedArity = 3;
G__49904.cljs$lang$applyTo = (function (arglist__49912){
var f = cljs.core.first(arglist__49912);
arglist__49912 = cljs.core.next(arglist__49912);
var g = cljs.core.first(arglist__49912);
arglist__49912 = cljs.core.next(arglist__49912);
var h = cljs.core.first(arglist__49912);
var fs = cljs.core.rest(arglist__49912);
return G__49904__delegate(f,g,h,fs);
});
G__49904.cljs$core$IFn$_invoke$arity$variadic = G__49904__delegate;
return G__49904;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__49913 = null;
if (arguments.length > 3) {
var G__49914__i = 0, G__49914__a = new Array(arguments.length -  3);
while (G__49914__i < G__49914__a.length) {G__49914__a[G__49914__i] = arguments[G__49914__i + 3]; ++G__49914__i;}
G__49913 = new cljs.core.IndexedSeq(G__49914__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__49913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__49915 = cljs.core.next(coll);
coll = G__49915;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__49916 = (n - (1));
var G__49917 = cljs.core.next(coll);
n = G__49916;
coll = G__49917;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__49921 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49921,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49921,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__49921,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_49929 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__49930_49936 = cljs.core.first(coll);
var G__49931_49937 = writer;
var G__49932_49938 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__49930_49936,G__49931_49937,G__49932_49938) : print_one.call(null,G__49930_49936,G__49931_49937,G__49932_49938));
} else {
}

var coll_49939__$1 = cljs.core.next(coll);
var n_49940 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_49939__$1) && (((n_49940 == null)) || (!((n_49940 === (0)))))){
cljs.core._write(writer,sep);

var G__49933_49941 = cljs.core.first(coll_49939__$1);
var G__49934_49942 = writer;
var G__49935_49943 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__49933_49941,G__49934_49942,G__49935_49943) : print_one.call(null,G__49933_49941,G__49934_49942,G__49935_49943));

var G__49944 = cljs.core.next(coll_49939__$1);
var G__49945 = (n_49940 - (1));
coll_49939__$1 = G__49944;
n_49940 = G__49945;
continue;
} else {
if((cljs.core.seq(coll_49939__$1)) && ((n_49940 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__16145__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_49929;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__49950 = cljs.core.seq(ss);
var chunk__49951 = null;
var count__49952 = (0);
var i__49953 = (0);
while(true){
if((i__49953 < count__49952)){
var s = chunk__49951.cljs$core$IIndexed$_nth$arity$2(null,i__49953);
cljs.core._write(writer,s);

var G__49954 = seq__49950;
var G__49955 = chunk__49951;
var G__49956 = count__49952;
var G__49957 = (i__49953 + (1));
seq__49950 = G__49954;
chunk__49951 = G__49955;
count__49952 = G__49956;
i__49953 = G__49957;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__49950);
if(temp__4126__auto__){
var seq__49950__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__49950__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__49950__$1);
var G__49958 = cljs.core.chunk_rest(seq__49950__$1);
var G__49959 = c__16932__auto__;
var G__49960 = cljs.core.count(c__16932__auto__);
var G__49961 = (0);
seq__49950 = G__49958;
chunk__49951 = G__49959;
count__49952 = G__49960;
i__49953 = G__49961;
continue;
} else {
var s = cljs.core.first(seq__49950__$1);
cljs.core._write(writer,s);

var G__49962 = cljs.core.next(seq__49950__$1);
var G__49963 = null;
var G__49964 = (0);
var G__49965 = (0);
seq__49950 = G__49962;
chunk__49951 = G__49963;
count__49952 = G__49964;
i__49953 = G__49965;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__49966__i = 0, G__49966__a = new Array(arguments.length -  1);
while (G__49966__i < G__49966__a.length) {G__49966__a[G__49966__i] = arguments[G__49966__i + 1]; ++G__49966__i;}
  ss = new cljs.core.IndexedSeq(G__49966__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__49967){
var writer = cljs.core.first(arglist__49967);
var ss = cljs.core.rest(arglist__49967);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj49969 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj49969;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__49972 = "[\\\\\"\b\f\n\r\t]";
var G__49973 = "g";
return RegExp(G__49972,G__49973);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__16133__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__16133__auto__)){
var and__16133__auto____$1 = (function (){var G__49987 = obj;
if(G__49987){
var bit__16826__auto__ = (G__49987.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16826__auto__) || (G__49987.cljs$core$IMeta$)){
return true;
} else {
if((!G__49987.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__49987);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__49987);
}
})();
if(and__16133__auto____$1){
return cljs.core.meta(obj);
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__49988_49998 = cljs.core.meta(obj);
var G__49989_49999 = writer;
var G__49990_50000 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__49988_49998,G__49989_49999,G__49990_50000) : cljs.core.pr_writer.call(null,G__49988_49998,G__49989_49999,G__49990_50000));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__49991 = obj;
if(G__49991){
var bit__16819__auto__ = (G__49991.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16819__auto__) || (G__49991.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__49992 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__49993 = cljs.core.pr_writer;
var G__49994 = writer;
var G__49995 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__49992,G__49993,G__49994,G__49995) : cljs.core.print_map.call(null,G__49992,G__49993,G__49994,G__49995));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__49996 = obj;
return goog.isString(G__49996);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__50001 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__50001;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__49997 = obj;
if(G__49997){
var bit__16826__auto__ = (G__49997.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16826__auto__) || (G__49997.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__49997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__49997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__49997);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__50005 = obj;
var G__50006 = writer;
var G__50007 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__50005,G__50006,G__50007) : alt_impl.call(null,G__50005,G__50006,G__50007));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__50012 = cljs.core.seq(cljs.core.next(objs));
var chunk__50013 = null;
var count__50014 = (0);
var i__50015 = (0);
while(true){
if((i__50015 < count__50014)){
var obj = chunk__50013.cljs$core$IIndexed$_nth$arity$2(null,i__50015);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__50016 = seq__50012;
var G__50017 = chunk__50013;
var G__50018 = count__50014;
var G__50019 = (i__50015 + (1));
seq__50012 = G__50016;
chunk__50013 = G__50017;
count__50014 = G__50018;
i__50015 = G__50019;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__50012);
if(temp__4126__auto__){
var seq__50012__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__50012__$1)){
var c__16932__auto__ = cljs.core.chunk_first(seq__50012__$1);
var G__50020 = cljs.core.chunk_rest(seq__50012__$1);
var G__50021 = c__16932__auto__;
var G__50022 = cljs.core.count(c__16932__auto__);
var G__50023 = (0);
seq__50012 = G__50020;
chunk__50013 = G__50021;
count__50014 = G__50022;
i__50015 = G__50023;
continue;
} else {
var obj = cljs.core.first(seq__50012__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__50024 = cljs.core.next(seq__50012__$1);
var G__50025 = null;
var G__50026 = (0);
var G__50027 = (0);
seq__50012 = G__50024;
chunk__50013 = G__50025;
count__50014 = G__50026;
i__50015 = G__50027;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50028__i = 0, G__50028__a = new Array(arguments.length -  0);
while (G__50028__i < G__50028__a.length) {G__50028__a[G__50028__i] = arguments[G__50028__i + 0]; ++G__50028__i;}
  objs = new cljs.core.IndexedSeq(G__50028__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__50029){
var objs = cljs.core.seq(arglist__50029);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50030__i = 0, G__50030__a = new Array(arguments.length -  0);
while (G__50030__i < G__50030__a.length) {G__50030__a[G__50030__i] = arguments[G__50030__i + 0]; ++G__50030__i;}
  objs = new cljs.core.IndexedSeq(G__50030__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__50031){
var objs = cljs.core.seq(arglist__50031);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50032__i = 0, G__50032__a = new Array(arguments.length -  0);
while (G__50032__i < G__50032__a.length) {G__50032__a[G__50032__i] = arguments[G__50032__i + 0]; ++G__50032__i;}
  objs = new cljs.core.IndexedSeq(G__50032__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__50033){
var objs = cljs.core.seq(arglist__50033);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50034__i = 0, G__50034__a = new Array(arguments.length -  0);
while (G__50034__i < G__50034__a.length) {G__50034__a[G__50034__i] = arguments[G__50034__i + 0]; ++G__50034__i;}
  objs = new cljs.core.IndexedSeq(G__50034__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__50035){
var objs = cljs.core.seq(arglist__50035);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50036__i = 0, G__50036__a = new Array(arguments.length -  0);
while (G__50036__i < G__50036__a.length) {G__50036__a[G__50036__i] = arguments[G__50036__i + 0]; ++G__50036__i;}
  objs = new cljs.core.IndexedSeq(G__50036__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__50037){
var objs = cljs.core.seq(arglist__50037);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50038__i = 0, G__50038__a = new Array(arguments.length -  0);
while (G__50038__i < G__50038__a.length) {G__50038__a[G__50038__i] = arguments[G__50038__i + 0]; ++G__50038__i;}
  objs = new cljs.core.IndexedSeq(G__50038__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__50039){
var objs = cljs.core.seq(arglist__50039);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50040__i = 0, G__50040__a = new Array(arguments.length -  0);
while (G__50040__i < G__50040__a.length) {G__50040__a[G__50040__i] = arguments[G__50040__i + 0]; ++G__50040__i;}
  objs = new cljs.core.IndexedSeq(G__50040__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__50041){
var objs = cljs.core.seq(arglist__50041);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__50042__i = 0, G__50042__a = new Array(arguments.length -  0);
while (G__50042__i < G__50042__a.length) {G__50042__a[G__50042__i] = arguments[G__50042__i + 0]; ++G__50042__i;}
  objs = new cljs.core.IndexedSeq(G__50042__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__50043){
var objs = cljs.core.seq(arglist__50043);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__50050_50056 = cljs.core.key(e);
var G__50051_50057 = w;
var G__50052_50058 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__50050_50056,G__50051_50057,G__50052_50058) : print_one.call(null,G__50050_50056,G__50051_50057,G__50052_50058));

cljs.core._write(w," ");

var G__50053 = cljs.core.val(e);
var G__50054 = w;
var G__50055 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__50053,G__50054,G__50055) : print_one.call(null,G__50053,G__50054,G__50055));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__50059__i = 0, G__50059__a = new Array(arguments.length -  2);
while (G__50059__i < G__50059__a.length) {G__50059__a[G__50059__i] = arguments[G__50059__i + 2]; ++G__50059__i;}
  args = new cljs.core.IndexedSeq(G__50059__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__50060){
var iref = cljs.core.first(arglist__50060);
arglist__50060 = cljs.core.next(arglist__50060);
var f = cljs.core.first(arglist__50060);
var args = cljs.core.rest(arglist__50060);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__50063 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__50063) : cljs.core.atom.call(null,G__50063));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__50065 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50065) : cljs.core.deref.call(null,G__50065));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__50066_SHARP_,p2__50067_SHARP_){
var ret = (function (){var G__50070 = p1__50066_SHARP_;
var G__50071 = p2__50067_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__50070,G__50071) : rf.call(null,G__50070,G__50071));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__50074 = null;
var G__50074__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__50074__1 = (function (result){
var G__50073 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__50073) : rf.call(null,G__50073));
});
var G__50074__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__50074 = function(result,input){
switch(arguments.length){
case 0:
return G__50074__0.call(this);
case 1:
return G__50074__1.call(this,result);
case 2:
return G__50074__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__50074.cljs$core$IFn$_invoke$arity$0 = G__50074__0;
G__50074.cljs$core$IFn$_invoke$arity$1 = G__50074__1;
G__50074.cljs$core$IFn$_invoke$arity$2 = G__50074__2;
return G__50074;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__50083 = null;
var G__50083__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__50083__1 = (function (result){
var G__50079 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__50079) : rf.call(null,G__50079));
});
var G__50083__2 = (function (result,input){
var prior = (function (){var G__50080 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50080) : cljs.core.deref.call(null,G__50080));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__50081 = result;
var G__50082 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__50081,G__50082) : rf.call(null,G__50081,G__50082));
}
});
G__50083 = function(result,input){
switch(arguments.length){
case 0:
return G__50083__0.call(this);
case 1:
return G__50083__1.call(this,result);
case 2:
return G__50083__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__50083.cljs$core$IFn$_invoke$arity$0 = G__50083__0;
G__50083.cljs$core$IFn$_invoke$arity$1 = G__50083__1;
G__50083.cljs$core$IFn$_invoke$arity$2 = G__50083__2;
return G__50083;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__17123__auto__ = this;
return cljs.core.es6_iterator(this__17123__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__50085_SHARP_,p2__50084_SHARP_){
var G__50087 = p2__50084_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__50087) : proc.call(null,G__50087));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj50089 = {};
return obj50089;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._clj__GT_js[(function (){var G__50093 = x__16789__auto__;
return goog.typeOf(G__50093);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._key__GT_js[(function (){var G__50097 = x__16789__auto__;
return goog.typeOf(G__50097);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__50100 = k;
if(G__50100){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__50100.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__50100.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__50100);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__50100);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__50101 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__50101) : cljs.core.clj__GT_js.call(null,G__50101));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__50117 = x;
if(G__50117){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__50117.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__50117.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__50117);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__50117);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj50119 = {};
return obj50119;
})();
var seq__50120_50130 = cljs.core.seq(x);
var chunk__50121_50131 = null;
var count__50122_50132 = (0);
var i__50123_50133 = (0);
while(true){
if((i__50123_50133 < count__50122_50132)){
var vec__50124_50134 = chunk__50121_50131.cljs$core$IIndexed$_nth$arity$2(null,i__50123_50133);
var k_50135 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50124_50134,(0),null);
var v_50136 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50124_50134,(1),null);
(m[cljs.core.key__GT_js(k_50135)] = clj__GT_js(v_50136));

var G__50137 = seq__50120_50130;
var G__50138 = chunk__50121_50131;
var G__50139 = count__50122_50132;
var G__50140 = (i__50123_50133 + (1));
seq__50120_50130 = G__50137;
chunk__50121_50131 = G__50138;
count__50122_50132 = G__50139;
i__50123_50133 = G__50140;
continue;
} else {
var temp__4126__auto___50141 = cljs.core.seq(seq__50120_50130);
if(temp__4126__auto___50141){
var seq__50120_50142__$1 = temp__4126__auto___50141;
if(cljs.core.chunked_seq_QMARK_(seq__50120_50142__$1)){
var c__16932__auto___50143 = cljs.core.chunk_first(seq__50120_50142__$1);
var G__50144 = cljs.core.chunk_rest(seq__50120_50142__$1);
var G__50145 = c__16932__auto___50143;
var G__50146 = cljs.core.count(c__16932__auto___50143);
var G__50147 = (0);
seq__50120_50130 = G__50144;
chunk__50121_50131 = G__50145;
count__50122_50132 = G__50146;
i__50123_50133 = G__50147;
continue;
} else {
var vec__50125_50148 = cljs.core.first(seq__50120_50142__$1);
var k_50149 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50125_50148,(0),null);
var v_50150 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50125_50148,(1),null);
(m[cljs.core.key__GT_js(k_50149)] = clj__GT_js(v_50150));

var G__50151 = cljs.core.next(seq__50120_50142__$1);
var G__50152 = null;
var G__50153 = (0);
var G__50154 = (0);
seq__50120_50130 = G__50151;
chunk__50121_50131 = G__50152;
count__50122_50132 = G__50153;
i__50123_50133 = G__50154;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__50126_50155 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__50127_50156 = null;
var count__50128_50157 = (0);
var i__50129_50158 = (0);
while(true){
if((i__50129_50158 < count__50128_50157)){
var x_50159__$1 = chunk__50127_50156.cljs$core$IIndexed$_nth$arity$2(null,i__50129_50158);
arr.push(x_50159__$1);

var G__50160 = seq__50126_50155;
var G__50161 = chunk__50127_50156;
var G__50162 = count__50128_50157;
var G__50163 = (i__50129_50158 + (1));
seq__50126_50155 = G__50160;
chunk__50127_50156 = G__50161;
count__50128_50157 = G__50162;
i__50129_50158 = G__50163;
continue;
} else {
var temp__4126__auto___50164 = cljs.core.seq(seq__50126_50155);
if(temp__4126__auto___50164){
var seq__50126_50165__$1 = temp__4126__auto___50164;
if(cljs.core.chunked_seq_QMARK_(seq__50126_50165__$1)){
var c__16932__auto___50166 = cljs.core.chunk_first(seq__50126_50165__$1);
var G__50167 = cljs.core.chunk_rest(seq__50126_50165__$1);
var G__50168 = c__16932__auto___50166;
var G__50169 = cljs.core.count(c__16932__auto___50166);
var G__50170 = (0);
seq__50126_50155 = G__50167;
chunk__50127_50156 = G__50168;
count__50128_50157 = G__50169;
i__50129_50158 = G__50170;
continue;
} else {
var x_50171__$1 = cljs.core.first(seq__50126_50165__$1);
arr.push(x_50171__$1);

var G__50172 = cljs.core.next(seq__50126_50165__$1);
var G__50173 = null;
var G__50174 = (0);
var G__50175 = (0);
seq__50126_50155 = G__50172;
chunk__50127_50156 = G__50173;
count__50128_50157 = G__50174;
i__50129_50158 = G__50175;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj50177 = {};
return obj50177;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__16133__auto__ = x;
if(and__16133__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__16133__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16789__auto__ = (((x == null))?null:x);
return (function (){var or__16145__auto__ = (cljs.core._js__GT_clj[(function (){var G__50181 = x__16789__auto__;
return goog.typeOf(G__50181);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__50238__delegate = function (x,opts){
var map__50211 = opts;
var map__50211__$1 = ((cljs.core.seq_QMARK_(map__50211))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__50211):map__50211);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50211__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__50211,map__50211__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__50227 = x__$1;
if(G__50227){
var bit__16826__auto__ = null;
if(cljs.core.truth_((function (){var or__16145__auto__ = bit__16826__auto__;
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return G__50227.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__50227.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__50227);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__50227);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16901__auto__ = ((function (map__50211,map__50211__$1,keywordize_keys,keyfn){
return (function iter__50228(s__50229){
return (new cljs.core.LazySeq(null,((function (map__50211,map__50211__$1,keywordize_keys,keyfn){
return (function (){
var s__50229__$1 = s__50229;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__50229__$1);
if(temp__4126__auto__){
var s__50229__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__50229__$2)){
var c__16899__auto__ = cljs.core.chunk_first(s__50229__$2);
var size__16900__auto__ = cljs.core.count(c__16899__auto__);
var b__50231 = cljs.core.chunk_buffer(size__16900__auto__);
if((function (){var i__50230 = (0);
while(true){
if((i__50230 < size__16900__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16899__auto__,i__50230);
cljs.core.chunk_append(b__50231,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__50236 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__50236) : keyfn.call(null,G__50236));
})(),thisfn((x__$1[k]))], null));

var G__50239 = (i__50230 + (1));
i__50230 = G__50239;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__50231),iter__50228(cljs.core.chunk_rest(s__50229__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__50231),null);
}
} else {
var k = cljs.core.first(s__50229__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__50237 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__50237) : keyfn.call(null,G__50237));
})(),thisfn((x__$1[k]))], null),iter__50228(cljs.core.rest(s__50229__$2)));
}
} else {
return null;
}
break;
}
});})(map__50211,map__50211__$1,keywordize_keys,keyfn))
,null,null));
});})(map__50211,map__50211__$1,keywordize_keys,keyfn))
;
return iter__16901__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__50211,map__50211__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__50238 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__50240__i = 0, G__50240__a = new Array(arguments.length -  1);
while (G__50240__i < G__50240__a.length) {G__50240__a[G__50240__i] = arguments[G__50240__i + 1]; ++G__50240__i;}
  opts = new cljs.core.IndexedSeq(G__50240__a,0);
} 
return G__50238__delegate.call(this,x,opts);};
G__50238.cljs$lang$maxFixedArity = 1;
G__50238.cljs$lang$applyTo = (function (arglist__50241){
var x = cljs.core.first(arglist__50241);
var opts = cljs.core.rest(arglist__50241);
return G__50238__delegate(x,opts);
});
G__50238.cljs$core$IFn$_invoke$arity$variadic = G__50238__delegate;
return G__50238;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__50242 = null;
if (arguments.length > 1) {
var G__50243__i = 0, G__50243__a = new Array(arguments.length -  1);
while (G__50243__i < G__50243__a.length) {G__50243__a[G__50243__i] = arguments[G__50243__i + 1]; ++G__50243__i;}
G__50242 = new cljs.core.IndexedSeq(G__50243__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__50242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__50246 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__50246) : cljs.core.atom.call(null,G__50246));
})();
return ((function (mem){
return (function() { 
var G__50248__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__50247 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50247) : cljs.core.deref.call(null,G__50247));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__50248 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__50249__i = 0, G__50249__a = new Array(arguments.length -  0);
while (G__50249__i < G__50249__a.length) {G__50249__a[G__50249__i] = arguments[G__50249__i + 0]; ++G__50249__i;}
  args = new cljs.core.IndexedSeq(G__50249__a,0);
} 
return G__50248__delegate.call(this,args);};
G__50248.cljs$lang$maxFixedArity = 0;
G__50248.cljs$lang$applyTo = (function (arglist__50250){
var args = cljs.core.seq(arglist__50250);
return G__50248__delegate(args);
});
G__50248.cljs$core$IFn$_invoke$arity$variadic = G__50248__delegate;
return G__50248;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__50252 = ret;
f = G__50252;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__50253__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__50253 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__50254__i = 0, G__50254__a = new Array(arguments.length -  1);
while (G__50254__i < G__50254__a.length) {G__50254__a[G__50254__i] = arguments[G__50254__i + 1]; ++G__50254__i;}
  args = new cljs.core.IndexedSeq(G__50254__a,0);
} 
return G__50253__delegate.call(this,f,args);};
G__50253.cljs$lang$maxFixedArity = 1;
G__50253.cljs$lang$applyTo = (function (arglist__50255){
var f = cljs.core.first(arglist__50255);
var args = cljs.core.rest(arglist__50255);
return G__50253__delegate(f,args);
});
G__50253.cljs$core$IFn$_invoke$arity$variadic = G__50253__delegate;
return G__50253;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__50256 = null;
if (arguments.length > 1) {
var G__50257__i = 0, G__50257__a = new Array(arguments.length -  1);
while (G__50257__i < G__50257__a.length) {G__50257__a[G__50257__i] = arguments[G__50257__i + 1]; ++G__50257__i;}
G__50256 = new cljs.core.IndexedSeq(G__50257__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__50256);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__50260 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__50260) : Math.floor.call(null,G__50260));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__50262 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__50262) : f.call(null,G__50262));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__50264 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__50264) : cljs.core.atom.call(null,G__50264));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__50265__i = 0, G__50265__a = new Array(arguments.length -  1);
while (G__50265__i < G__50265__a.length) {G__50265__a[G__50265__i] = arguments[G__50265__i + 1]; ++G__50265__i;}
  args = new cljs.core.IndexedSeq(G__50265__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__50266){
var f = cljs.core.first(arglist__50266);
var args = cljs.core.rest(arglist__50266);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__50331 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50331) : cljs.core.deref.call(null,G__50331));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__16145__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
var and__16133__auto__ = cljs.core.vector_QMARK_(parent);
if(and__16133__auto__){
var and__16133__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__16133__auto____$1){
var and__16133__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__16133__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__50356 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__50354 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__50354) : child.call(null,G__50354));
})(),(function (){var G__50355 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__50355) : parent.call(null,G__50355));
})());
var G__50357 = (i + (1));
ret = G__50356;
i = G__50357;
continue;
}
break;
}
} else {
return and__16133__auto____$2;
}
} else {
return and__16133__auto____$1;
}
} else {
return and__16133__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__50361 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50361) : cljs.core.deref.call(null,G__50361));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__50365 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50365) : cljs.core.deref.call(null,G__50365));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__50369 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50369) : cljs.core.deref.call(null,G__50369));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__50378 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__50378) : targets.call(null,G__50378));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__50379 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__50379) : sources.call(null,G__50379));
})()));
});})(tp,td,ta))
;
var or__16145__auto__ = ((cljs.core.contains_QMARK_((function (){var G__50383 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__50383) : tp.call(null,G__50383));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__50384 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__50384) : ta.call(null,G__50384));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__50385 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__50385) : ta.call(null,G__50385));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__50392 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__50392) : parentMap.call(null,G__50392));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__50393 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__50393) : parentMap.call(null,G__50393));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__50386_SHARP_){
return cljs.core.cons(cljs.core.first(p1__50386_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__50386_SHARP_),cljs.core.second(p1__50386_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__50394 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__50394) : parentMap.call(null,G__50394));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__50387_SHARP_,p2__50388_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__50387_SHARP_,p2__50388_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__50397 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50397) : cljs.core.deref.call(null,G__50397));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__50398 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50398) : cljs.core.deref.call(null,G__50398));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__50414 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50414) : cljs.core.deref.call(null,G__50414));
})().call(null,x);
var or__16145__auto__ = (cljs.core.truth_((function (){var and__16133__auto__ = xprefs;
if(cljs.core.truth_(and__16133__auto__)){
var G__50416 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__50416) : xprefs.call(null,G__50416));
} else {
return and__16133__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__50417 = cljs.core.rest(ps);
ps = G__50417;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$1)){
return or__16145__auto____$1;
} else {
var or__16145__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__50418 = cljs.core.rest(ps);
ps = G__50418;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__16145__auto____$2)){
return or__16145__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__16145__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__16145__auto__)){
return or__16145__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__50432){
var vec__50433 = p__50432;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50433,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50433,(1),null);
var e = vec__50433;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__50434 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50434) : cljs.core.deref.call(null,G__50434));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__16145__auto__ = (be == null);
if(or__16145__auto__){
return or__16145__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__50435 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50435) : cljs.core.deref.call(null,G__50435));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__50436 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50436) : cljs.core.deref.call(null,G__50436));
})(),(function (){var G__50437 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50437) : cljs.core.deref.call(null,G__50437));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj50439 = {};
return obj50439;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._reset[(function (){var G__50443 = x__16789__auto__;
return goog.typeOf(G__50443);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._reset["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._add_method[(function (){var G__50447 = x__16789__auto__;
return goog.typeOf(G__50447);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._add_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._remove_method[(function (){var G__50451 = x__16789__auto__;
return goog.typeOf(G__50451);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._remove_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefer_method[(function (){var G__50455 = x__16789__auto__;
return goog.typeOf(G__50455);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._get_method[(function (){var G__50459 = x__16789__auto__;
return goog.typeOf(G__50459);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._get_method["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._methods[(function (){var G__50463 = x__16789__auto__;
return goog.typeOf(G__50463);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._methods["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__16133__auto__ = mf;
if(and__16133__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__16133__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16789__auto__ = (((mf == null))?null:mf);
return (function (){var or__16145__auto__ = (cljs.core._prefers[(function (){var G__50467 = x__16789__auto__;
return goog.typeOf(G__50467);
})()]);
if(or__16145__auto__){
return or__16145__auto__;
} else {
var or__16145__auto____$1 = (cljs.core._prefers["_"]);
if(or__16145__auto____$1){
return or__16145__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__50469 = this$__$1;
return goog.getUid(G__50469);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__50470 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50470) : cljs.core.deref.call(null,G__50470));
})(),(function (){var G__50471 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50471) : cljs.core.deref.call(null,G__50471));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__50472 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50472) : cljs.core.deref.call(null,G__50472));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__50473 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50473) : cljs.core.deref.call(null,G__50473));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__50474 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50474) : cljs.core.deref.call(null,G__50474));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__50475 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__50475) : cljs.core.deref.call(null,G__50475));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__51316 = null;
var G__51316__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__51316__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50476 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__50476) : self__.dispatch_fn.call(null,G__50476));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50477 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__50477) : target_fn.call(null,G__50477));
});
var G__51316__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50478 = a;
var G__50479 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__50478,G__50479) : self__.dispatch_fn.call(null,G__50478,G__50479));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50480 = a;
var G__50481 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__50480,G__50481) : target_fn.call(null,G__50480,G__50481));
});
var G__51316__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50482 = a;
var G__50483 = b;
var G__50484 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__50482,G__50483,G__50484) : self__.dispatch_fn.call(null,G__50482,G__50483,G__50484));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50485 = a;
var G__50486 = b;
var G__50487 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__50485,G__50486,G__50487) : target_fn.call(null,G__50485,G__50486,G__50487));
});
var G__51316__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50488 = a;
var G__50489 = b;
var G__50490 = c;
var G__50491 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__50488,G__50489,G__50490,G__50491) : self__.dispatch_fn.call(null,G__50488,G__50489,G__50490,G__50491));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50492 = a;
var G__50493 = b;
var G__50494 = c;
var G__50495 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__50492,G__50493,G__50494,G__50495) : target_fn.call(null,G__50492,G__50493,G__50494,G__50495));
});
var G__51316__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50496 = a;
var G__50497 = b;
var G__50498 = c;
var G__50499 = d;
var G__50500 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__50496,G__50497,G__50498,G__50499,G__50500) : self__.dispatch_fn.call(null,G__50496,G__50497,G__50498,G__50499,G__50500));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50501 = a;
var G__50502 = b;
var G__50503 = c;
var G__50504 = d;
var G__50505 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__50501,G__50502,G__50503,G__50504,G__50505) : target_fn.call(null,G__50501,G__50502,G__50503,G__50504,G__50505));
});
var G__51316__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50506 = a;
var G__50507 = b;
var G__50508 = c;
var G__50509 = d;
var G__50510 = e;
var G__50511 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__50506,G__50507,G__50508,G__50509,G__50510,G__50511) : self__.dispatch_fn.call(null,G__50506,G__50507,G__50508,G__50509,G__50510,G__50511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50512 = a;
var G__50513 = b;
var G__50514 = c;
var G__50515 = d;
var G__50516 = e;
var G__50517 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__50512,G__50513,G__50514,G__50515,G__50516,G__50517) : target_fn.call(null,G__50512,G__50513,G__50514,G__50515,G__50516,G__50517));
});
var G__51316__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50518 = a;
var G__50519 = b;
var G__50520 = c;
var G__50521 = d;
var G__50522 = e;
var G__50523 = f;
var G__50524 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__50518,G__50519,G__50520,G__50521,G__50522,G__50523,G__50524) : self__.dispatch_fn.call(null,G__50518,G__50519,G__50520,G__50521,G__50522,G__50523,G__50524));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50525 = a;
var G__50526 = b;
var G__50527 = c;
var G__50528 = d;
var G__50529 = e;
var G__50530 = f;
var G__50531 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__50525,G__50526,G__50527,G__50528,G__50529,G__50530,G__50531) : target_fn.call(null,G__50525,G__50526,G__50527,G__50528,G__50529,G__50530,G__50531));
});
var G__51316__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50532 = a;
var G__50533 = b;
var G__50534 = c;
var G__50535 = d;
var G__50536 = e;
var G__50537 = f;
var G__50538 = g;
var G__50539 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__50532,G__50533,G__50534,G__50535,G__50536,G__50537,G__50538,G__50539) : self__.dispatch_fn.call(null,G__50532,G__50533,G__50534,G__50535,G__50536,G__50537,G__50538,G__50539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50540 = a;
var G__50541 = b;
var G__50542 = c;
var G__50543 = d;
var G__50544 = e;
var G__50545 = f;
var G__50546 = g;
var G__50547 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__50540,G__50541,G__50542,G__50543,G__50544,G__50545,G__50546,G__50547) : target_fn.call(null,G__50540,G__50541,G__50542,G__50543,G__50544,G__50545,G__50546,G__50547));
});
var G__51316__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50548 = a;
var G__50549 = b;
var G__50550 = c;
var G__50551 = d;
var G__50552 = e;
var G__50553 = f;
var G__50554 = g;
var G__50555 = h;
var G__50556 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__50548,G__50549,G__50550,G__50551,G__50552,G__50553,G__50554,G__50555,G__50556) : self__.dispatch_fn.call(null,G__50548,G__50549,G__50550,G__50551,G__50552,G__50553,G__50554,G__50555,G__50556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50557 = a;
var G__50558 = b;
var G__50559 = c;
var G__50560 = d;
var G__50561 = e;
var G__50562 = f;
var G__50563 = g;
var G__50564 = h;
var G__50565 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__50557,G__50558,G__50559,G__50560,G__50561,G__50562,G__50563,G__50564,G__50565) : target_fn.call(null,G__50557,G__50558,G__50559,G__50560,G__50561,G__50562,G__50563,G__50564,G__50565));
});
var G__51316__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50566 = a;
var G__50567 = b;
var G__50568 = c;
var G__50569 = d;
var G__50570 = e;
var G__50571 = f;
var G__50572 = g;
var G__50573 = h;
var G__50574 = i;
var G__50575 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__50566,G__50567,G__50568,G__50569,G__50570,G__50571,G__50572,G__50573,G__50574,G__50575) : self__.dispatch_fn.call(null,G__50566,G__50567,G__50568,G__50569,G__50570,G__50571,G__50572,G__50573,G__50574,G__50575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50576 = a;
var G__50577 = b;
var G__50578 = c;
var G__50579 = d;
var G__50580 = e;
var G__50581 = f;
var G__50582 = g;
var G__50583 = h;
var G__50584 = i;
var G__50585 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__50576,G__50577,G__50578,G__50579,G__50580,G__50581,G__50582,G__50583,G__50584,G__50585) : target_fn.call(null,G__50576,G__50577,G__50578,G__50579,G__50580,G__50581,G__50582,G__50583,G__50584,G__50585));
});
var G__51316__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50586 = a;
var G__50587 = b;
var G__50588 = c;
var G__50589 = d;
var G__50590 = e;
var G__50591 = f;
var G__50592 = g;
var G__50593 = h;
var G__50594 = i;
var G__50595 = j;
var G__50596 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__50586,G__50587,G__50588,G__50589,G__50590,G__50591,G__50592,G__50593,G__50594,G__50595,G__50596) : self__.dispatch_fn.call(null,G__50586,G__50587,G__50588,G__50589,G__50590,G__50591,G__50592,G__50593,G__50594,G__50595,G__50596));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50597 = a;
var G__50598 = b;
var G__50599 = c;
var G__50600 = d;
var G__50601 = e;
var G__50602 = f;
var G__50603 = g;
var G__50604 = h;
var G__50605 = i;
var G__50606 = j;
var G__50607 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__50597,G__50598,G__50599,G__50600,G__50601,G__50602,G__50603,G__50604,G__50605,G__50606,G__50607) : target_fn.call(null,G__50597,G__50598,G__50599,G__50600,G__50601,G__50602,G__50603,G__50604,G__50605,G__50606,G__50607));
});
var G__51316__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50608 = a;
var G__50609 = b;
var G__50610 = c;
var G__50611 = d;
var G__50612 = e;
var G__50613 = f;
var G__50614 = g;
var G__50615 = h;
var G__50616 = i;
var G__50617 = j;
var G__50618 = k;
var G__50619 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__50608,G__50609,G__50610,G__50611,G__50612,G__50613,G__50614,G__50615,G__50616,G__50617,G__50618,G__50619) : self__.dispatch_fn.call(null,G__50608,G__50609,G__50610,G__50611,G__50612,G__50613,G__50614,G__50615,G__50616,G__50617,G__50618,G__50619));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50620 = a;
var G__50621 = b;
var G__50622 = c;
var G__50623 = d;
var G__50624 = e;
var G__50625 = f;
var G__50626 = g;
var G__50627 = h;
var G__50628 = i;
var G__50629 = j;
var G__50630 = k;
var G__50631 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__50620,G__50621,G__50622,G__50623,G__50624,G__50625,G__50626,G__50627,G__50628,G__50629,G__50630,G__50631) : target_fn.call(null,G__50620,G__50621,G__50622,G__50623,G__50624,G__50625,G__50626,G__50627,G__50628,G__50629,G__50630,G__50631));
});
var G__51316__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50632 = a;
var G__50633 = b;
var G__50634 = c;
var G__50635 = d;
var G__50636 = e;
var G__50637 = f;
var G__50638 = g;
var G__50639 = h;
var G__50640 = i;
var G__50641 = j;
var G__50642 = k;
var G__50643 = l;
var G__50644 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__50632,G__50633,G__50634,G__50635,G__50636,G__50637,G__50638,G__50639,G__50640,G__50641,G__50642,G__50643,G__50644) : self__.dispatch_fn.call(null,G__50632,G__50633,G__50634,G__50635,G__50636,G__50637,G__50638,G__50639,G__50640,G__50641,G__50642,G__50643,G__50644));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50645 = a;
var G__50646 = b;
var G__50647 = c;
var G__50648 = d;
var G__50649 = e;
var G__50650 = f;
var G__50651 = g;
var G__50652 = h;
var G__50653 = i;
var G__50654 = j;
var G__50655 = k;
var G__50656 = l;
var G__50657 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__50645,G__50646,G__50647,G__50648,G__50649,G__50650,G__50651,G__50652,G__50653,G__50654,G__50655,G__50656,G__50657) : target_fn.call(null,G__50645,G__50646,G__50647,G__50648,G__50649,G__50650,G__50651,G__50652,G__50653,G__50654,G__50655,G__50656,G__50657));
});
var G__51316__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50658 = a;
var G__50659 = b;
var G__50660 = c;
var G__50661 = d;
var G__50662 = e;
var G__50663 = f;
var G__50664 = g;
var G__50665 = h;
var G__50666 = i;
var G__50667 = j;
var G__50668 = k;
var G__50669 = l;
var G__50670 = m;
var G__50671 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__50658,G__50659,G__50660,G__50661,G__50662,G__50663,G__50664,G__50665,G__50666,G__50667,G__50668,G__50669,G__50670,G__50671) : self__.dispatch_fn.call(null,G__50658,G__50659,G__50660,G__50661,G__50662,G__50663,G__50664,G__50665,G__50666,G__50667,G__50668,G__50669,G__50670,G__50671));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50672 = a;
var G__50673 = b;
var G__50674 = c;
var G__50675 = d;
var G__50676 = e;
var G__50677 = f;
var G__50678 = g;
var G__50679 = h;
var G__50680 = i;
var G__50681 = j;
var G__50682 = k;
var G__50683 = l;
var G__50684 = m;
var G__50685 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__50672,G__50673,G__50674,G__50675,G__50676,G__50677,G__50678,G__50679,G__50680,G__50681,G__50682,G__50683,G__50684,G__50685) : target_fn.call(null,G__50672,G__50673,G__50674,G__50675,G__50676,G__50677,G__50678,G__50679,G__50680,G__50681,G__50682,G__50683,G__50684,G__50685));
});
var G__51316__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50686 = a;
var G__50687 = b;
var G__50688 = c;
var G__50689 = d;
var G__50690 = e;
var G__50691 = f;
var G__50692 = g;
var G__50693 = h;
var G__50694 = i;
var G__50695 = j;
var G__50696 = k;
var G__50697 = l;
var G__50698 = m;
var G__50699 = n;
var G__50700 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__50686,G__50687,G__50688,G__50689,G__50690,G__50691,G__50692,G__50693,G__50694,G__50695,G__50696,G__50697,G__50698,G__50699,G__50700) : self__.dispatch_fn.call(null,G__50686,G__50687,G__50688,G__50689,G__50690,G__50691,G__50692,G__50693,G__50694,G__50695,G__50696,G__50697,G__50698,G__50699,G__50700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50701 = a;
var G__50702 = b;
var G__50703 = c;
var G__50704 = d;
var G__50705 = e;
var G__50706 = f;
var G__50707 = g;
var G__50708 = h;
var G__50709 = i;
var G__50710 = j;
var G__50711 = k;
var G__50712 = l;
var G__50713 = m;
var G__50714 = n;
var G__50715 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__50701,G__50702,G__50703,G__50704,G__50705,G__50706,G__50707,G__50708,G__50709,G__50710,G__50711,G__50712,G__50713,G__50714,G__50715) : target_fn.call(null,G__50701,G__50702,G__50703,G__50704,G__50705,G__50706,G__50707,G__50708,G__50709,G__50710,G__50711,G__50712,G__50713,G__50714,G__50715));
});
var G__51316__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50716 = a;
var G__50717 = b;
var G__50718 = c;
var G__50719 = d;
var G__50720 = e;
var G__50721 = f;
var G__50722 = g;
var G__50723 = h;
var G__50724 = i;
var G__50725 = j;
var G__50726 = k;
var G__50727 = l;
var G__50728 = m;
var G__50729 = n;
var G__50730 = o;
var G__50731 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__50716,G__50717,G__50718,G__50719,G__50720,G__50721,G__50722,G__50723,G__50724,G__50725,G__50726,G__50727,G__50728,G__50729,G__50730,G__50731) : self__.dispatch_fn.call(null,G__50716,G__50717,G__50718,G__50719,G__50720,G__50721,G__50722,G__50723,G__50724,G__50725,G__50726,G__50727,G__50728,G__50729,G__50730,G__50731));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50732 = a;
var G__50733 = b;
var G__50734 = c;
var G__50735 = d;
var G__50736 = e;
var G__50737 = f;
var G__50738 = g;
var G__50739 = h;
var G__50740 = i;
var G__50741 = j;
var G__50742 = k;
var G__50743 = l;
var G__50744 = m;
var G__50745 = n;
var G__50746 = o;
var G__50747 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__50732,G__50733,G__50734,G__50735,G__50736,G__50737,G__50738,G__50739,G__50740,G__50741,G__50742,G__50743,G__50744,G__50745,G__50746,G__50747) : target_fn.call(null,G__50732,G__50733,G__50734,G__50735,G__50736,G__50737,G__50738,G__50739,G__50740,G__50741,G__50742,G__50743,G__50744,G__50745,G__50746,G__50747));
});
var G__51316__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50748 = a;
var G__50749 = b;
var G__50750 = c;
var G__50751 = d;
var G__50752 = e;
var G__50753 = f;
var G__50754 = g;
var G__50755 = h;
var G__50756 = i;
var G__50757 = j;
var G__50758 = k;
var G__50759 = l;
var G__50760 = m;
var G__50761 = n;
var G__50762 = o;
var G__50763 = p;
var G__50764 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__50748,G__50749,G__50750,G__50751,G__50752,G__50753,G__50754,G__50755,G__50756,G__50757,G__50758,G__50759,G__50760,G__50761,G__50762,G__50763,G__50764) : self__.dispatch_fn.call(null,G__50748,G__50749,G__50750,G__50751,G__50752,G__50753,G__50754,G__50755,G__50756,G__50757,G__50758,G__50759,G__50760,G__50761,G__50762,G__50763,G__50764));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50765 = a;
var G__50766 = b;
var G__50767 = c;
var G__50768 = d;
var G__50769 = e;
var G__50770 = f;
var G__50771 = g;
var G__50772 = h;
var G__50773 = i;
var G__50774 = j;
var G__50775 = k;
var G__50776 = l;
var G__50777 = m;
var G__50778 = n;
var G__50779 = o;
var G__50780 = p;
var G__50781 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__50765,G__50766,G__50767,G__50768,G__50769,G__50770,G__50771,G__50772,G__50773,G__50774,G__50775,G__50776,G__50777,G__50778,G__50779,G__50780,G__50781) : target_fn.call(null,G__50765,G__50766,G__50767,G__50768,G__50769,G__50770,G__50771,G__50772,G__50773,G__50774,G__50775,G__50776,G__50777,G__50778,G__50779,G__50780,G__50781));
});
var G__51316__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50782 = a;
var G__50783 = b;
var G__50784 = c;
var G__50785 = d;
var G__50786 = e;
var G__50787 = f;
var G__50788 = g;
var G__50789 = h;
var G__50790 = i;
var G__50791 = j;
var G__50792 = k;
var G__50793 = l;
var G__50794 = m;
var G__50795 = n;
var G__50796 = o;
var G__50797 = p;
var G__50798 = q;
var G__50799 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__50782,G__50783,G__50784,G__50785,G__50786,G__50787,G__50788,G__50789,G__50790,G__50791,G__50792,G__50793,G__50794,G__50795,G__50796,G__50797,G__50798,G__50799) : self__.dispatch_fn.call(null,G__50782,G__50783,G__50784,G__50785,G__50786,G__50787,G__50788,G__50789,G__50790,G__50791,G__50792,G__50793,G__50794,G__50795,G__50796,G__50797,G__50798,G__50799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50800 = a;
var G__50801 = b;
var G__50802 = c;
var G__50803 = d;
var G__50804 = e;
var G__50805 = f;
var G__50806 = g;
var G__50807 = h;
var G__50808 = i;
var G__50809 = j;
var G__50810 = k;
var G__50811 = l;
var G__50812 = m;
var G__50813 = n;
var G__50814 = o;
var G__50815 = p;
var G__50816 = q;
var G__50817 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__50800,G__50801,G__50802,G__50803,G__50804,G__50805,G__50806,G__50807,G__50808,G__50809,G__50810,G__50811,G__50812,G__50813,G__50814,G__50815,G__50816,G__50817) : target_fn.call(null,G__50800,G__50801,G__50802,G__50803,G__50804,G__50805,G__50806,G__50807,G__50808,G__50809,G__50810,G__50811,G__50812,G__50813,G__50814,G__50815,G__50816,G__50817));
});
var G__51316__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50818 = a;
var G__50819 = b;
var G__50820 = c;
var G__50821 = d;
var G__50822 = e;
var G__50823 = f;
var G__50824 = g;
var G__50825 = h;
var G__50826 = i;
var G__50827 = j;
var G__50828 = k;
var G__50829 = l;
var G__50830 = m;
var G__50831 = n;
var G__50832 = o;
var G__50833 = p;
var G__50834 = q;
var G__50835 = r;
var G__50836 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__50818,G__50819,G__50820,G__50821,G__50822,G__50823,G__50824,G__50825,G__50826,G__50827,G__50828,G__50829,G__50830,G__50831,G__50832,G__50833,G__50834,G__50835,G__50836) : self__.dispatch_fn.call(null,G__50818,G__50819,G__50820,G__50821,G__50822,G__50823,G__50824,G__50825,G__50826,G__50827,G__50828,G__50829,G__50830,G__50831,G__50832,G__50833,G__50834,G__50835,G__50836));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50837 = a;
var G__50838 = b;
var G__50839 = c;
var G__50840 = d;
var G__50841 = e;
var G__50842 = f;
var G__50843 = g;
var G__50844 = h;
var G__50845 = i;
var G__50846 = j;
var G__50847 = k;
var G__50848 = l;
var G__50849 = m;
var G__50850 = n;
var G__50851 = o;
var G__50852 = p;
var G__50853 = q;
var G__50854 = r;
var G__50855 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__50837,G__50838,G__50839,G__50840,G__50841,G__50842,G__50843,G__50844,G__50845,G__50846,G__50847,G__50848,G__50849,G__50850,G__50851,G__50852,G__50853,G__50854,G__50855) : target_fn.call(null,G__50837,G__50838,G__50839,G__50840,G__50841,G__50842,G__50843,G__50844,G__50845,G__50846,G__50847,G__50848,G__50849,G__50850,G__50851,G__50852,G__50853,G__50854,G__50855));
});
var G__51316__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__50856 = a;
var G__50857 = b;
var G__50858 = c;
var G__50859 = d;
var G__50860 = e;
var G__50861 = f;
var G__50862 = g;
var G__50863 = h;
var G__50864 = i;
var G__50865 = j;
var G__50866 = k;
var G__50867 = l;
var G__50868 = m;
var G__50869 = n;
var G__50870 = o;
var G__50871 = p;
var G__50872 = q;
var G__50873 = r;
var G__50874 = s;
var G__50875 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__50856,G__50857,G__50858,G__50859,G__50860,G__50861,G__50862,G__50863,G__50864,G__50865,G__50866,G__50867,G__50868,G__50869,G__50870,G__50871,G__50872,G__50873,G__50874,G__50875) : self__.dispatch_fn.call(null,G__50856,G__50857,G__50858,G__50859,G__50860,G__50861,G__50862,G__50863,G__50864,G__50865,G__50866,G__50867,G__50868,G__50869,G__50870,G__50871,G__50872,G__50873,G__50874,G__50875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50876 = a;
var G__50877 = b;
var G__50878 = c;
var G__50879 = d;
var G__50880 = e;
var G__50881 = f;
var G__50882 = g;
var G__50883 = h;
var G__50884 = i;
var G__50885 = j;
var G__50886 = k;
var G__50887 = l;
var G__50888 = m;
var G__50889 = n;
var G__50890 = o;
var G__50891 = p;
var G__50892 = q;
var G__50893 = r;
var G__50894 = s;
var G__50895 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__50876,G__50877,G__50878,G__50879,G__50880,G__50881,G__50882,G__50883,G__50884,G__50885,G__50886,G__50887,G__50888,G__50889,G__50890,G__50891,G__50892,G__50893,G__50894,G__50895) : target_fn.call(null,G__50876,G__50877,G__50878,G__50879,G__50880,G__50881,G__50882,G__50883,G__50884,G__50885,G__50886,G__50887,G__50888,G__50889,G__50890,G__50891,G__50892,G__50893,G__50894,G__50895));
});
var G__51316__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__51316 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__51316__1.call(this,self__);
case 2:
return G__51316__2.call(this,self__,a);
case 3:
return G__51316__3.call(this,self__,a,b);
case 4:
return G__51316__4.call(this,self__,a,b,c);
case 5:
return G__51316__5.call(this,self__,a,b,c,d);
case 6:
return G__51316__6.call(this,self__,a,b,c,d,e);
case 7:
return G__51316__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__51316__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__51316__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__51316__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__51316__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__51316__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__51316__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__51316__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__51316__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__51316__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__51316__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__51316__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__51316__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__51316__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__51316__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__51316__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__51316.cljs$core$IFn$_invoke$arity$1 = G__51316__1;
G__51316.cljs$core$IFn$_invoke$arity$2 = G__51316__2;
G__51316.cljs$core$IFn$_invoke$arity$3 = G__51316__3;
G__51316.cljs$core$IFn$_invoke$arity$4 = G__51316__4;
G__51316.cljs$core$IFn$_invoke$arity$5 = G__51316__5;
G__51316.cljs$core$IFn$_invoke$arity$6 = G__51316__6;
G__51316.cljs$core$IFn$_invoke$arity$7 = G__51316__7;
G__51316.cljs$core$IFn$_invoke$arity$8 = G__51316__8;
G__51316.cljs$core$IFn$_invoke$arity$9 = G__51316__9;
G__51316.cljs$core$IFn$_invoke$arity$10 = G__51316__10;
G__51316.cljs$core$IFn$_invoke$arity$11 = G__51316__11;
G__51316.cljs$core$IFn$_invoke$arity$12 = G__51316__12;
G__51316.cljs$core$IFn$_invoke$arity$13 = G__51316__13;
G__51316.cljs$core$IFn$_invoke$arity$14 = G__51316__14;
G__51316.cljs$core$IFn$_invoke$arity$15 = G__51316__15;
G__51316.cljs$core$IFn$_invoke$arity$16 = G__51316__16;
G__51316.cljs$core$IFn$_invoke$arity$17 = G__51316__17;
G__51316.cljs$core$IFn$_invoke$arity$18 = G__51316__18;
G__51316.cljs$core$IFn$_invoke$arity$19 = G__51316__19;
G__51316.cljs$core$IFn$_invoke$arity$20 = G__51316__20;
G__51316.cljs$core$IFn$_invoke$arity$21 = G__51316__21;
G__51316.cljs$core$IFn$_invoke$arity$22 = G__51316__22;
return G__51316;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args50468){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args50468)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50896 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__50896) : self__.dispatch_fn.call(null,G__50896));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50897 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__50897) : target_fn.call(null,G__50897));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50898 = a;
var G__50899 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__50898,G__50899) : self__.dispatch_fn.call(null,G__50898,G__50899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50900 = a;
var G__50901 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__50900,G__50901) : target_fn.call(null,G__50900,G__50901));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50902 = a;
var G__50903 = b;
var G__50904 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__50902,G__50903,G__50904) : self__.dispatch_fn.call(null,G__50902,G__50903,G__50904));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50905 = a;
var G__50906 = b;
var G__50907 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__50905,G__50906,G__50907) : target_fn.call(null,G__50905,G__50906,G__50907));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50908 = a;
var G__50909 = b;
var G__50910 = c;
var G__50911 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__50908,G__50909,G__50910,G__50911) : self__.dispatch_fn.call(null,G__50908,G__50909,G__50910,G__50911));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50912 = a;
var G__50913 = b;
var G__50914 = c;
var G__50915 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__50912,G__50913,G__50914,G__50915) : target_fn.call(null,G__50912,G__50913,G__50914,G__50915));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50916 = a;
var G__50917 = b;
var G__50918 = c;
var G__50919 = d;
var G__50920 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__50916,G__50917,G__50918,G__50919,G__50920) : self__.dispatch_fn.call(null,G__50916,G__50917,G__50918,G__50919,G__50920));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50921 = a;
var G__50922 = b;
var G__50923 = c;
var G__50924 = d;
var G__50925 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__50921,G__50922,G__50923,G__50924,G__50925) : target_fn.call(null,G__50921,G__50922,G__50923,G__50924,G__50925));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50926 = a;
var G__50927 = b;
var G__50928 = c;
var G__50929 = d;
var G__50930 = e;
var G__50931 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__50926,G__50927,G__50928,G__50929,G__50930,G__50931) : self__.dispatch_fn.call(null,G__50926,G__50927,G__50928,G__50929,G__50930,G__50931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50932 = a;
var G__50933 = b;
var G__50934 = c;
var G__50935 = d;
var G__50936 = e;
var G__50937 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__50932,G__50933,G__50934,G__50935,G__50936,G__50937) : target_fn.call(null,G__50932,G__50933,G__50934,G__50935,G__50936,G__50937));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50938 = a;
var G__50939 = b;
var G__50940 = c;
var G__50941 = d;
var G__50942 = e;
var G__50943 = f;
var G__50944 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__50938,G__50939,G__50940,G__50941,G__50942,G__50943,G__50944) : self__.dispatch_fn.call(null,G__50938,G__50939,G__50940,G__50941,G__50942,G__50943,G__50944));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50945 = a;
var G__50946 = b;
var G__50947 = c;
var G__50948 = d;
var G__50949 = e;
var G__50950 = f;
var G__50951 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__50945,G__50946,G__50947,G__50948,G__50949,G__50950,G__50951) : target_fn.call(null,G__50945,G__50946,G__50947,G__50948,G__50949,G__50950,G__50951));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50952 = a;
var G__50953 = b;
var G__50954 = c;
var G__50955 = d;
var G__50956 = e;
var G__50957 = f;
var G__50958 = g;
var G__50959 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__50952,G__50953,G__50954,G__50955,G__50956,G__50957,G__50958,G__50959) : self__.dispatch_fn.call(null,G__50952,G__50953,G__50954,G__50955,G__50956,G__50957,G__50958,G__50959));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50960 = a;
var G__50961 = b;
var G__50962 = c;
var G__50963 = d;
var G__50964 = e;
var G__50965 = f;
var G__50966 = g;
var G__50967 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__50960,G__50961,G__50962,G__50963,G__50964,G__50965,G__50966,G__50967) : target_fn.call(null,G__50960,G__50961,G__50962,G__50963,G__50964,G__50965,G__50966,G__50967));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50968 = a;
var G__50969 = b;
var G__50970 = c;
var G__50971 = d;
var G__50972 = e;
var G__50973 = f;
var G__50974 = g;
var G__50975 = h;
var G__50976 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__50968,G__50969,G__50970,G__50971,G__50972,G__50973,G__50974,G__50975,G__50976) : self__.dispatch_fn.call(null,G__50968,G__50969,G__50970,G__50971,G__50972,G__50973,G__50974,G__50975,G__50976));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50977 = a;
var G__50978 = b;
var G__50979 = c;
var G__50980 = d;
var G__50981 = e;
var G__50982 = f;
var G__50983 = g;
var G__50984 = h;
var G__50985 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__50977,G__50978,G__50979,G__50980,G__50981,G__50982,G__50983,G__50984,G__50985) : target_fn.call(null,G__50977,G__50978,G__50979,G__50980,G__50981,G__50982,G__50983,G__50984,G__50985));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__50986 = a;
var G__50987 = b;
var G__50988 = c;
var G__50989 = d;
var G__50990 = e;
var G__50991 = f;
var G__50992 = g;
var G__50993 = h;
var G__50994 = i;
var G__50995 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__50986,G__50987,G__50988,G__50989,G__50990,G__50991,G__50992,G__50993,G__50994,G__50995) : self__.dispatch_fn.call(null,G__50986,G__50987,G__50988,G__50989,G__50990,G__50991,G__50992,G__50993,G__50994,G__50995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__50996 = a;
var G__50997 = b;
var G__50998 = c;
var G__50999 = d;
var G__51000 = e;
var G__51001 = f;
var G__51002 = g;
var G__51003 = h;
var G__51004 = i;
var G__51005 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__50996,G__50997,G__50998,G__50999,G__51000,G__51001,G__51002,G__51003,G__51004,G__51005) : target_fn.call(null,G__50996,G__50997,G__50998,G__50999,G__51000,G__51001,G__51002,G__51003,G__51004,G__51005));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51006 = a;
var G__51007 = b;
var G__51008 = c;
var G__51009 = d;
var G__51010 = e;
var G__51011 = f;
var G__51012 = g;
var G__51013 = h;
var G__51014 = i;
var G__51015 = j;
var G__51016 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__51006,G__51007,G__51008,G__51009,G__51010,G__51011,G__51012,G__51013,G__51014,G__51015,G__51016) : self__.dispatch_fn.call(null,G__51006,G__51007,G__51008,G__51009,G__51010,G__51011,G__51012,G__51013,G__51014,G__51015,G__51016));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51017 = a;
var G__51018 = b;
var G__51019 = c;
var G__51020 = d;
var G__51021 = e;
var G__51022 = f;
var G__51023 = g;
var G__51024 = h;
var G__51025 = i;
var G__51026 = j;
var G__51027 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__51017,G__51018,G__51019,G__51020,G__51021,G__51022,G__51023,G__51024,G__51025,G__51026,G__51027) : target_fn.call(null,G__51017,G__51018,G__51019,G__51020,G__51021,G__51022,G__51023,G__51024,G__51025,G__51026,G__51027));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51028 = a;
var G__51029 = b;
var G__51030 = c;
var G__51031 = d;
var G__51032 = e;
var G__51033 = f;
var G__51034 = g;
var G__51035 = h;
var G__51036 = i;
var G__51037 = j;
var G__51038 = k;
var G__51039 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__51028,G__51029,G__51030,G__51031,G__51032,G__51033,G__51034,G__51035,G__51036,G__51037,G__51038,G__51039) : self__.dispatch_fn.call(null,G__51028,G__51029,G__51030,G__51031,G__51032,G__51033,G__51034,G__51035,G__51036,G__51037,G__51038,G__51039));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51040 = a;
var G__51041 = b;
var G__51042 = c;
var G__51043 = d;
var G__51044 = e;
var G__51045 = f;
var G__51046 = g;
var G__51047 = h;
var G__51048 = i;
var G__51049 = j;
var G__51050 = k;
var G__51051 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__51040,G__51041,G__51042,G__51043,G__51044,G__51045,G__51046,G__51047,G__51048,G__51049,G__51050,G__51051) : target_fn.call(null,G__51040,G__51041,G__51042,G__51043,G__51044,G__51045,G__51046,G__51047,G__51048,G__51049,G__51050,G__51051));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51052 = a;
var G__51053 = b;
var G__51054 = c;
var G__51055 = d;
var G__51056 = e;
var G__51057 = f;
var G__51058 = g;
var G__51059 = h;
var G__51060 = i;
var G__51061 = j;
var G__51062 = k;
var G__51063 = l;
var G__51064 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__51052,G__51053,G__51054,G__51055,G__51056,G__51057,G__51058,G__51059,G__51060,G__51061,G__51062,G__51063,G__51064) : self__.dispatch_fn.call(null,G__51052,G__51053,G__51054,G__51055,G__51056,G__51057,G__51058,G__51059,G__51060,G__51061,G__51062,G__51063,G__51064));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51065 = a;
var G__51066 = b;
var G__51067 = c;
var G__51068 = d;
var G__51069 = e;
var G__51070 = f;
var G__51071 = g;
var G__51072 = h;
var G__51073 = i;
var G__51074 = j;
var G__51075 = k;
var G__51076 = l;
var G__51077 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__51065,G__51066,G__51067,G__51068,G__51069,G__51070,G__51071,G__51072,G__51073,G__51074,G__51075,G__51076,G__51077) : target_fn.call(null,G__51065,G__51066,G__51067,G__51068,G__51069,G__51070,G__51071,G__51072,G__51073,G__51074,G__51075,G__51076,G__51077));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51078 = a;
var G__51079 = b;
var G__51080 = c;
var G__51081 = d;
var G__51082 = e;
var G__51083 = f;
var G__51084 = g;
var G__51085 = h;
var G__51086 = i;
var G__51087 = j;
var G__51088 = k;
var G__51089 = l;
var G__51090 = m;
var G__51091 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__51078,G__51079,G__51080,G__51081,G__51082,G__51083,G__51084,G__51085,G__51086,G__51087,G__51088,G__51089,G__51090,G__51091) : self__.dispatch_fn.call(null,G__51078,G__51079,G__51080,G__51081,G__51082,G__51083,G__51084,G__51085,G__51086,G__51087,G__51088,G__51089,G__51090,G__51091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51092 = a;
var G__51093 = b;
var G__51094 = c;
var G__51095 = d;
var G__51096 = e;
var G__51097 = f;
var G__51098 = g;
var G__51099 = h;
var G__51100 = i;
var G__51101 = j;
var G__51102 = k;
var G__51103 = l;
var G__51104 = m;
var G__51105 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__51092,G__51093,G__51094,G__51095,G__51096,G__51097,G__51098,G__51099,G__51100,G__51101,G__51102,G__51103,G__51104,G__51105) : target_fn.call(null,G__51092,G__51093,G__51094,G__51095,G__51096,G__51097,G__51098,G__51099,G__51100,G__51101,G__51102,G__51103,G__51104,G__51105));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51106 = a;
var G__51107 = b;
var G__51108 = c;
var G__51109 = d;
var G__51110 = e;
var G__51111 = f;
var G__51112 = g;
var G__51113 = h;
var G__51114 = i;
var G__51115 = j;
var G__51116 = k;
var G__51117 = l;
var G__51118 = m;
var G__51119 = n;
var G__51120 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__51106,G__51107,G__51108,G__51109,G__51110,G__51111,G__51112,G__51113,G__51114,G__51115,G__51116,G__51117,G__51118,G__51119,G__51120) : self__.dispatch_fn.call(null,G__51106,G__51107,G__51108,G__51109,G__51110,G__51111,G__51112,G__51113,G__51114,G__51115,G__51116,G__51117,G__51118,G__51119,G__51120));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51121 = a;
var G__51122 = b;
var G__51123 = c;
var G__51124 = d;
var G__51125 = e;
var G__51126 = f;
var G__51127 = g;
var G__51128 = h;
var G__51129 = i;
var G__51130 = j;
var G__51131 = k;
var G__51132 = l;
var G__51133 = m;
var G__51134 = n;
var G__51135 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__51121,G__51122,G__51123,G__51124,G__51125,G__51126,G__51127,G__51128,G__51129,G__51130,G__51131,G__51132,G__51133,G__51134,G__51135) : target_fn.call(null,G__51121,G__51122,G__51123,G__51124,G__51125,G__51126,G__51127,G__51128,G__51129,G__51130,G__51131,G__51132,G__51133,G__51134,G__51135));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51136 = a;
var G__51137 = b;
var G__51138 = c;
var G__51139 = d;
var G__51140 = e;
var G__51141 = f;
var G__51142 = g;
var G__51143 = h;
var G__51144 = i;
var G__51145 = j;
var G__51146 = k;
var G__51147 = l;
var G__51148 = m;
var G__51149 = n;
var G__51150 = o;
var G__51151 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__51136,G__51137,G__51138,G__51139,G__51140,G__51141,G__51142,G__51143,G__51144,G__51145,G__51146,G__51147,G__51148,G__51149,G__51150,G__51151) : self__.dispatch_fn.call(null,G__51136,G__51137,G__51138,G__51139,G__51140,G__51141,G__51142,G__51143,G__51144,G__51145,G__51146,G__51147,G__51148,G__51149,G__51150,G__51151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51152 = a;
var G__51153 = b;
var G__51154 = c;
var G__51155 = d;
var G__51156 = e;
var G__51157 = f;
var G__51158 = g;
var G__51159 = h;
var G__51160 = i;
var G__51161 = j;
var G__51162 = k;
var G__51163 = l;
var G__51164 = m;
var G__51165 = n;
var G__51166 = o;
var G__51167 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__51152,G__51153,G__51154,G__51155,G__51156,G__51157,G__51158,G__51159,G__51160,G__51161,G__51162,G__51163,G__51164,G__51165,G__51166,G__51167) : target_fn.call(null,G__51152,G__51153,G__51154,G__51155,G__51156,G__51157,G__51158,G__51159,G__51160,G__51161,G__51162,G__51163,G__51164,G__51165,G__51166,G__51167));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51168 = a;
var G__51169 = b;
var G__51170 = c;
var G__51171 = d;
var G__51172 = e;
var G__51173 = f;
var G__51174 = g;
var G__51175 = h;
var G__51176 = i;
var G__51177 = j;
var G__51178 = k;
var G__51179 = l;
var G__51180 = m;
var G__51181 = n;
var G__51182 = o;
var G__51183 = p;
var G__51184 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__51168,G__51169,G__51170,G__51171,G__51172,G__51173,G__51174,G__51175,G__51176,G__51177,G__51178,G__51179,G__51180,G__51181,G__51182,G__51183,G__51184) : self__.dispatch_fn.call(null,G__51168,G__51169,G__51170,G__51171,G__51172,G__51173,G__51174,G__51175,G__51176,G__51177,G__51178,G__51179,G__51180,G__51181,G__51182,G__51183,G__51184));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51185 = a;
var G__51186 = b;
var G__51187 = c;
var G__51188 = d;
var G__51189 = e;
var G__51190 = f;
var G__51191 = g;
var G__51192 = h;
var G__51193 = i;
var G__51194 = j;
var G__51195 = k;
var G__51196 = l;
var G__51197 = m;
var G__51198 = n;
var G__51199 = o;
var G__51200 = p;
var G__51201 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__51185,G__51186,G__51187,G__51188,G__51189,G__51190,G__51191,G__51192,G__51193,G__51194,G__51195,G__51196,G__51197,G__51198,G__51199,G__51200,G__51201) : target_fn.call(null,G__51185,G__51186,G__51187,G__51188,G__51189,G__51190,G__51191,G__51192,G__51193,G__51194,G__51195,G__51196,G__51197,G__51198,G__51199,G__51200,G__51201));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51202 = a;
var G__51203 = b;
var G__51204 = c;
var G__51205 = d;
var G__51206 = e;
var G__51207 = f;
var G__51208 = g;
var G__51209 = h;
var G__51210 = i;
var G__51211 = j;
var G__51212 = k;
var G__51213 = l;
var G__51214 = m;
var G__51215 = n;
var G__51216 = o;
var G__51217 = p;
var G__51218 = q;
var G__51219 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__51202,G__51203,G__51204,G__51205,G__51206,G__51207,G__51208,G__51209,G__51210,G__51211,G__51212,G__51213,G__51214,G__51215,G__51216,G__51217,G__51218,G__51219) : self__.dispatch_fn.call(null,G__51202,G__51203,G__51204,G__51205,G__51206,G__51207,G__51208,G__51209,G__51210,G__51211,G__51212,G__51213,G__51214,G__51215,G__51216,G__51217,G__51218,G__51219));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51220 = a;
var G__51221 = b;
var G__51222 = c;
var G__51223 = d;
var G__51224 = e;
var G__51225 = f;
var G__51226 = g;
var G__51227 = h;
var G__51228 = i;
var G__51229 = j;
var G__51230 = k;
var G__51231 = l;
var G__51232 = m;
var G__51233 = n;
var G__51234 = o;
var G__51235 = p;
var G__51236 = q;
var G__51237 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__51220,G__51221,G__51222,G__51223,G__51224,G__51225,G__51226,G__51227,G__51228,G__51229,G__51230,G__51231,G__51232,G__51233,G__51234,G__51235,G__51236,G__51237) : target_fn.call(null,G__51220,G__51221,G__51222,G__51223,G__51224,G__51225,G__51226,G__51227,G__51228,G__51229,G__51230,G__51231,G__51232,G__51233,G__51234,G__51235,G__51236,G__51237));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51238 = a;
var G__51239 = b;
var G__51240 = c;
var G__51241 = d;
var G__51242 = e;
var G__51243 = f;
var G__51244 = g;
var G__51245 = h;
var G__51246 = i;
var G__51247 = j;
var G__51248 = k;
var G__51249 = l;
var G__51250 = m;
var G__51251 = n;
var G__51252 = o;
var G__51253 = p;
var G__51254 = q;
var G__51255 = r;
var G__51256 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__51238,G__51239,G__51240,G__51241,G__51242,G__51243,G__51244,G__51245,G__51246,G__51247,G__51248,G__51249,G__51250,G__51251,G__51252,G__51253,G__51254,G__51255,G__51256) : self__.dispatch_fn.call(null,G__51238,G__51239,G__51240,G__51241,G__51242,G__51243,G__51244,G__51245,G__51246,G__51247,G__51248,G__51249,G__51250,G__51251,G__51252,G__51253,G__51254,G__51255,G__51256));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51257 = a;
var G__51258 = b;
var G__51259 = c;
var G__51260 = d;
var G__51261 = e;
var G__51262 = f;
var G__51263 = g;
var G__51264 = h;
var G__51265 = i;
var G__51266 = j;
var G__51267 = k;
var G__51268 = l;
var G__51269 = m;
var G__51270 = n;
var G__51271 = o;
var G__51272 = p;
var G__51273 = q;
var G__51274 = r;
var G__51275 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__51257,G__51258,G__51259,G__51260,G__51261,G__51262,G__51263,G__51264,G__51265,G__51266,G__51267,G__51268,G__51269,G__51270,G__51271,G__51272,G__51273,G__51274,G__51275) : target_fn.call(null,G__51257,G__51258,G__51259,G__51260,G__51261,G__51262,G__51263,G__51264,G__51265,G__51266,G__51267,G__51268,G__51269,G__51270,G__51271,G__51272,G__51273,G__51274,G__51275));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__51276 = a;
var G__51277 = b;
var G__51278 = c;
var G__51279 = d;
var G__51280 = e;
var G__51281 = f;
var G__51282 = g;
var G__51283 = h;
var G__51284 = i;
var G__51285 = j;
var G__51286 = k;
var G__51287 = l;
var G__51288 = m;
var G__51289 = n;
var G__51290 = o;
var G__51291 = p;
var G__51292 = q;
var G__51293 = r;
var G__51294 = s;
var G__51295 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__51276,G__51277,G__51278,G__51279,G__51280,G__51281,G__51282,G__51283,G__51284,G__51285,G__51286,G__51287,G__51288,G__51289,G__51290,G__51291,G__51292,G__51293,G__51294,G__51295) : self__.dispatch_fn.call(null,G__51276,G__51277,G__51278,G__51279,G__51280,G__51281,G__51282,G__51283,G__51284,G__51285,G__51286,G__51287,G__51288,G__51289,G__51290,G__51291,G__51292,G__51293,G__51294,G__51295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__51296 = a;
var G__51297 = b;
var G__51298 = c;
var G__51299 = d;
var G__51300 = e;
var G__51301 = f;
var G__51302 = g;
var G__51303 = h;
var G__51304 = i;
var G__51305 = j;
var G__51306 = k;
var G__51307 = l;
var G__51308 = m;
var G__51309 = n;
var G__51310 = o;
var G__51311 = p;
var G__51312 = q;
var G__51313 = r;
var G__51314 = s;
var G__51315 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__51296,G__51297,G__51298,G__51299,G__51300,G__51301,G__51302,G__51303,G__51304,G__51305,G__51306,G__51307,G__51308,G__51309,G__51310,G__51311,G__51312,G__51313,G__51314,G__51315) : target_fn.call(null,G__51296,G__51297,G__51298,G__51299,G__51300,G__51301,G__51302,G__51303,G__51304,G__51305,G__51306,G__51307,G__51308,G__51309,G__51310,G__51311,G__51312,G__51313,G__51314,G__51315));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__51317 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__51317);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16732__auto__,writer__16733__auto__,opt__16734__auto__){
return cljs.core._write(writer__16733__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__51322 = msg;
return Error(G__51322);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__51327 = x;
var G__51328 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__51327,G__51328) : pred.call(null,G__51327,G__51328));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__51329 = y;
var G__51330 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__51329,G__51330) : pred.call(null,G__51329,G__51330));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1428649978965